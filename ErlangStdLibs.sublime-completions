{
  "source": "meta.type.function.erlang",
  "completions": [{
    "trigger": "bitsize/1",
    "contents": "bitsize(${1:arg0})"
  }, {
    "trigger": "bitstr_to_list/1",
    "contents": "bitstr_to_list(${1:arg0})"
  }, {
    "trigger": "garbage_collect_message_area/0",
    "contents": "garbage_collect_message_area()"
  }, {
    "trigger": "list_to_bitstr/1",
    "contents": "list_to_bitstr(${1:arg0})"
  }, {
    "trigger": "apply/2",
    "contents": "apply(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "spawn/2",
    "contents": "spawn(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "spawn_link/2",
    "contents": "spawn_link(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "spawn_monitor/3",
    "contents": "spawn_monitor(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "spawn_opt/2",
    "contents": "spawn_opt(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "spawn_opt/3",
    "contents": "spawn_opt(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "spawn/4",
    "contents": "spawn(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "spawn_link/4",
    "contents": "spawn_link(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "spawn_opt/4",
    "contents": "spawn_opt(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "spawn_opt/5",
    "contents": "spawn_opt(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "crasher/6",
    "contents": "crasher(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "yield/0",
    "contents": "yield()"
  }, {
    "trigger": "nodes/0",
    "contents": "nodes()"
  }, {
    "trigger": "disconnect_node/1",
    "contents": "disconnect_node(${1:arg0})"
  }, {
    "trigger": "fun_info/1",
    "contents": "fun_info(${1:arg0})"
  }, {
    "trigger": "send_nosuspend/2",
    "contents": "send_nosuspend(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "send_nosuspend/3",
    "contents": "send_nosuspend(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "suspend_process/1",
    "contents": "suspend_process(${1:arg0})"
  }, {
    "trigger": "port_call/2",
    "contents": "port_call(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "port_call/3",
    "contents": "port_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "port_info/1",
    "contents": "port_info(${1:arg0})"
  }, {
    "trigger": "set_cookie/2",
    "contents": "set_cookie(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "get_cookie/0",
    "contents": "get_cookie()"
  }, {
    "trigger": "integer_to_list/2",
    "contents": "integer_to_list(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "integer_to_binary/2",
    "contents": "integer_to_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "max/2",
    "contents": "max(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "memory/0",
    "contents": "memory()"
  }, {
    "trigger": "memory/1",
    "contents": "memory(${1:arg0})"
  }, {
    "trigger": "module_info/0",
    "contents": "module_info()"
  }, {
    "trigger": "module_info/1",
    "contents": "module_info(${1:arg0})"
  }, {
    "trigger": "min/2",
    "contents": "min(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "localtime_to_universaltime/1",
    "contents": "localtime_to_universaltime(${1:arg0})"
  }, {
    "trigger": "port_control/3",
    "contents": "port_control(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "port_connect/2",
    "contents": "port_connect(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "port_command/2",
    "contents": "port_command(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "port_command/3",
    "contents": "port_command(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "port_close/1",
    "contents": "port_close(${1:arg0})"
  }, {
    "trigger": "spawn_monitor/1",
    "contents": "spawn_monitor(${1:arg0})"
  }, {
    "trigger": "spawn/1",
    "contents": "spawn(${1:arg0})"
  }, {
    "trigger": "load_module/2",
    "contents": "load_module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "spawn_link/1",
    "contents": "spawn_link(${1:arg0})"
  }, {
    "trigger": "port_info/2",
    "contents": "port_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "delay_trap/2",
    "contents": "delay_trap(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "await_sched_wall_time_modifications/2",
    "contents": "await_sched_wall_time_modifications(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "await_proc_exit/3",
    "contents": "await_proc_exit(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "format_cpu_topology/1",
    "contents": "format_cpu_topology(${1:arg0})"
  }, {
    "trigger": "set_cpu_topology/1",
    "contents": "set_cpu_topology(${1:arg0})"
  }, {
    "trigger": "flush_monitor_message/2",
    "contents": "flush_monitor_message(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "dmonitor_p/2",
    "contents": "dmonitor_p(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "dexit/2",
    "contents": "dexit(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "dgroup_leader/2",
    "contents": "dgroup_leader(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "dmonitor_node/3",
    "contents": "dmonitor_node(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "dunlink/1",
    "contents": "dunlink(${1:arg0})"
  }, {
    "trigger": "dlink/1",
    "contents": "dlink(${1:arg0})"
  }, {
    "trigger": "dsend/3",
    "contents": "dsend(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "dsend/2",
    "contents": "dsend(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "hash/2",
    "contents": "hash(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary_to_float/1",
    "contents": "binary_to_float(${1:arg0})"
  }, {
    "trigger": "float_to_binary/2",
    "contents": "float_to_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "float_to_binary/1",
    "contents": "float_to_binary(${1:arg0})"
  }, {
    "trigger": "list_to_integer/2",
    "contents": "list_to_integer(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "integer_to_binary/1",
    "contents": "integer_to_binary(${1:arg0})"
  }, {
    "trigger": "binary_to_integer/2",
    "contents": "binary_to_integer(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary_to_integer/1",
    "contents": "binary_to_integer(${1:arg0})"
  }, {
    "trigger": "delete_element/2",
    "contents": "delete_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "insert_element/3",
    "contents": "insert_element(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "finish_loading/1",
    "contents": "finish_loading(${1:arg0})"
  }, {
    "trigger": "prepare_loading/2",
    "contents": "prepare_loading(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "dt_append_vm_tag_data/1",
    "contents": "dt_append_vm_tag_data(${1:arg0})"
  }, {
    "trigger": "dt_prepend_vm_tag_data/1",
    "contents": "dt_prepend_vm_tag_data(${1:arg0})"
  }, {
    "trigger": "dt_restore_tag/1",
    "contents": "dt_restore_tag(${1:arg0})"
  }, {
    "trigger": "dt_spread_tag/1",
    "contents": "dt_spread_tag(${1:arg0})"
  }, {
    "trigger": "dt_get_tag_data/0",
    "contents": "dt_get_tag_data()"
  }, {
    "trigger": "dt_get_tag/0",
    "contents": "dt_get_tag()"
  }, {
    "trigger": "dt_put_tag/1",
    "contents": "dt_put_tag(${1:arg0})"
  }, {
    "trigger": "posixtime_to_universaltime/1",
    "contents": "posixtime_to_universaltime(${1:arg0})"
  }, {
    "trigger": "universaltime_to_posixtime/1",
    "contents": "universaltime_to_posixtime(${1:arg0})"
  }, {
    "trigger": "check_old_code/1",
    "contents": "check_old_code(${1:arg0})"
  }, {
    "trigger": "nif_error/2",
    "contents": "nif_error(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "nif_error/1",
    "contents": "nif_error(${1:arg0})"
  }, {
    "trigger": "binary_part/3",
    "contents": "binary_part(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "binary_part/2",
    "contents": "binary_part(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary_to_term/2",
    "contents": "binary_to_term(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "finish_after_on_load/2",
    "contents": "finish_after_on_load(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "call_on_load_function/1",
    "contents": "call_on_load_function(${1:arg0})"
  }, {
    "trigger": "load_nif/2",
    "contents": "load_nif(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary_to_existing_atom/2",
    "contents": "binary_to_existing_atom(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary_to_atom/2",
    "contents": "binary_to_atom(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "atom_to_binary/2",
    "contents": "atom_to_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "decode_packet/3",
    "contents": "decode_packet(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "bitstring_to_list/1",
    "contents": "bitstring_to_list(${1:arg0})"
  }, {
    "trigger": "list_to_bitstring/1",
    "contents": "list_to_bitstring(${1:arg0})"
  }, {
    "trigger": "bit_size/1",
    "contents": "bit_size(${1:arg0})"
  }, {
    "trigger": "byte_size/1",
    "contents": "byte_size(${1:arg0})"
  }, {
    "trigger": "tuple_size/1",
    "contents": "tuple_size(${1:arg0})"
  }, {
    "trigger": "is_bitstring/1",
    "contents": "is_bitstring(${1:arg0})"
  }, {
    "trigger": "list_to_existing_atom/1",
    "contents": "list_to_existing_atom(${1:arg0})"
  }, {
    "trigger": "iolist_to_binary/1",
    "contents": "iolist_to_binary(${1:arg0})"
  }, {
    "trigger": "iolist_size/1",
    "contents": "iolist_size(${1:arg0})"
  }, {
    "trigger": "make_fun/3",
    "contents": "make_fun(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "is_boolean/1",
    "contents": "is_boolean(${1:arg0})"
  }, {
    "trigger": "get_module_info/2",
    "contents": "get_module_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "get_module_info/1",
    "contents": "get_module_info(${1:arg0})"
  }, {
    "trigger": "hibernate/3",
    "contents": "hibernate(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "match_spec_test/3",
    "contents": "match_spec_test(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "is_record/3",
    "contents": "is_record(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "is_record/2",
    "contents": "is_record(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "is_function/2",
    "contents": "is_function(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "is_function/1",
    "contents": "is_function(${1:arg0})"
  }, {
    "trigger": "is_binary/1",
    "contents": "is_binary(${1:arg0})"
  }, {
    "trigger": "is_reference/1",
    "contents": "is_reference(${1:arg0})"
  }, {
    "trigger": "is_port/1",
    "contents": "is_port(${1:arg0})"
  }, {
    "trigger": "is_pid/1",
    "contents": "is_pid(${1:arg0})"
  }, {
    "trigger": "is_number/1",
    "contents": "is_number(${1:arg0})"
  }, {
    "trigger": "is_integer/1",
    "contents": "is_integer(${1:arg0})"
  }, {
    "trigger": "is_float/1",
    "contents": "is_float(${1:arg0})"
  }, {
    "trigger": "is_tuple/1",
    "contents": "is_tuple(${1:arg0})"
  }, {
    "trigger": "is_list/1",
    "contents": "is_list(${1:arg0})"
  }, {
    "trigger": "is_atom/1",
    "contents": "is_atom(${1:arg0})"
  }, {
    "trigger": "subtract/2",
    "contents": "subtract(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "--/2",
    "contents": "--(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "append/2",
    "contents": "append(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "++/2",
    "contents": "++(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "send/3",
    "contents": "send(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "send/2",
    "contents": "send(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "!/2",
    "contents": "!(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "+/1",
    "contents": "+(${1:arg0})"
  }, {
    "trigger": "-/1",
    "contents": "-(${1:arg0})"
  }, {
    "trigger": "bnot/1",
    "contents": "bnot(${1:arg0})"
  }, {
    "trigger": "bsr/2",
    "contents": "bsr(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "bsl/2",
    "contents": "bsl(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "bxor/2",
    "contents": "bxor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "band/2",
    "contents": "band(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "bor/2",
    "contents": "bor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "rem/2",
    "contents": "rem(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "div/2",
    "contents": "div(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "//2",
    "contents": "/(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "*/2",
    "contents": "*(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "-/2",
    "contents": "-(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "+/2",
    "contents": "+(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "/=/2",
    "contents": "/=(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "=/=/2",
    "contents": "=/=(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "==/2",
    "contents": "==(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "=:=/2",
    "contents": "=:=(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "=</2",
    "contents": "=<(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "</2",
    "contents": "<(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": ">=/2",
    "contents": ">=(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": ">/2",
    "contents": ">(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "not/1",
    "contents": "not(${1:arg0})"
  }, {
    "trigger": "xor/2",
    "contents": "xor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "or/2",
    "contents": "or(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "and/2",
    "contents": "and(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "is_builtin/3",
    "contents": "is_builtin(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "get_stacktrace/0",
    "contents": "get_stacktrace()"
  }, {
    "trigger": "raise/3",
    "contents": "raise(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "error/2",
    "contents": "error(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error/1",
    "contents": "error(${1:arg0})"
  }, {
    "trigger": "is_process_alive/1",
    "contents": "is_process_alive(${1:arg0})"
  }, {
    "trigger": "demonitor/2",
    "contents": "demonitor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "demonitor/1",
    "contents": "demonitor(${1:arg0})"
  }, {
    "trigger": "monitor/2",
    "contents": "monitor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "fun_to_list/1",
    "contents": "fun_to_list(${1:arg0})"
  }, {
    "trigger": "port_to_list/1",
    "contents": "port_to_list(${1:arg0})"
  }, {
    "trigger": "ref_to_list/1",
    "contents": "ref_to_list(${1:arg0})"
  }, {
    "trigger": "system_profile/0",
    "contents": "system_profile()"
  }, {
    "trigger": "system_profile/2",
    "contents": "system_profile(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "system_monitor/2",
    "contents": "system_monitor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "system_monitor/1",
    "contents": "system_monitor(${1:arg0})"
  }, {
    "trigger": "system_monitor/0",
    "contents": "system_monitor()"
  }, {
    "trigger": "system_info/1",
    "contents": "system_info(${1:arg0})"
  }, {
    "trigger": "system_flag/2",
    "contents": "system_flag(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "make_tuple/3",
    "contents": "make_tuple(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "append_element/2",
    "contents": "append_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "make_tuple/2",
    "contents": "make_tuple(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "read_timer/1",
    "contents": "read_timer(${1:arg0})"
  }, {
    "trigger": "cancel_timer/1",
    "contents": "cancel_timer(${1:arg0})"
  }, {
    "trigger": "send_after/3",
    "contents": "send_after(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "start_timer/3",
    "contents": "start_timer(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "bump_reductions/1",
    "contents": "bump_reductions(${1:arg0})"
  }, {
    "trigger": "process_display/2",
    "contents": "process_display(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "resume_process/1",
    "contents": "resume_process(${1:arg0})"
  }, {
    "trigger": "suspend_process/2",
    "contents": "suspend_process(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "seq_trace_print/2",
    "contents": "seq_trace_print(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "seq_trace_print/1",
    "contents": "seq_trace_print(${1:arg0})"
  }, {
    "trigger": "seq_trace_info/1",
    "contents": "seq_trace_info(${1:arg0})"
  }, {
    "trigger": "seq_trace/2",
    "contents": "seq_trace(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "trace_delivered/1",
    "contents": "trace_delivered(${1:arg0})"
  }, {
    "trigger": "trace_info/2",
    "contents": "trace_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "trace/3",
    "contents": "trace(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "trace_pattern/3",
    "contents": "trace_pattern(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "trace_pattern/2",
    "contents": "trace_pattern(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "port_get_data/1",
    "contents": "port_get_data(${1:arg0})"
  }, {
    "trigger": "port_set_data/2",
    "contents": "port_set_data(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "dist_exit/3",
    "contents": "dist_exit(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "setnode/3",
    "contents": "setnode(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "setnode/2",
    "contents": "setnode(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "spawn_opt/1",
    "contents": "spawn_opt(${1:arg0})"
  }, {
    "trigger": "whereis/1",
    "contents": "whereis(${1:arg0})"
  }, {
    "trigger": "unregister/1",
    "contents": "unregister(${1:arg0})"
  }, {
    "trigger": "unlink/1",
    "contents": "unlink(${1:arg0})"
  }, {
    "trigger": "universaltime_to_localtime/1",
    "contents": "universaltime_to_localtime(${1:arg0})"
  }, {
    "trigger": "universaltime/0",
    "contents": "universaltime()"
  }, {
    "trigger": "tuple_to_list/1",
    "contents": "tuple_to_list(${1:arg0})"
  }, {
    "trigger": "trunc/1",
    "contents": "trunc(${1:arg0})"
  }, {
    "trigger": "tl/1",
    "contents": "tl(${1:arg0})"
  }, {
    "trigger": "time/0",
    "contents": "time()"
  }, {
    "trigger": "throw/1",
    "contents": "throw(${1:arg0})"
  }, {
    "trigger": "term_to_binary/2",
    "contents": "term_to_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "term_to_binary/1",
    "contents": "term_to_binary(${1:arg0})"
  }, {
    "trigger": "statistics/1",
    "contents": "statistics(${1:arg0})"
  }, {
    "trigger": "split_binary/2",
    "contents": "split_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "spawn_link/3",
    "contents": "spawn_link(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "spawn/3",
    "contents": "spawn(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "size/1",
    "contents": "size(${1:arg0})"
  }, {
    "trigger": "setelement/3",
    "contents": "setelement(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "self/0",
    "contents": "self()"
  }, {
    "trigger": "round/1",
    "contents": "round(${1:arg0})"
  }, {
    "trigger": "registered/0",
    "contents": "registered()"
  }, {
    "trigger": "register/2",
    "contents": "register(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "put/2",
    "contents": "put(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "purge_module/1",
    "contents": "purge_module(${1:arg0})"
  }, {
    "trigger": "processes/0",
    "contents": "processes()"
  }, {
    "trigger": "process_info/2",
    "contents": "process_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "process_info/1",
    "contents": "process_info(${1:arg0})"
  }, {
    "trigger": "process_flag/3",
    "contents": "process_flag(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "process_flag/2",
    "contents": "process_flag(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "pre_loaded/0",
    "contents": "pre_loaded()"
  }, {
    "trigger": "ports/0",
    "contents": "ports()"
  }, {
    "trigger": "pid_to_list/1",
    "contents": "pid_to_list(${1:arg0})"
  }, {
    "trigger": "open_port/2",
    "contents": "open_port(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "now/0",
    "contents": "now()"
  }, {
    "trigger": "nodes/1",
    "contents": "nodes(${1:arg0})"
  }, {
    "trigger": "node/0",
    "contents": "node()"
  }, {
    "trigger": "node/1",
    "contents": "node(${1:arg0})"
  }, {
    "trigger": "monitor_node/3",
    "contents": "monitor_node(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "monitor_node/2",
    "contents": "monitor_node(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "function_exported/3",
    "contents": "function_exported(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "module_loaded/1",
    "contents": "module_loaded(${1:arg0})"
  }, {
    "trigger": "md5_final/1",
    "contents": "md5_final(${1:arg0})"
  }, {
    "trigger": "md5_update/2",
    "contents": "md5_update(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "md5_init/0",
    "contents": "md5_init()"
  }, {
    "trigger": "md5/1",
    "contents": "md5(${1:arg0})"
  }, {
    "trigger": "make_ref/0",
    "contents": "make_ref()"
  }, {
    "trigger": "localtime_to_universaltime/2",
    "contents": "localtime_to_universaltime(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "localtime/0",
    "contents": "localtime()"
  }, {
    "trigger": "loaded/0",
    "contents": "loaded()"
  }, {
    "trigger": "list_to_tuple/1",
    "contents": "list_to_tuple(${1:arg0})"
  }, {
    "trigger": "list_to_pid/1",
    "contents": "list_to_pid(${1:arg0})"
  }, {
    "trigger": "list_to_integer/1",
    "contents": "list_to_integer(${1:arg0})"
  }, {
    "trigger": "list_to_float/1",
    "contents": "list_to_float(${1:arg0})"
  }, {
    "trigger": "list_to_binary/1",
    "contents": "list_to_binary(${1:arg0})"
  }, {
    "trigger": "list_to_atom/1",
    "contents": "list_to_atom(${1:arg0})"
  }, {
    "trigger": "link/1",
    "contents": "link(${1:arg0})"
  }, {
    "trigger": "length/1",
    "contents": "length(${1:arg0})"
  }, {
    "trigger": "is_alive/0",
    "contents": "is_alive()"
  }, {
    "trigger": "integer_to_list/1",
    "contents": "integer_to_list(${1:arg0})"
  }, {
    "trigger": "hd/1",
    "contents": "hd(${1:arg0})"
  }, {
    "trigger": "phash2/2",
    "contents": "phash2(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "phash2/1",
    "contents": "phash2(${1:arg0})"
  }, {
    "trigger": "phash/2",
    "contents": "phash(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "halt/2",
    "contents": "halt(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "halt/1",
    "contents": "halt(${1:arg0})"
  }, {
    "trigger": "halt/0",
    "contents": "halt()"
  }, {
    "trigger": "group_leader/2",
    "contents": "group_leader(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "group_leader/0",
    "contents": "group_leader()"
  }, {
    "trigger": "get_keys/1",
    "contents": "get_keys(${1:arg0})"
  }, {
    "trigger": "get/1",
    "contents": "get(${1:arg0})"
  }, {
    "trigger": "get/0",
    "contents": "get()"
  }, {
    "trigger": "garbage_collect/1",
    "contents": "garbage_collect(${1:arg0})"
  }, {
    "trigger": "garbage_collect/0",
    "contents": "garbage_collect()"
  }, {
    "trigger": "fun_info/2",
    "contents": "fun_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "float_to_list/2",
    "contents": "float_to_list(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "float_to_list/1",
    "contents": "float_to_list(${1:arg0})"
  }, {
    "trigger": "float/1",
    "contents": "float(${1:arg0})"
  }, {
    "trigger": "external_size/2",
    "contents": "external_size(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "external_size/1",
    "contents": "external_size(${1:arg0})"
  }, {
    "trigger": "exit/2",
    "contents": "exit(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "exit/1",
    "contents": "exit(${1:arg0})"
  }, {
    "trigger": "erase/1",
    "contents": "erase(${1:arg0})"
  }, {
    "trigger": "erase/0",
    "contents": "erase()"
  }, {
    "trigger": "element/2",
    "contents": "element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "display_nl/0",
    "contents": "display_nl()"
  }, {
    "trigger": "display_string/1",
    "contents": "display_string(${1:arg0})"
  }, {
    "trigger": "display/1",
    "contents": "display(${1:arg0})"
  }, {
    "trigger": "delete_module/1",
    "contents": "delete_module(${1:arg0})"
  }, {
    "trigger": "date/0",
    "contents": "date()"
  }, {
    "trigger": "crc32_combine/3",
    "contents": "crc32_combine(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "crc32/2",
    "contents": "crc32(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "crc32/1",
    "contents": "crc32(${1:arg0})"
  }, {
    "trigger": "check_process_code/2",
    "contents": "check_process_code(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary_to_term/1",
    "contents": "binary_to_term(${1:arg0})"
  }, {
    "trigger": "binary_to_list/3",
    "contents": "binary_to_list(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "binary_to_list/1",
    "contents": "binary_to_list(${1:arg0})"
  }, {
    "trigger": "atom_to_list/1",
    "contents": "atom_to_list(${1:arg0})"
  }, {
    "trigger": "apply/3",
    "contents": "apply(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "adler32_combine/3",
    "contents": "adler32_combine(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "adler32/2",
    "contents": "adler32(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "adler32/1",
    "contents": "adler32(${1:arg0})"
  }, {
    "trigger": "abs/1",
    "contents": "abs(${1:arg0})"
  }, {
    "trigger": "gather_gc_info_result/1",
    "contents": "gather_gc_info_result(${1:arg0})"
  }, {
    "trigger": "gather_sched_wall_time_result/1",
    "contents": "gather_sched_wall_time_result(${1:arg0})"
  }, {
    "trigger": "alloc_sizes/1",
    "contents": "alloc_sizes(${1:arg0})"
  }, {
    "trigger": "alloc_info/1",
    "contents": "alloc_info(${1:arg0})"
  }, {
    "trigger": "io:put_chars/2",
    "contents": "io:put_chars(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:nl/1",
    "contents": "io:nl(${1:arg0})"
  }, {
    "trigger": "io:columns/1",
    "contents": "io:columns(${1:arg0})"
  }, {
    "trigger": "io:rows/0",
    "contents": "io:rows()"
  }, {
    "trigger": "io:rows/1",
    "contents": "io:rows(${1:arg0})"
  }, {
    "trigger": "io:get_chars/2",
    "contents": "io:get_chars(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:get_chars/3",
    "contents": "io:get_chars(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io:get_password/0",
    "contents": "io:get_password()"
  }, {
    "trigger": "io:get_password/1",
    "contents": "io:get_password(${1:arg0})"
  }, {
    "trigger": "io:getopts/1",
    "contents": "io:getopts(${1:arg0})"
  }, {
    "trigger": "io:setopts/2",
    "contents": "io:setopts(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:write/1",
    "contents": "io:write(${1:arg0})"
  }, {
    "trigger": "io:write/2",
    "contents": "io:write(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:read/1",
    "contents": "io:read(${1:arg0})"
  }, {
    "trigger": "io:read/2",
    "contents": "io:read(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:read/4",
    "contents": "io:read(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "io:fwrite/1",
    "contents": "io:fwrite(${1:arg0})"
  }, {
    "trigger": "io:fwrite/3",
    "contents": "io:fwrite(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io:fread/2",
    "contents": "io:fread(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:fread/3",
    "contents": "io:fread(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io:scan_erl_exprs/1",
    "contents": "io:scan_erl_exprs(${1:arg0})"
  }, {
    "trigger": "io:scan_erl_exprs/2",
    "contents": "io:scan_erl_exprs(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:scan_erl_exprs/4",
    "contents": "io:scan_erl_exprs(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "io:scan_erl_form/1",
    "contents": "io:scan_erl_form(${1:arg0})"
  }, {
    "trigger": "io:scan_erl_form/2",
    "contents": "io:scan_erl_form(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:scan_erl_form/3",
    "contents": "io:scan_erl_form(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io:scan_erl_form/4",
    "contents": "io:scan_erl_form(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "io:parse_erl_exprs/1",
    "contents": "io:parse_erl_exprs(${1:arg0})"
  }, {
    "trigger": "io:parse_erl_exprs/2",
    "contents": "io:parse_erl_exprs(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:parse_erl_exprs/4",
    "contents": "io:parse_erl_exprs(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "io:parse_erl_form/1",
    "contents": "io:parse_erl_form(${1:arg0})"
  }, {
    "trigger": "io:parse_erl_form/2",
    "contents": "io:parse_erl_form(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:parse_erl_form/3",
    "contents": "io:parse_erl_form(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io:parse_erl_form/4",
    "contents": "io:parse_erl_form(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "io:request/1",
    "contents": "io:request(${1:arg0})"
  }, {
    "trigger": "io:requests/2",
    "contents": "io:requests(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:module_info/0",
    "contents": "io:module_info()"
  }, {
    "trigger": "io:module_info/1",
    "contents": "io:module_info(${1:arg0})"
  }, {
    "trigger": "io:parse_erl_exprs/3",
    "contents": "io:parse_erl_exprs(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io:read/3",
    "contents": "io:read(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io:request/2",
    "contents": "io:request(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:nl/0",
    "contents": "io:nl()"
  }, {
    "trigger": "io:setopts/1",
    "contents": "io:setopts(${1:arg0})"
  }, {
    "trigger": "io:scan_erl_exprs/3",
    "contents": "io:scan_erl_exprs(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io:getopts/0",
    "contents": "io:getopts()"
  }, {
    "trigger": "io:columns/0",
    "contents": "io:columns()"
  }, {
    "trigger": "io:requests/1",
    "contents": "io:requests(${1:arg0})"
  }, {
    "trigger": "io:fwrite/2",
    "contents": "io:fwrite(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:get_line/1",
    "contents": "io:get_line(${1:arg0})"
  }, {
    "trigger": "io:put_chars/1",
    "contents": "io:put_chars(${1:arg0})"
  }, {
    "trigger": "io:format/1",
    "contents": "io:format(${1:arg0})"
  }, {
    "trigger": "io:get_line/2",
    "contents": "io:get_line(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:format/2",
    "contents": "io:format(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io:format/3",
    "contents": "io:format(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io:printable_range/0",
    "contents": "io:printable_range()"
  }, {
    "trigger": "erl_distribution:start_link/0",
    "contents": "erl_distribution:start_link()"
  }, {
    "trigger": "erl_distribution:start_link/1",
    "contents": "erl_distribution:start_link(${1:arg0})"
  }, {
    "trigger": "erl_distribution:init/1",
    "contents": "erl_distribution:init(${1:arg0})"
  }, {
    "trigger": "erl_distribution:start/1",
    "contents": "erl_distribution:start(${1:arg0})"
  }, {
    "trigger": "erl_distribution:stop/0",
    "contents": "erl_distribution:stop()"
  }, {
    "trigger": "erl_distribution:module_info/0",
    "contents": "erl_distribution:module_info()"
  }, {
    "trigger": "erl_distribution:module_info/1",
    "contents": "erl_distribution:module_info(${1:arg0})"
  }, {
    "trigger": "edlin:prefix_arg/1",
    "contents": "edlin:prefix_arg(${1:arg0})"
  }, {
    "trigger": "edlin:over_word/3",
    "contents": "edlin:over_word(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "edlin:erase_inp/1",
    "contents": "edlin:erase_inp(${1:arg0})"
  }, {
    "trigger": "edlin:length_before/1",
    "contents": "edlin:length_before(${1:arg0})"
  }, {
    "trigger": "edlin:length_after/1",
    "contents": "edlin:length_after(${1:arg0})"
  }, {
    "trigger": "edlin:module_info/0",
    "contents": "edlin:module_info()"
  }, {
    "trigger": "edlin:module_info/1",
    "contents": "edlin:module_info(${1:arg0})"
  }, {
    "trigger": "edlin:start/2",
    "contents": "edlin:start(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "edlin:edit_line1/2",
    "contents": "edlin:edit_line1(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "edlin:prompt/1",
    "contents": "edlin:prompt(${1:arg0})"
  }, {
    "trigger": "edlin:current_line/1",
    "contents": "edlin:current_line(${1:arg0})"
  }, {
    "trigger": "edlin:redraw_line/1",
    "contents": "edlin:redraw_line(${1:arg0})"
  }, {
    "trigger": "edlin:erase_line/1",
    "contents": "edlin:erase_line(${1:arg0})"
  }, {
    "trigger": "edlin:current_chars/1",
    "contents": "edlin:current_chars(${1:arg0})"
  }, {
    "trigger": "edlin:init/0",
    "contents": "edlin:init()"
  }, {
    "trigger": "edlin:edit_line/2",
    "contents": "edlin:edit_line(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "edlin:start/1",
    "contents": "edlin:start(${1:arg0})"
  }, {
    "trigger": "beam_clean:module/2",
    "contents": "beam_clean:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_clean:clean_labels/1",
    "contents": "beam_clean:clean_labels(${1:arg0})"
  }, {
    "trigger": "beam_clean:module_info/0",
    "contents": "beam_clean:module_info()"
  }, {
    "trigger": "beam_clean:module_info/1",
    "contents": "beam_clean:module_info(${1:arg0})"
  }, {
    "trigger": "beam_clean:bs_clean_saves/1",
    "contents": "beam_clean:bs_clean_saves(${1:arg0})"
  }, {
    "trigger": "v3_core:format_error/1",
    "contents": "v3_core:format_error(${1:arg0})"
  }, {
    "trigger": "v3_core:module_info/0",
    "contents": "v3_core:module_info()"
  }, {
    "trigger": "v3_core:module_info/1",
    "contents": "v3_core:module_info(${1:arg0})"
  }, {
    "trigger": "v3_core:module/2",
    "contents": "v3_core:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "zlib:open/0",
    "contents": "zlib:open()"
  }, {
    "trigger": "zlib:close/1",
    "contents": "zlib:close(${1:arg0})"
  }, {
    "trigger": "zlib:deflateInit/1",
    "contents": "zlib:deflateInit(${1:arg0})"
  }, {
    "trigger": "zlib:deflateInit/2",
    "contents": "zlib:deflateInit(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "zlib:deflateInit/6",
    "contents": "zlib:deflateInit(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "zlib:deflateSetDictionary/2",
    "contents": "zlib:deflateSetDictionary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "zlib:deflateReset/1",
    "contents": "zlib:deflateReset(${1:arg0})"
  }, {
    "trigger": "zlib:deflateParams/3",
    "contents": "zlib:deflateParams(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "zlib:deflate/2",
    "contents": "zlib:deflate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "zlib:deflate/3",
    "contents": "zlib:deflate(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "zlib:deflateEnd/1",
    "contents": "zlib:deflateEnd(${1:arg0})"
  }, {
    "trigger": "zlib:inflateInit/1",
    "contents": "zlib:inflateInit(${1:arg0})"
  }, {
    "trigger": "zlib:inflateInit/2",
    "contents": "zlib:inflateInit(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "zlib:inflateSetDictionary/2",
    "contents": "zlib:inflateSetDictionary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "zlib:inflateSync/1",
    "contents": "zlib:inflateSync(${1:arg0})"
  }, {
    "trigger": "zlib:inflateReset/1",
    "contents": "zlib:inflateReset(${1:arg0})"
  }, {
    "trigger": "zlib:inflate/2",
    "contents": "zlib:inflate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "zlib:inflateEnd/1",
    "contents": "zlib:inflateEnd(${1:arg0})"
  }, {
    "trigger": "zlib:setBufSize/2",
    "contents": "zlib:setBufSize(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "zlib:getBufSize/1",
    "contents": "zlib:getBufSize(${1:arg0})"
  }, {
    "trigger": "zlib:crc32/1",
    "contents": "zlib:crc32(${1:arg0})"
  }, {
    "trigger": "zlib:crc32/2",
    "contents": "zlib:crc32(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "zlib:crc32/3",
    "contents": "zlib:crc32(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "zlib:adler32/2",
    "contents": "zlib:adler32(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "zlib:adler32/3",
    "contents": "zlib:adler32(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "zlib:crc32_combine/4",
    "contents": "zlib:crc32_combine(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "zlib:adler32_combine/4",
    "contents": "zlib:adler32_combine(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "zlib:getQSize/1",
    "contents": "zlib:getQSize(${1:arg0})"
  }, {
    "trigger": "zlib:compress/1",
    "contents": "zlib:compress(${1:arg0})"
  }, {
    "trigger": "zlib:uncompress/1",
    "contents": "zlib:uncompress(${1:arg0})"
  }, {
    "trigger": "zlib:zip/1",
    "contents": "zlib:zip(${1:arg0})"
  }, {
    "trigger": "zlib:unzip/1",
    "contents": "zlib:unzip(${1:arg0})"
  }, {
    "trigger": "zlib:gzip/1",
    "contents": "zlib:gzip(${1:arg0})"
  }, {
    "trigger": "zlib:gunzip/1",
    "contents": "zlib:gunzip(${1:arg0})"
  }, {
    "trigger": "zlib:module_info/0",
    "contents": "zlib:module_info()"
  }, {
    "trigger": "zlib:module_info/1",
    "contents": "zlib:module_info(${1:arg0})"
  }, {
    "trigger": "error_handler:undefined_function/3",
    "contents": "error_handler:undefined_function(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "error_handler:undefined_lambda/3",
    "contents": "error_handler:undefined_lambda(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "error_handler:breakpoint/3",
    "contents": "error_handler:breakpoint(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "error_handler:raise_undef_exception/3",
    "contents": "error_handler:raise_undef_exception(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "error_handler:stub_function/3",
    "contents": "error_handler:stub_function(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "error_handler:module_info/0",
    "contents": "error_handler:module_info()"
  }, {
    "trigger": "error_handler:module_info/1",
    "contents": "error_handler:module_info(${1:arg0})"
  }, {
    "trigger": "io_lib:fwrite/2",
    "contents": "io_lib:fwrite(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io_lib:fread/2",
    "contents": "io_lib:fread(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io_lib:fread/3",
    "contents": "io_lib:fread(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io_lib:print/1",
    "contents": "io_lib:print(${1:arg0})"
  }, {
    "trigger": "io_lib:print/4",
    "contents": "io_lib:print(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "io_lib:indentation/2",
    "contents": "io_lib:indentation(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io_lib:format_prompt/1",
    "contents": "io_lib:format_prompt(${1:arg0})"
  }, {
    "trigger": "io_lib:write/1",
    "contents": "io_lib:write(${1:arg0})"
  }, {
    "trigger": "io_lib:write/3",
    "contents": "io_lib:write(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io_lib:write/2",
    "contents": "io_lib:write(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io_lib:write_atom/1",
    "contents": "io_lib:write_atom(${1:arg0})"
  }, {
    "trigger": "io_lib:quote_atom/2",
    "contents": "io_lib:quote_atom(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io_lib:write_string/1",
    "contents": "io_lib:write_string(${1:arg0})"
  }, {
    "trigger": "io_lib:write_string/2",
    "contents": "io_lib:write_string(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io_lib:write_unicode_string/1",
    "contents": "io_lib:write_unicode_string(${1:arg0})"
  }, {
    "trigger": "io_lib:write_latin1_string/1",
    "contents": "io_lib:write_latin1_string(${1:arg0})"
  }, {
    "trigger": "io_lib:write_latin1_string/2",
    "contents": "io_lib:write_latin1_string(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io_lib:write_string_as_latin1/1",
    "contents": "io_lib:write_string_as_latin1(${1:arg0})"
  }, {
    "trigger": "io_lib:write_string_as_latin1/2",
    "contents": "io_lib:write_string_as_latin1(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io_lib:write_char/1",
    "contents": "io_lib:write_char(${1:arg0})"
  }, {
    "trigger": "io_lib:write_unicode_char/1",
    "contents": "io_lib:write_unicode_char(${1:arg0})"
  }, {
    "trigger": "io_lib:write_latin1_char/1",
    "contents": "io_lib:write_latin1_char(${1:arg0})"
  }, {
    "trigger": "io_lib:write_char_as_latin1/1",
    "contents": "io_lib:write_char_as_latin1(${1:arg0})"
  }, {
    "trigger": "io_lib:latin1_char_list/1",
    "contents": "io_lib:latin1_char_list(${1:arg0})"
  }, {
    "trigger": "io_lib:char_list/1",
    "contents": "io_lib:char_list(${1:arg0})"
  }, {
    "trigger": "io_lib:deep_latin1_char_list/1",
    "contents": "io_lib:deep_latin1_char_list(${1:arg0})"
  }, {
    "trigger": "io_lib:deep_char_list/1",
    "contents": "io_lib:deep_char_list(${1:arg0})"
  }, {
    "trigger": "io_lib:deep_unicode_char_list/1",
    "contents": "io_lib:deep_unicode_char_list(${1:arg0})"
  }, {
    "trigger": "io_lib:printable_latin1_list/1",
    "contents": "io_lib:printable_latin1_list(${1:arg0})"
  }, {
    "trigger": "io_lib:printable_unicode_list/1",
    "contents": "io_lib:printable_unicode_list(${1:arg0})"
  }, {
    "trigger": "io_lib:nl/0",
    "contents": "io_lib:nl()"
  }, {
    "trigger": "io_lib:collect_chars/3",
    "contents": "io_lib:collect_chars(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io_lib:collect_chars/4",
    "contents": "io_lib:collect_chars(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "io_lib:collect_line/2",
    "contents": "io_lib:collect_line(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io_lib:collect_line/3",
    "contents": "io_lib:collect_line(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io_lib:collect_line/4",
    "contents": "io_lib:collect_line(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "io_lib:get_until/3",
    "contents": "io_lib:get_until(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io_lib:get_until/4",
    "contents": "io_lib:get_until(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "io_lib:module_info/0",
    "contents": "io_lib:module_info()"
  }, {
    "trigger": "io_lib:module_info/1",
    "contents": "io_lib:module_info(${1:arg0})"
  }, {
    "trigger": "io_lib:format_prompt/2",
    "contents": "io_lib:format_prompt(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io_lib:printable_list/1",
    "contents": "io_lib:printable_list(${1:arg0})"
  }, {
    "trigger": "io_lib:format/2",
    "contents": "io_lib:format(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_jump:module/2",
    "contents": "beam_jump:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_jump:is_unreachable_after/1",
    "contents": "beam_jump:is_unreachable_after(${1:arg0})"
  }, {
    "trigger": "beam_jump:is_label_used_in/2",
    "contents": "beam_jump:is_label_used_in(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_jump:module_info/0",
    "contents": "beam_jump:module_info()"
  }, {
    "trigger": "beam_jump:module_info/1",
    "contents": "beam_jump:module_info(${1:arg0})"
  }, {
    "trigger": "beam_jump:remove_unused_labels/1",
    "contents": "beam_jump:remove_unused_labels(${1:arg0})"
  }, {
    "trigger": "beam_jump:is_exit_instruction/1",
    "contents": "beam_jump:is_exit_instruction(${1:arg0})"
  }, {
    "trigger": "v3_codegen:module/2",
    "contents": "v3_codegen:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "v3_codegen:module_info/0",
    "contents": "v3_codegen:module_info()"
  }, {
    "trigger": "v3_codegen:module_info/1",
    "contents": "v3_codegen:module_info(${1:arg0})"
  }, {
    "trigger": "beam_flatten:module/2",
    "contents": "beam_flatten:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_flatten:module_info/0",
    "contents": "beam_flatten:module_info()"
  }, {
    "trigger": "beam_flatten:module_info/1",
    "contents": "beam_flatten:module_info(${1:arg0})"
  }, {
    "trigger": "prim_eval:receive/2",
    "contents": "prim_eval:receive(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_eval:module_info/0",
    "contents": "prim_eval:module_info()"
  }, {
    "trigger": "prim_eval:module_info/1",
    "contents": "prim_eval:module_info(${1:arg0})"
  }, {
    "trigger": "beam_bool:module/2",
    "contents": "beam_bool:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_bool:module_info/0",
    "contents": "beam_bool:module_info()"
  }, {
    "trigger": "beam_bool:module_info/1",
    "contents": "beam_bool:module_info(${1:arg0})"
  }, {
    "trigger": "filename:absname/2",
    "contents": "filename:absname(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "filename:absname_join/2",
    "contents": "filename:absname_join(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "filename:extension/1",
    "contents": "filename:extension(${1:arg0})"
  }, {
    "trigger": "filename:rootname/1",
    "contents": "filename:rootname(${1:arg0})"
  }, {
    "trigger": "filename:rootname/2",
    "contents": "filename:rootname(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "filename:split/1",
    "contents": "filename:split(${1:arg0})"
  }, {
    "trigger": "filename:nativename/1",
    "contents": "filename:nativename(${1:arg0})"
  }, {
    "trigger": "filename:find_src/1",
    "contents": "filename:find_src(${1:arg0})"
  }, {
    "trigger": "filename:find_src/2",
    "contents": "filename:find_src(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "filename:module_info/0",
    "contents": "filename:module_info()"
  }, {
    "trigger": "filename:module_info/1",
    "contents": "filename:module_info(${1:arg0})"
  }, {
    "trigger": "filename:absname/1",
    "contents": "filename:absname(${1:arg0})"
  }, {
    "trigger": "filename:basename/1",
    "contents": "filename:basename(${1:arg0})"
  }, {
    "trigger": "filename:append/2",
    "contents": "filename:append(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "filename:join/1",
    "contents": "filename:join(${1:arg0})"
  }, {
    "trigger": "filename:flatten/1",
    "contents": "filename:flatten(${1:arg0})"
  }, {
    "trigger": "filename:pathtype/1",
    "contents": "filename:pathtype(${1:arg0})"
  }, {
    "trigger": "filename:join/2",
    "contents": "filename:join(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "filename:dirname/1",
    "contents": "filename:dirname(${1:arg0})"
  }, {
    "trigger": "filename:basename/2",
    "contents": "filename:basename(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erts_internal:module_info/0",
    "contents": "erts_internal:module_info()"
  }, {
    "trigger": "erts_internal:module_info/1",
    "contents": "erts_internal:module_info(${1:arg0})"
  }, {
    "trigger": "erts_internal:await_port_send_result/3",
    "contents": "erts_internal:await_port_send_result(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erts_internal:port_connect/2",
    "contents": "erts_internal:port_connect(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erts_internal:port_close/1",
    "contents": "erts_internal:port_close(${1:arg0})"
  }, {
    "trigger": "erts_internal:port_control/3",
    "contents": "erts_internal:port_control(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erts_internal:port_command/3",
    "contents": "erts_internal:port_command(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erts_internal:port_call/3",
    "contents": "erts_internal:port_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erts_internal:port_info/2",
    "contents": "erts_internal:port_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erts_internal:port_info/1",
    "contents": "erts_internal:port_info(${1:arg0})"
  }, {
    "trigger": "unicode:characters_to_list/1",
    "contents": "unicode:characters_to_list(${1:arg0})"
  }, {
    "trigger": "unicode:characters_to_binary/1",
    "contents": "unicode:characters_to_binary(${1:arg0})"
  }, {
    "trigger": "unicode:bom_to_encoding/1",
    "contents": "unicode:bom_to_encoding(${1:arg0})"
  }, {
    "trigger": "unicode:encoding_to_bom/1",
    "contents": "unicode:encoding_to_bom(${1:arg0})"
  }, {
    "trigger": "unicode:module_info/0",
    "contents": "unicode:module_info()"
  }, {
    "trigger": "unicode:module_info/1",
    "contents": "unicode:module_info(${1:arg0})"
  }, {
    "trigger": "unicode:characters_to_binary/3",
    "contents": "unicode:characters_to_binary(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "unicode:characters_to_list_int/2",
    "contents": "unicode:characters_to_list_int(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "unicode:characters_to_binary_int/2",
    "contents": "unicode:characters_to_binary_int(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "unicode:bin_is_7bit/1",
    "contents": "unicode:bin_is_7bit(${1:arg0})"
  }, {
    "trigger": "unicode:characters_to_list/2",
    "contents": "unicode:characters_to_list(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "unicode:characters_to_binary/2",
    "contents": "unicode:characters_to_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_type:module/2",
    "contents": "beam_type:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_type:module_info/0",
    "contents": "beam_type:module_info()"
  }, {
    "trigger": "beam_type:module_info/1",
    "contents": "beam_type:module_info(${1:arg0})"
  }, {
    "trigger": "orddict:is_key/2",
    "contents": "orddict:is_key(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "orddict:size/1",
    "contents": "orddict:size(${1:arg0})"
  }, {
    "trigger": "orddict:fetch/2",
    "contents": "orddict:fetch(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "orddict:fetch_keys/1",
    "contents": "orddict:fetch_keys(${1:arg0})"
  }, {
    "trigger": "orddict:append/3",
    "contents": "orddict:append(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "orddict:append_list/3",
    "contents": "orddict:append_list(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "orddict:update/3",
    "contents": "orddict:update(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "orddict:update/4",
    "contents": "orddict:update(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "orddict:update_counter/3",
    "contents": "orddict:update_counter(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "orddict:fold/3",
    "contents": "orddict:fold(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "orddict:map/2",
    "contents": "orddict:map(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "orddict:merge/3",
    "contents": "orddict:merge(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "orddict:module_info/0",
    "contents": "orddict:module_info()"
  }, {
    "trigger": "orddict:module_info/1",
    "contents": "orddict:module_info(${1:arg0})"
  }, {
    "trigger": "orddict:erase/2",
    "contents": "orddict:erase(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "orddict:store/3",
    "contents": "orddict:store(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "orddict:find/2",
    "contents": "orddict:find(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "orddict:to_list/1",
    "contents": "orddict:to_list(${1:arg0})"
  }, {
    "trigger": "orddict:new/0",
    "contents": "orddict:new()"
  }, {
    "trigger": "orddict:filter/2",
    "contents": "orddict:filter(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "orddict:from_list/1",
    "contents": "orddict:from_list(${1:arg0})"
  }, {
    "trigger": "gb_sets:empty/0",
    "contents": "gb_sets:empty()"
  }, {
    "trigger": "gb_sets:new/0",
    "contents": "gb_sets:new()"
  }, {
    "trigger": "gb_sets:is_empty/1",
    "contents": "gb_sets:is_empty(${1:arg0})"
  }, {
    "trigger": "gb_sets:size/1",
    "contents": "gb_sets:size(${1:arg0})"
  }, {
    "trigger": "gb_sets:singleton/1",
    "contents": "gb_sets:singleton(${1:arg0})"
  }, {
    "trigger": "gb_sets:is_element/2",
    "contents": "gb_sets:is_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:is_member/2",
    "contents": "gb_sets:is_member(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:insert/2",
    "contents": "gb_sets:insert(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:balance/1",
    "contents": "gb_sets:balance(${1:arg0})"
  }, {
    "trigger": "gb_sets:add_element/2",
    "contents": "gb_sets:add_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:add/2",
    "contents": "gb_sets:add(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:from_list/1",
    "contents": "gb_sets:from_list(${1:arg0})"
  }, {
    "trigger": "gb_sets:from_ordset/1",
    "contents": "gb_sets:from_ordset(${1:arg0})"
  }, {
    "trigger": "gb_sets:del_element/2",
    "contents": "gb_sets:del_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:delete_any/2",
    "contents": "gb_sets:delete_any(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:delete/2",
    "contents": "gb_sets:delete(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:take_smallest/1",
    "contents": "gb_sets:take_smallest(${1:arg0})"
  }, {
    "trigger": "gb_sets:smallest/1",
    "contents": "gb_sets:smallest(${1:arg0})"
  }, {
    "trigger": "gb_sets:take_largest/1",
    "contents": "gb_sets:take_largest(${1:arg0})"
  }, {
    "trigger": "gb_sets:largest/1",
    "contents": "gb_sets:largest(${1:arg0})"
  }, {
    "trigger": "gb_sets:to_list/1",
    "contents": "gb_sets:to_list(${1:arg0})"
  }, {
    "trigger": "gb_sets:iterator/1",
    "contents": "gb_sets:iterator(${1:arg0})"
  }, {
    "trigger": "gb_sets:next/1",
    "contents": "gb_sets:next(${1:arg0})"
  }, {
    "trigger": "gb_sets:union/2",
    "contents": "gb_sets:union(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:union/1",
    "contents": "gb_sets:union(${1:arg0})"
  }, {
    "trigger": "gb_sets:intersection/2",
    "contents": "gb_sets:intersection(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:intersection/1",
    "contents": "gb_sets:intersection(${1:arg0})"
  }, {
    "trigger": "gb_sets:is_disjoint/2",
    "contents": "gb_sets:is_disjoint(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:subtract/2",
    "contents": "gb_sets:subtract(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:difference/2",
    "contents": "gb_sets:difference(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:is_subset/2",
    "contents": "gb_sets:is_subset(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:is_set/1",
    "contents": "gb_sets:is_set(${1:arg0})"
  }, {
    "trigger": "gb_sets:filter/2",
    "contents": "gb_sets:filter(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_sets:fold/3",
    "contents": "gb_sets:fold(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gb_sets:module_info/0",
    "contents": "gb_sets:module_info()"
  }, {
    "trigger": "gb_sets:module_info/1",
    "contents": "gb_sets:module_info(${1:arg0})"
  }, {
    "trigger": "sofs:from_term/1",
    "contents": "sofs:from_term(${1:arg0})"
  }, {
    "trigger": "sofs:from_term/2",
    "contents": "sofs:from_term(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:empty_set/0",
    "contents": "sofs:empty_set()"
  }, {
    "trigger": "sofs:is_type/1",
    "contents": "sofs:is_type(${1:arg0})"
  }, {
    "trigger": "sofs:set/2",
    "contents": "sofs:set(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:from_sets/1",
    "contents": "sofs:from_sets(${1:arg0})"
  }, {
    "trigger": "sofs:a_function/1",
    "contents": "sofs:a_function(${1:arg0})"
  }, {
    "trigger": "sofs:a_function/2",
    "contents": "sofs:a_function(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:family/1",
    "contents": "sofs:family(${1:arg0})"
  }, {
    "trigger": "sofs:family/2",
    "contents": "sofs:family(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:type/1",
    "contents": "sofs:type(${1:arg0})"
  }, {
    "trigger": "sofs:to_sets/1",
    "contents": "sofs:to_sets(${1:arg0})"
  }, {
    "trigger": "sofs:specification/2",
    "contents": "sofs:specification(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:union/2",
    "contents": "sofs:union(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:intersection/2",
    "contents": "sofs:intersection(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:difference/2",
    "contents": "sofs:difference(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:symdiff/2",
    "contents": "sofs:symdiff(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:product/2",
    "contents": "sofs:product(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:product/1",
    "contents": "sofs:product(${1:arg0})"
  }, {
    "trigger": "sofs:constant_function/2",
    "contents": "sofs:constant_function(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:is_equal/2",
    "contents": "sofs:is_equal(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:is_subset/2",
    "contents": "sofs:is_subset(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:is_sofs_set/1",
    "contents": "sofs:is_sofs_set(${1:arg0})"
  }, {
    "trigger": "sofs:is_set/1",
    "contents": "sofs:is_set(${1:arg0})"
  }, {
    "trigger": "sofs:is_empty_set/1",
    "contents": "sofs:is_empty_set(${1:arg0})"
  }, {
    "trigger": "sofs:is_disjoint/2",
    "contents": "sofs:is_disjoint(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:union/1",
    "contents": "sofs:union(${1:arg0})"
  }, {
    "trigger": "sofs:intersection/1",
    "contents": "sofs:intersection(${1:arg0})"
  }, {
    "trigger": "sofs:canonical_relation/1",
    "contents": "sofs:canonical_relation(${1:arg0})"
  }, {
    "trigger": "sofs:rel2fam/1",
    "contents": "sofs:rel2fam(${1:arg0})"
  }, {
    "trigger": "sofs:range/1",
    "contents": "sofs:range(${1:arg0})"
  }, {
    "trigger": "sofs:field/1",
    "contents": "sofs:field(${1:arg0})"
  }, {
    "trigger": "sofs:relative_product/1",
    "contents": "sofs:relative_product(${1:arg0})"
  }, {
    "trigger": "sofs:relative_product/2",
    "contents": "sofs:relative_product(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:relative_product1/2",
    "contents": "sofs:relative_product1(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:inverse_image/2",
    "contents": "sofs:inverse_image(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:strict_relation/1",
    "contents": "sofs:strict_relation(${1:arg0})"
  }, {
    "trigger": "sofs:weak_relation/1",
    "contents": "sofs:weak_relation(${1:arg0})"
  }, {
    "trigger": "sofs:extension/3",
    "contents": "sofs:extension(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sofs:is_a_function/1",
    "contents": "sofs:is_a_function(${1:arg0})"
  }, {
    "trigger": "sofs:composite/2",
    "contents": "sofs:composite(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:inverse/1",
    "contents": "sofs:inverse(${1:arg0})"
  }, {
    "trigger": "sofs:restriction/3",
    "contents": "sofs:restriction(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sofs:drestriction/3",
    "contents": "sofs:drestriction(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sofs:substitution/2",
    "contents": "sofs:substitution(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:partition/1",
    "contents": "sofs:partition(${1:arg0})"
  }, {
    "trigger": "sofs:partition/2",
    "contents": "sofs:partition(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:partition/3",
    "contents": "sofs:partition(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sofs:multiple_relative_product/2",
    "contents": "sofs:multiple_relative_product(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:fam2rel/1",
    "contents": "sofs:fam2rel(${1:arg0})"
  }, {
    "trigger": "sofs:union_of_family/1",
    "contents": "sofs:union_of_family(${1:arg0})"
  }, {
    "trigger": "sofs:intersection_of_family/1",
    "contents": "sofs:intersection_of_family(${1:arg0})"
  }, {
    "trigger": "sofs:family_union/1",
    "contents": "sofs:family_union(${1:arg0})"
  }, {
    "trigger": "sofs:family_intersection/1",
    "contents": "sofs:family_intersection(${1:arg0})"
  }, {
    "trigger": "sofs:family_domain/1",
    "contents": "sofs:family_domain(${1:arg0})"
  }, {
    "trigger": "sofs:family_range/1",
    "contents": "sofs:family_range(${1:arg0})"
  }, {
    "trigger": "sofs:family_field/1",
    "contents": "sofs:family_field(${1:arg0})"
  }, {
    "trigger": "sofs:family_union/2",
    "contents": "sofs:family_union(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:family_intersection/2",
    "contents": "sofs:family_intersection(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:family_difference/2",
    "contents": "sofs:family_difference(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:partition_family/2",
    "contents": "sofs:partition_family(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:family_projection/2",
    "contents": "sofs:family_projection(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:family_to_digraph/1",
    "contents": "sofs:family_to_digraph(${1:arg0})"
  }, {
    "trigger": "sofs:family_to_digraph/2",
    "contents": "sofs:family_to_digraph(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:digraph_to_family/1",
    "contents": "sofs:digraph_to_family(${1:arg0})"
  }, {
    "trigger": "sofs:digraph_to_family/2",
    "contents": "sofs:digraph_to_family(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:module_info/0",
    "contents": "sofs:module_info()"
  }, {
    "trigger": "sofs:module_info/1",
    "contents": "sofs:module_info(${1:arg0})"
  }, {
    "trigger": "sofs:no_elements/1",
    "contents": "sofs:no_elements(${1:arg0})"
  }, {
    "trigger": "sofs:projection/2",
    "contents": "sofs:projection(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:join/4",
    "contents": "sofs:join(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "sofs:drestriction/2",
    "contents": "sofs:drestriction(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:from_external/2",
    "contents": "sofs:from_external(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:family_specification/2",
    "contents": "sofs:family_specification(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:relation_to_family/1",
    "contents": "sofs:relation_to_family(${1:arg0})"
  }, {
    "trigger": "sofs:converse/1",
    "contents": "sofs:converse(${1:arg0})"
  }, {
    "trigger": "sofs:family_to_relation/1",
    "contents": "sofs:family_to_relation(${1:arg0})"
  }, {
    "trigger": "sofs:relation/2",
    "contents": "sofs:relation(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:restriction/2",
    "contents": "sofs:restriction(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:image/2",
    "contents": "sofs:image(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:domain/1",
    "contents": "sofs:domain(${1:arg0})"
  }, {
    "trigger": "sofs:relation/1",
    "contents": "sofs:relation(${1:arg0})"
  }, {
    "trigger": "sofs:to_external/1",
    "contents": "sofs:to_external(${1:arg0})"
  }, {
    "trigger": "sofs:symmetric_partition/2",
    "contents": "sofs:symmetric_partition(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sofs:set/1",
    "contents": "sofs:set(${1:arg0})"
  }, {
    "trigger": "inet_db:start/0",
    "contents": "inet_db:start()"
  }, {
    "trigger": "inet_db:start_link/0",
    "contents": "inet_db:start_link()"
  }, {
    "trigger": "inet_db:stop/0",
    "contents": "inet_db:stop()"
  }, {
    "trigger": "inet_db:reset/0",
    "contents": "inet_db:reset()"
  }, {
    "trigger": "inet_db:add_resolv/1",
    "contents": "inet_db:add_resolv(${1:arg0})"
  }, {
    "trigger": "inet_db:add_hosts/1",
    "contents": "inet_db:add_hosts(${1:arg0})"
  }, {
    "trigger": "inet_db:add_host/2",
    "contents": "inet_db:add_host(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:del_host/1",
    "contents": "inet_db:del_host(${1:arg0})"
  }, {
    "trigger": "inet_db:clear_hosts/0",
    "contents": "inet_db:clear_hosts()"
  }, {
    "trigger": "inet_db:add_ns/1",
    "contents": "inet_db:add_ns(${1:arg0})"
  }, {
    "trigger": "inet_db:add_ns/2",
    "contents": "inet_db:add_ns(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:ins_ns/1",
    "contents": "inet_db:ins_ns(${1:arg0})"
  }, {
    "trigger": "inet_db:ins_ns/2",
    "contents": "inet_db:ins_ns(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:del_ns/1",
    "contents": "inet_db:del_ns(${1:arg0})"
  }, {
    "trigger": "inet_db:del_ns/2",
    "contents": "inet_db:del_ns(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:del_ns/0",
    "contents": "inet_db:del_ns()"
  }, {
    "trigger": "inet_db:add_alt_ns/1",
    "contents": "inet_db:add_alt_ns(${1:arg0})"
  }, {
    "trigger": "inet_db:add_alt_ns/2",
    "contents": "inet_db:add_alt_ns(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:ins_alt_ns/1",
    "contents": "inet_db:ins_alt_ns(${1:arg0})"
  }, {
    "trigger": "inet_db:ins_alt_ns/2",
    "contents": "inet_db:ins_alt_ns(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:del_alt_ns/1",
    "contents": "inet_db:del_alt_ns(${1:arg0})"
  }, {
    "trigger": "inet_db:del_alt_ns/2",
    "contents": "inet_db:del_alt_ns(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:del_alt_ns/0",
    "contents": "inet_db:del_alt_ns()"
  }, {
    "trigger": "inet_db:add_search/1",
    "contents": "inet_db:add_search(${1:arg0})"
  }, {
    "trigger": "inet_db:ins_search/1",
    "contents": "inet_db:ins_search(${1:arg0})"
  }, {
    "trigger": "inet_db:del_search/1",
    "contents": "inet_db:del_search(${1:arg0})"
  }, {
    "trigger": "inet_db:del_search/0",
    "contents": "inet_db:del_search()"
  }, {
    "trigger": "inet_db:set_hostname/1",
    "contents": "inet_db:set_hostname(${1:arg0})"
  }, {
    "trigger": "inet_db:set_domain/1",
    "contents": "inet_db:set_domain(${1:arg0})"
  }, {
    "trigger": "inet_db:set_lookup/1",
    "contents": "inet_db:set_lookup(${1:arg0})"
  }, {
    "trigger": "inet_db:set_recurse/1",
    "contents": "inet_db:set_recurse(${1:arg0})"
  }, {
    "trigger": "inet_db:set_timeout/1",
    "contents": "inet_db:set_timeout(${1:arg0})"
  }, {
    "trigger": "inet_db:set_retry/1",
    "contents": "inet_db:set_retry(${1:arg0})"
  }, {
    "trigger": "inet_db:set_inet6/1",
    "contents": "inet_db:set_inet6(${1:arg0})"
  }, {
    "trigger": "inet_db:set_usevc/1",
    "contents": "inet_db:set_usevc(${1:arg0})"
  }, {
    "trigger": "inet_db:set_edns/1",
    "contents": "inet_db:set_edns(${1:arg0})"
  }, {
    "trigger": "inet_db:set_udp_payload_size/1",
    "contents": "inet_db:set_udp_payload_size(${1:arg0})"
  }, {
    "trigger": "inet_db:set_resolv_conf/1",
    "contents": "inet_db:set_resolv_conf(${1:arg0})"
  }, {
    "trigger": "inet_db:set_hosts_file/1",
    "contents": "inet_db:set_hosts_file(${1:arg0})"
  }, {
    "trigger": "inet_db:get_hosts_file/0",
    "contents": "inet_db:get_hosts_file()"
  }, {
    "trigger": "inet_db:set_socks_server/1",
    "contents": "inet_db:set_socks_server(${1:arg0})"
  }, {
    "trigger": "inet_db:set_socks_port/1",
    "contents": "inet_db:set_socks_port(${1:arg0})"
  }, {
    "trigger": "inet_db:add_socks_methods/1",
    "contents": "inet_db:add_socks_methods(${1:arg0})"
  }, {
    "trigger": "inet_db:del_socks_methods/1",
    "contents": "inet_db:del_socks_methods(${1:arg0})"
  }, {
    "trigger": "inet_db:del_socks_methods/0",
    "contents": "inet_db:del_socks_methods()"
  }, {
    "trigger": "inet_db:add_socks_noproxy/1",
    "contents": "inet_db:add_socks_noproxy(${1:arg0})"
  }, {
    "trigger": "inet_db:del_socks_noproxy/1",
    "contents": "inet_db:del_socks_noproxy(${1:arg0})"
  }, {
    "trigger": "inet_db:set_cache_size/1",
    "contents": "inet_db:set_cache_size(${1:arg0})"
  }, {
    "trigger": "inet_db:set_cache_refresh/1",
    "contents": "inet_db:set_cache_refresh(${1:arg0})"
  }, {
    "trigger": "inet_db:clear_cache/0",
    "contents": "inet_db:clear_cache()"
  }, {
    "trigger": "inet_db:set_tcp_module/1",
    "contents": "inet_db:set_tcp_module(${1:arg0})"
  }, {
    "trigger": "inet_db:tcp_module/0",
    "contents": "inet_db:tcp_module()"
  }, {
    "trigger": "inet_db:set_udp_module/1",
    "contents": "inet_db:set_udp_module(${1:arg0})"
  }, {
    "trigger": "inet_db:udp_module/0",
    "contents": "inet_db:udp_module()"
  }, {
    "trigger": "inet_db:set_sctp_module/1",
    "contents": "inet_db:set_sctp_module(${1:arg0})"
  }, {
    "trigger": "inet_db:sctp_module/0",
    "contents": "inet_db:sctp_module()"
  }, {
    "trigger": "inet_db:add_rc/1",
    "contents": "inet_db:add_rc(${1:arg0})"
  }, {
    "trigger": "inet_db:add_rc_bin/1",
    "contents": "inet_db:add_rc_bin(${1:arg0})"
  }, {
    "trigger": "inet_db:add_rc_list/1",
    "contents": "inet_db:add_rc_list(${1:arg0})"
  }, {
    "trigger": "inet_db:get_rc/0",
    "contents": "inet_db:get_rc()"
  }, {
    "trigger": "inet_db:res_option/1",
    "contents": "inet_db:res_option(${1:arg0})"
  }, {
    "trigger": "inet_db:res_option/2",
    "contents": "inet_db:res_option(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:res_check_option/2",
    "contents": "inet_db:res_check_option(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:socks_option/1",
    "contents": "inet_db:socks_option(${1:arg0})"
  }, {
    "trigger": "inet_db:gethostname/0",
    "contents": "inet_db:gethostname()"
  }, {
    "trigger": "inet_db:res_update_conf/0",
    "contents": "inet_db:res_update_conf()"
  }, {
    "trigger": "inet_db:res_update_hosts/0",
    "contents": "inet_db:res_update_hosts()"
  }, {
    "trigger": "inet_db:add_rr/1",
    "contents": "inet_db:add_rr(${1:arg0})"
  }, {
    "trigger": "inet_db:add_rr/5",
    "contents": "inet_db:add_rr(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "inet_db:del_rr/4",
    "contents": "inet_db:del_rr(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "inet_db:getbyname/2",
    "contents": "inet_db:getbyname(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:get_searchlist/0",
    "contents": "inet_db:get_searchlist()"
  }, {
    "trigger": "inet_db:res_hostent_by_domain/3",
    "contents": "inet_db:res_hostent_by_domain(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet_db:gethostbyaddr/1",
    "contents": "inet_db:gethostbyaddr(${1:arg0})"
  }, {
    "trigger": "inet_db:res_gethostbyaddr/2",
    "contents": "inet_db:res_gethostbyaddr(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:register_socket/2",
    "contents": "inet_db:register_socket(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:unregister_socket/1",
    "contents": "inet_db:unregister_socket(${1:arg0})"
  }, {
    "trigger": "inet_db:lookup_socket/1",
    "contents": "inet_db:lookup_socket(${1:arg0})"
  }, {
    "trigger": "inet_db:init/1",
    "contents": "inet_db:init(${1:arg0})"
  }, {
    "trigger": "inet_db:handle_call/3",
    "contents": "inet_db:handle_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet_db:handle_cast/2",
    "contents": "inet_db:handle_cast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:handle_info/2",
    "contents": "inet_db:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:terminate/2",
    "contents": "inet_db:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_db:tolower/1",
    "contents": "inet_db:tolower(${1:arg0})"
  }, {
    "trigger": "inet_db:module_info/0",
    "contents": "inet_db:module_info()"
  }, {
    "trigger": "inet_db:module_info/1",
    "contents": "inet_db:module_info(${1:arg0})"
  }, {
    "trigger": "inet:get_rc/0",
    "contents": "inet:get_rc()"
  }, {
    "trigger": "inet:close/1",
    "contents": "inet:close(${1:arg0})"
  }, {
    "trigger": "inet:peername/1",
    "contents": "inet:peername(${1:arg0})"
  }, {
    "trigger": "inet:setpeername/2",
    "contents": "inet:setpeername(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:sockname/1",
    "contents": "inet:sockname(${1:arg0})"
  }, {
    "trigger": "inet:setsockname/2",
    "contents": "inet:setsockname(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:port/1",
    "contents": "inet:port(${1:arg0})"
  }, {
    "trigger": "inet:send/2",
    "contents": "inet:send(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:setopts/2",
    "contents": "inet:setopts(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:getopts/2",
    "contents": "inet:getopts(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:getifaddrs/1",
    "contents": "inet:getifaddrs(${1:arg0})"
  }, {
    "trigger": "inet:getifaddrs/0",
    "contents": "inet:getifaddrs()"
  }, {
    "trigger": "inet:getiflist/1",
    "contents": "inet:getiflist(${1:arg0})"
  }, {
    "trigger": "inet:getiflist/0",
    "contents": "inet:getiflist()"
  }, {
    "trigger": "inet:ifget/3",
    "contents": "inet:ifget(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet:ifget/2",
    "contents": "inet:ifget(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:ifset/3",
    "contents": "inet:ifset(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet:ifset/2",
    "contents": "inet:ifset(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:getif/0",
    "contents": "inet:getif()"
  }, {
    "trigger": "inet:getif/1",
    "contents": "inet:getif(${1:arg0})"
  }, {
    "trigger": "inet:pushf/3",
    "contents": "inet:pushf(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet:popf/1",
    "contents": "inet:popf(${1:arg0})"
  }, {
    "trigger": "inet:getstat/1",
    "contents": "inet:getstat(${1:arg0})"
  }, {
    "trigger": "inet:getstat/2",
    "contents": "inet:getstat(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:gethostbyname/2",
    "contents": "inet:gethostbyname(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:gethostbyname/3",
    "contents": "inet:gethostbyname(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet:gethostbyname_tm/3",
    "contents": "inet:gethostbyname_tm(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet:gethostbyaddr/1",
    "contents": "inet:gethostbyaddr(${1:arg0})"
  }, {
    "trigger": "inet:gethostbyaddr/2",
    "contents": "inet:gethostbyaddr(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:gethostbyaddr_tm/2",
    "contents": "inet:gethostbyaddr_tm(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:ip/1",
    "contents": "inet:ip(${1:arg0})"
  }, {
    "trigger": "inet:getll/1",
    "contents": "inet:getll(${1:arg0})"
  }, {
    "trigger": "inet:getfd/1",
    "contents": "inet:getfd(${1:arg0})"
  }, {
    "trigger": "inet:getaddr/3",
    "contents": "inet:getaddr(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet:getaddrs/2",
    "contents": "inet:getaddrs(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:getaddrs/3",
    "contents": "inet:getaddrs(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet:getservbyport/2",
    "contents": "inet:getservbyport(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:ntoa/1",
    "contents": "inet:ntoa(${1:arg0})"
  }, {
    "trigger": "inet:parse_ipv4_address/1",
    "contents": "inet:parse_ipv4_address(${1:arg0})"
  }, {
    "trigger": "inet:parse_ipv6_address/1",
    "contents": "inet:parse_ipv6_address(${1:arg0})"
  }, {
    "trigger": "inet:parse_ipv4strict_address/1",
    "contents": "inet:parse_ipv4strict_address(${1:arg0})"
  }, {
    "trigger": "inet:parse_ipv6strict_address/1",
    "contents": "inet:parse_ipv6strict_address(${1:arg0})"
  }, {
    "trigger": "inet:parse_address/1",
    "contents": "inet:parse_address(${1:arg0})"
  }, {
    "trigger": "inet:parse_strict_address/1",
    "contents": "inet:parse_strict_address(${1:arg0})"
  }, {
    "trigger": "inet:options/0",
    "contents": "inet:options()"
  }, {
    "trigger": "inet:stats/0",
    "contents": "inet:stats()"
  }, {
    "trigger": "inet:connect_options/2",
    "contents": "inet:connect_options(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:listen_options/2",
    "contents": "inet:listen_options(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:sctp_options/2",
    "contents": "inet:sctp_options(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:translate_ip/2",
    "contents": "inet:translate_ip(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:getaddrs_tm/3",
    "contents": "inet:getaddrs_tm(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet:gethostbyname_self/2",
    "contents": "inet:gethostbyname_self(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:gethostbyname_string/2",
    "contents": "inet:gethostbyname_string(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:i/0",
    "contents": "inet:i()"
  }, {
    "trigger": "inet:i/1",
    "contents": "inet:i(${1:arg0})"
  }, {
    "trigger": "inet:i/2",
    "contents": "inet:i(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:format_error/1",
    "contents": "inet:format_error(${1:arg0})"
  }, {
    "trigger": "inet:tcp_close/1",
    "contents": "inet:tcp_close(${1:arg0})"
  }, {
    "trigger": "inet:tcp_controlling_process/2",
    "contents": "inet:tcp_controlling_process(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:start_timer/1",
    "contents": "inet:start_timer(${1:arg0})"
  }, {
    "trigger": "inet:timeout/1",
    "contents": "inet:timeout(${1:arg0})"
  }, {
    "trigger": "inet:timeout/2",
    "contents": "inet:timeout(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:stop_timer/1",
    "contents": "inet:stop_timer(${1:arg0})"
  }, {
    "trigger": "inet:module_info/0",
    "contents": "inet:module_info()"
  }, {
    "trigger": "inet:module_info/1",
    "contents": "inet:module_info(${1:arg0})"
  }, {
    "trigger": "inet:fdopen/6",
    "contents": "inet:fdopen(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "inet:udp_controlling_process/2",
    "contents": "inet:udp_controlling_process(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:udp_close/1",
    "contents": "inet:udp_close(${1:arg0})"
  }, {
    "trigger": "inet:open/8",
    "contents": "inet:open(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5}, ${7:arg6}, ${8:arg7})"
  }, {
    "trigger": "inet:udp_options/2",
    "contents": "inet:udp_options(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:getaddr_tm/3",
    "contents": "inet:getaddr_tm(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet:getaddr/2",
    "contents": "inet:getaddr(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:getservbyname/2",
    "contents": "inet:getservbyname(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet:gethostname/1",
    "contents": "inet:gethostname(${1:arg0})"
  }, {
    "trigger": "inet:gethostbyname/1",
    "contents": "inet:gethostbyname(${1:arg0})"
  }, {
    "trigger": "inet:gethostname/0",
    "contents": "inet:gethostname()"
  }, {
    "trigger": "inet:lock_socket/2",
    "contents": "inet:lock_socket(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_dead:module/2",
    "contents": "beam_dead:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_dead:module_info/0",
    "contents": "beam_dead:module_info()"
  }, {
    "trigger": "beam_dead:module_info/1",
    "contents": "beam_dead:module_info(${1:arg0})"
  }, {
    "trigger": "ordsets:new/0",
    "contents": "ordsets:new()"
  }, {
    "trigger": "ordsets:is_set/1",
    "contents": "ordsets:is_set(${1:arg0})"
  }, {
    "trigger": "ordsets:size/1",
    "contents": "ordsets:size(${1:arg0})"
  }, {
    "trigger": "ordsets:del_element/2",
    "contents": "ordsets:del_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ordsets:union/1",
    "contents": "ordsets:union(${1:arg0})"
  }, {
    "trigger": "ordsets:intersection/1",
    "contents": "ordsets:intersection(${1:arg0})"
  }, {
    "trigger": "ordsets:is_disjoint/2",
    "contents": "ordsets:is_disjoint(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ordsets:is_subset/2",
    "contents": "ordsets:is_subset(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ordsets:fold/3",
    "contents": "ordsets:fold(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ordsets:filter/2",
    "contents": "ordsets:filter(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ordsets:module_info/0",
    "contents": "ordsets:module_info()"
  }, {
    "trigger": "ordsets:module_info/1",
    "contents": "ordsets:module_info(${1:arg0})"
  }, {
    "trigger": "ordsets:intersection/2",
    "contents": "ordsets:intersection(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ordsets:add_element/2",
    "contents": "ordsets:add_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ordsets:union/2",
    "contents": "ordsets:union(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ordsets:subtract/2",
    "contents": "ordsets:subtract(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ordsets:is_element/2",
    "contents": "ordsets:is_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ordsets:to_list/1",
    "contents": "ordsets:to_list(${1:arg0})"
  }, {
    "trigger": "ordsets:from_list/1",
    "contents": "ordsets:from_list(${1:arg0})"
  }, {
    "trigger": "group:server/3",
    "contents": "group:server(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "group:interfaces/1",
    "contents": "group:interfaces(${1:arg0})"
  }, {
    "trigger": "group:module_info/0",
    "contents": "group:module_info()"
  }, {
    "trigger": "group:module_info/1",
    "contents": "group:module_info(${1:arg0})"
  }, {
    "trigger": "group:start/2",
    "contents": "group:start(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "group:start/3",
    "contents": "group:start(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen:init_it/6",
    "contents": "gen:init_it(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "gen:init_it/7",
    "contents": "gen:init_it(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5}, ${7:arg6})"
  }, {
    "trigger": "gen:reply/2",
    "contents": "gen:reply(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gen:module_info/0",
    "contents": "gen:module_info()"
  }, {
    "trigger": "gen:module_info/1",
    "contents": "gen:module_info(${1:arg0})"
  }, {
    "trigger": "gen:format_status_header/2",
    "contents": "gen:format_status_header(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gen:call/3",
    "contents": "gen:call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen:call/4",
    "contents": "gen:call(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "gen:debug_options/1",
    "contents": "gen:debug_options(${1:arg0})"
  }, {
    "trigger": "gen:start/6",
    "contents": "gen:start(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "gen:start/5",
    "contents": "gen:start(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "erl_scan:format_error/1",
    "contents": "erl_scan:format_error(${1:arg0})"
  }, {
    "trigger": "erl_scan:string/2",
    "contents": "erl_scan:string(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_scan:string/3",
    "contents": "erl_scan:string(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_scan:tokens/4",
    "contents": "erl_scan:tokens(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "erl_scan:token_info/1",
    "contents": "erl_scan:token_info(${1:arg0})"
  }, {
    "trigger": "erl_scan:token_info/2",
    "contents": "erl_scan:token_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_scan:attributes_info/1",
    "contents": "erl_scan:attributes_info(${1:arg0})"
  }, {
    "trigger": "erl_scan:attributes_info/2",
    "contents": "erl_scan:attributes_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_scan:set_attribute/3",
    "contents": "erl_scan:set_attribute(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_scan:module_info/0",
    "contents": "erl_scan:module_info()"
  }, {
    "trigger": "erl_scan:module_info/1",
    "contents": "erl_scan:module_info(${1:arg0})"
  }, {
    "trigger": "erl_scan:continuation_location/1",
    "contents": "erl_scan:continuation_location(${1:arg0})"
  }, {
    "trigger": "erl_scan:reserved_word/1",
    "contents": "erl_scan:reserved_word(${1:arg0})"
  }, {
    "trigger": "erl_scan:tokens/3",
    "contents": "erl_scan:tokens(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_scan:string/1",
    "contents": "erl_scan:string(${1:arg0})"
  }, {
    "trigger": "kernel:start/2",
    "contents": "kernel:start(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "kernel:stop/1",
    "contents": "kernel:stop(${1:arg0})"
  }, {
    "trigger": "kernel:config_change/3",
    "contents": "kernel:config_change(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "kernel:init/1",
    "contents": "kernel:init(${1:arg0})"
  }, {
    "trigger": "kernel:module_info/0",
    "contents": "kernel:module_info()"
  }, {
    "trigger": "kernel:module_info/1",
    "contents": "kernel:module_info(${1:arg0})"
  }, {
    "trigger": "erl_eval:exprs/3",
    "contents": "erl_eval:exprs(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_eval:exprs/4",
    "contents": "erl_eval:exprs(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "erl_eval:expr/3",
    "contents": "erl_eval:expr(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_eval:expr/5",
    "contents": "erl_eval:expr(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "erl_eval:expr_list/2",
    "contents": "erl_eval:expr_list(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_eval:expr_list/3",
    "contents": "erl_eval:expr_list(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_eval:match_clause/4",
    "contents": "erl_eval:match_clause(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "erl_eval:binding/2",
    "contents": "erl_eval:binding(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_eval:is_constant_expr/1",
    "contents": "erl_eval:is_constant_expr(${1:arg0})"
  }, {
    "trigger": "erl_eval:partial_eval/1",
    "contents": "erl_eval:partial_eval(${1:arg0})"
  }, {
    "trigger": "erl_eval:module_info/0",
    "contents": "erl_eval:module_info()"
  }, {
    "trigger": "erl_eval:module_info/1",
    "contents": "erl_eval:module_info(${1:arg0})"
  }, {
    "trigger": "erl_eval:add_binding/3",
    "contents": "erl_eval:add_binding(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_eval:expr_list/4",
    "contents": "erl_eval:expr_list(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "erl_eval:expr/4",
    "contents": "erl_eval:expr(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "erl_eval:check_command/2",
    "contents": "erl_eval:check_command(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_eval:del_binding/2",
    "contents": "erl_eval:del_binding(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_eval:bindings/1",
    "contents": "erl_eval:bindings(${1:arg0})"
  }, {
    "trigger": "erl_eval:expr/2",
    "contents": "erl_eval:expr(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_eval:fun_data/1",
    "contents": "erl_eval:fun_data(${1:arg0})"
  }, {
    "trigger": "erl_eval:exprs/2",
    "contents": "erl_eval:exprs(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_eval:new_bindings/0",
    "contents": "erl_eval:new_bindings()"
  }, {
    "trigger": "prim_file:open/3",
    "contents": "prim_file:open(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_file:open/2",
    "contents": "prim_file:open(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:open/1",
    "contents": "prim_file:open(${1:arg0})"
  }, {
    "trigger": "prim_file:open_int/4",
    "contents": "prim_file:open_int(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "prim_file:close/1",
    "contents": "prim_file:close(${1:arg0})"
  }, {
    "trigger": "prim_file:advise/4",
    "contents": "prim_file:advise(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "prim_file:allocate/3",
    "contents": "prim_file:allocate(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_file:write/2",
    "contents": "prim_file:write(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:pwrite/2",
    "contents": "prim_file:pwrite(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:pwrite/3",
    "contents": "prim_file:pwrite(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_file:datasync/1",
    "contents": "prim_file:datasync(${1:arg0})"
  }, {
    "trigger": "prim_file:sync/1",
    "contents": "prim_file:sync(${1:arg0})"
  }, {
    "trigger": "prim_file:read_line/1",
    "contents": "prim_file:read_line(${1:arg0})"
  }, {
    "trigger": "prim_file:read/2",
    "contents": "prim_file:read(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:pread/2",
    "contents": "prim_file:pread(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:pread/3",
    "contents": "prim_file:pread(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_file:position/2",
    "contents": "prim_file:position(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:truncate/1",
    "contents": "prim_file:truncate(${1:arg0})"
  }, {
    "trigger": "prim_file:copy/3",
    "contents": "prim_file:copy(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_file:ipread_s32bu_p32bu/3",
    "contents": "prim_file:ipread_s32bu_p32bu(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_file:read_file/1",
    "contents": "prim_file:read_file(${1:arg0})"
  }, {
    "trigger": "prim_file:read_file/2",
    "contents": "prim_file:read_file(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:write_file/2",
    "contents": "prim_file:write_file(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:sendfile/10",
    "contents": "prim_file:sendfile(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5}, ${7:arg6}, ${8:arg7}, ${9:arg8}, ${10:arg9})"
  }, {
    "trigger": "prim_file:start/0",
    "contents": "prim_file:start()"
  }, {
    "trigger": "prim_file:stop/1",
    "contents": "prim_file:stop(${1:arg0})"
  }, {
    "trigger": "prim_file:get_cwd/0",
    "contents": "prim_file:get_cwd()"
  }, {
    "trigger": "prim_file:get_cwd/1",
    "contents": "prim_file:get_cwd(${1:arg0})"
  }, {
    "trigger": "prim_file:get_cwd/2",
    "contents": "prim_file:get_cwd(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:set_cwd/1",
    "contents": "prim_file:set_cwd(${1:arg0})"
  }, {
    "trigger": "prim_file:set_cwd/2",
    "contents": "prim_file:set_cwd(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:delete/1",
    "contents": "prim_file:delete(${1:arg0})"
  }, {
    "trigger": "prim_file:delete/2",
    "contents": "prim_file:delete(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:rename/2",
    "contents": "prim_file:rename(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:rename/3",
    "contents": "prim_file:rename(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_file:make_dir/1",
    "contents": "prim_file:make_dir(${1:arg0})"
  }, {
    "trigger": "prim_file:make_dir/2",
    "contents": "prim_file:make_dir(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:del_dir/1",
    "contents": "prim_file:del_dir(${1:arg0})"
  }, {
    "trigger": "prim_file:del_dir/2",
    "contents": "prim_file:del_dir(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:read_file_info/1",
    "contents": "prim_file:read_file_info(${1:arg0})"
  }, {
    "trigger": "prim_file:read_file_info/2",
    "contents": "prim_file:read_file_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:read_file_info/3",
    "contents": "prim_file:read_file_info(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_file:altname/1",
    "contents": "prim_file:altname(${1:arg0})"
  }, {
    "trigger": "prim_file:altname/2",
    "contents": "prim_file:altname(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:write_file_info/2",
    "contents": "prim_file:write_file_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:write_file_info/3",
    "contents": "prim_file:write_file_info(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_file:write_file_info/4",
    "contents": "prim_file:write_file_info(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "prim_file:make_link/2",
    "contents": "prim_file:make_link(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:make_link/3",
    "contents": "prim_file:make_link(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_file:make_symlink/2",
    "contents": "prim_file:make_symlink(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:make_symlink/3",
    "contents": "prim_file:make_symlink(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_file:read_link/1",
    "contents": "prim_file:read_link(${1:arg0})"
  }, {
    "trigger": "prim_file:read_link/2",
    "contents": "prim_file:read_link(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:read_link_all/1",
    "contents": "prim_file:read_link_all(${1:arg0})"
  }, {
    "trigger": "prim_file:read_link_all/2",
    "contents": "prim_file:read_link_all(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:read_link_info/1",
    "contents": "prim_file:read_link_info(${1:arg0})"
  }, {
    "trigger": "prim_file:read_link_info/2",
    "contents": "prim_file:read_link_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:read_link_info/3",
    "contents": "prim_file:read_link_info(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_file:list_dir/1",
    "contents": "prim_file:list_dir(${1:arg0})"
  }, {
    "trigger": "prim_file:list_dir/2",
    "contents": "prim_file:list_dir(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:list_dir_all/1",
    "contents": "prim_file:list_dir_all(${1:arg0})"
  }, {
    "trigger": "prim_file:list_dir_all/2",
    "contents": "prim_file:list_dir_all(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_file:open_mode/1",
    "contents": "prim_file:open_mode(${1:arg0})"
  }, {
    "trigger": "prim_file:open_mode/4",
    "contents": "prim_file:open_mode(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "prim_file:module_info/0",
    "contents": "prim_file:module_info()"
  }, {
    "trigger": "prim_file:module_info/1",
    "contents": "prim_file:module_info(${1:arg0})"
  }, {
    "trigger": "prim_file:is_translatable/1",
    "contents": "prim_file:is_translatable(${1:arg0})"
  }, {
    "trigger": "prim_file:internal_normalize_utf8/1",
    "contents": "prim_file:internal_normalize_utf8(${1:arg0})"
  }, {
    "trigger": "prim_file:internal_native2name/1",
    "contents": "prim_file:internal_native2name(${1:arg0})"
  }, {
    "trigger": "prim_file:internal_name2native/1",
    "contents": "prim_file:internal_name2native(${1:arg0})"
  }, {
    "trigger": "v3_life:module/2",
    "contents": "v3_life:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "v3_life:vdb_find/2",
    "contents": "v3_life:vdb_find(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "v3_life:module_info/0",
    "contents": "v3_life:module_info()"
  }, {
    "trigger": "v3_life:module_info/1",
    "contents": "v3_life:module_info(${1:arg0})"
  }, {
    "trigger": "ets:match_spec_run/2",
    "contents": "ets:match_spec_run(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:repair_continuation/2",
    "contents": "ets:repair_continuation(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:fun2ms/1",
    "contents": "ets:fun2ms(${1:arg0})"
  }, {
    "trigger": "ets:foldl/3",
    "contents": "ets:foldl(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:foldr/3",
    "contents": "ets:foldr(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:from_dets/2",
    "contents": "ets:from_dets(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:to_dets/2",
    "contents": "ets:to_dets(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:test_ms/2",
    "contents": "ets:test_ms(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:init_table/2",
    "contents": "ets:init_table(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:tab2file/2",
    "contents": "ets:tab2file(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:tab2file/3",
    "contents": "ets:tab2file(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:file2tab/1",
    "contents": "ets:file2tab(${1:arg0})"
  }, {
    "trigger": "ets:file2tab/2",
    "contents": "ets:file2tab(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:tabfile_info/1",
    "contents": "ets:tabfile_info(${1:arg0})"
  }, {
    "trigger": "ets:table/1",
    "contents": "ets:table(${1:arg0})"
  }, {
    "trigger": "ets:table/2",
    "contents": "ets:table(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:i/0",
    "contents": "ets:i()"
  }, {
    "trigger": "ets:i/1",
    "contents": "ets:i(${1:arg0})"
  }, {
    "trigger": "ets:i/2",
    "contents": "ets:i(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:i/3",
    "contents": "ets:i(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:module_info/0",
    "contents": "ets:module_info()"
  }, {
    "trigger": "ets:module_info/1",
    "contents": "ets:module_info(${1:arg0})"
  }, {
    "trigger": "ets:tab2list/1",
    "contents": "ets:tab2list(${1:arg0})"
  }, {
    "trigger": "ets:match_delete/2",
    "contents": "ets:match_delete(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:filter/3",
    "contents": "ets:filter(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:setopts/2",
    "contents": "ets:setopts(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:give_away/3",
    "contents": "ets:give_away(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:update_element/3",
    "contents": "ets:update_element(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:match_spec_run_r/3",
    "contents": "ets:match_spec_run_r(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:match_spec_compile/1",
    "contents": "ets:match_spec_compile(${1:arg0})"
  }, {
    "trigger": "ets:select_delete/2",
    "contents": "ets:select_delete(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:select_reverse/3",
    "contents": "ets:select_reverse(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:select_reverse/2",
    "contents": "ets:select_reverse(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:select_reverse/1",
    "contents": "ets:select_reverse(${1:arg0})"
  }, {
    "trigger": "ets:select_count/2",
    "contents": "ets:select_count(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:select/3",
    "contents": "ets:select(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:select/2",
    "contents": "ets:select(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:select/1",
    "contents": "ets:select(${1:arg0})"
  }, {
    "trigger": "ets:update_counter/3",
    "contents": "ets:update_counter(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:slot/2",
    "contents": "ets:slot(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:safe_fixtable/2",
    "contents": "ets:safe_fixtable(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:rename/2",
    "contents": "ets:rename(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:insert_new/2",
    "contents": "ets:insert_new(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:insert/2",
    "contents": "ets:insert(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:prev/2",
    "contents": "ets:prev(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:next/2",
    "contents": "ets:next(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:member/2",
    "contents": "ets:member(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:match_object/3",
    "contents": "ets:match_object(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:match_object/2",
    "contents": "ets:match_object(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:match_object/1",
    "contents": "ets:match_object(${1:arg0})"
  }, {
    "trigger": "ets:match/3",
    "contents": "ets:match(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:match/2",
    "contents": "ets:match(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:match/1",
    "contents": "ets:match(${1:arg0})"
  }, {
    "trigger": "ets:last/1",
    "contents": "ets:last(${1:arg0})"
  }, {
    "trigger": "ets:info/2",
    "contents": "ets:info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:info/1",
    "contents": "ets:info(${1:arg0})"
  }, {
    "trigger": "ets:lookup_element/3",
    "contents": "ets:lookup_element(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ets:lookup/2",
    "contents": "ets:lookup(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:is_compiled_ms/1",
    "contents": "ets:is_compiled_ms(${1:arg0})"
  }, {
    "trigger": "ets:first/1",
    "contents": "ets:first(${1:arg0})"
  }, {
    "trigger": "ets:delete_object/2",
    "contents": "ets:delete_object(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:delete_all_objects/1",
    "contents": "ets:delete_all_objects(${1:arg0})"
  }, {
    "trigger": "ets:delete/2",
    "contents": "ets:delete(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:delete/1",
    "contents": "ets:delete(${1:arg0})"
  }, {
    "trigger": "ets:new/2",
    "contents": "ets:new(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ets:all/0",
    "contents": "ets:all()"
  }, {
    "trigger": "lists:append/2",
    "contents": "lists:append(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:append/1",
    "contents": "lists:append(${1:arg0})"
  }, {
    "trigger": "lists:subtract/2",
    "contents": "lists:subtract(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:nth/2",
    "contents": "lists:nth(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:nthtail/2",
    "contents": "lists:nthtail(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:prefix/2",
    "contents": "lists:prefix(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:suffix/2",
    "contents": "lists:suffix(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:last/1",
    "contents": "lists:last(${1:arg0})"
  }, {
    "trigger": "lists:seq/2",
    "contents": "lists:seq(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:seq/3",
    "contents": "lists:seq(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:sum/1",
    "contents": "lists:sum(${1:arg0})"
  }, {
    "trigger": "lists:duplicate/2",
    "contents": "lists:duplicate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:min/1",
    "contents": "lists:min(${1:arg0})"
  }, {
    "trigger": "lists:max/1",
    "contents": "lists:max(${1:arg0})"
  }, {
    "trigger": "lists:sublist/3",
    "contents": "lists:sublist(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:sublist/2",
    "contents": "lists:sublist(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:zip/2",
    "contents": "lists:zip(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:zip3/3",
    "contents": "lists:zip3(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:unzip3/1",
    "contents": "lists:unzip3(${1:arg0})"
  }, {
    "trigger": "lists:zipwith/3",
    "contents": "lists:zipwith(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:zipwith3/4",
    "contents": "lists:zipwith3(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "lists:merge/1",
    "contents": "lists:merge(${1:arg0})"
  }, {
    "trigger": "lists:merge3/3",
    "contents": "lists:merge3(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:rmerge3/3",
    "contents": "lists:rmerge3(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:merge/2",
    "contents": "lists:merge(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:rmerge/2",
    "contents": "lists:rmerge(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:flatten/2",
    "contents": "lists:flatten(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:flatlength/1",
    "contents": "lists:flatlength(${1:arg0})"
  }, {
    "trigger": "lists:keytake/3",
    "contents": "lists:keytake(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:keystore/4",
    "contents": "lists:keystore(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "lists:keysort/2",
    "contents": "lists:keysort(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:keymerge/3",
    "contents": "lists:keymerge(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:rkeymerge/3",
    "contents": "lists:rkeymerge(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:ukeysort/2",
    "contents": "lists:ukeysort(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:ukeymerge/3",
    "contents": "lists:ukeymerge(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:rukeymerge/3",
    "contents": "lists:rukeymerge(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:keymap/3",
    "contents": "lists:keymap(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:sort/2",
    "contents": "lists:sort(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:merge/3",
    "contents": "lists:merge(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:rmerge/3",
    "contents": "lists:rmerge(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:usort/2",
    "contents": "lists:usort(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:umerge/3",
    "contents": "lists:umerge(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:rumerge/3",
    "contents": "lists:rumerge(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:usort/1",
    "contents": "lists:usort(${1:arg0})"
  }, {
    "trigger": "lists:umerge/1",
    "contents": "lists:umerge(${1:arg0})"
  }, {
    "trigger": "lists:umerge3/3",
    "contents": "lists:umerge3(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:rumerge3/3",
    "contents": "lists:rumerge3(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:umerge/2",
    "contents": "lists:umerge(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:rumerge/2",
    "contents": "lists:rumerge(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:all/2",
    "contents": "lists:all(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:any/2",
    "contents": "lists:any(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:flatmap/2",
    "contents": "lists:flatmap(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:foldr/3",
    "contents": "lists:foldr(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:partition/2",
    "contents": "lists:partition(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:filtermap/2",
    "contents": "lists:filtermap(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:mapfoldl/3",
    "contents": "lists:mapfoldl(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:mapfoldr/3",
    "contents": "lists:mapfoldr(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:takewhile/2",
    "contents": "lists:takewhile(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:dropwhile/2",
    "contents": "lists:dropwhile(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:split/2",
    "contents": "lists:split(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:module_info/0",
    "contents": "lists:module_info()"
  }, {
    "trigger": "lists:module_info/1",
    "contents": "lists:module_info(${1:arg0})"
  }, {
    "trigger": "lists:sort/1",
    "contents": "lists:sort(${1:arg0})"
  }, {
    "trigger": "lists:splitwith/2",
    "contents": "lists:splitwith(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:keyreplace/4",
    "contents": "lists:keyreplace(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "lists:reverse/1",
    "contents": "lists:reverse(${1:arg0})"
  }, {
    "trigger": "lists:keydelete/3",
    "contents": "lists:keydelete(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:map/2",
    "contents": "lists:map(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:flatten/1",
    "contents": "lists:flatten(${1:arg0})"
  }, {
    "trigger": "lists:delete/2",
    "contents": "lists:delete(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:zf/2",
    "contents": "lists:zf(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:filter/2",
    "contents": "lists:filter(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:unzip/1",
    "contents": "lists:unzip(${1:arg0})"
  }, {
    "trigger": "lists:concat/1",
    "contents": "lists:concat(${1:arg0})"
  }, {
    "trigger": "lists:foldl/3",
    "contents": "lists:foldl(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:foreach/2",
    "contents": "lists:foreach(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:keyfind/3",
    "contents": "lists:keyfind(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:keysearch/3",
    "contents": "lists:keysearch(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:keymember/3",
    "contents": "lists:keymember(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "lists:reverse/2",
    "contents": "lists:reverse(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "lists:member/2",
    "contents": "lists:member(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sets:from_list/1",
    "contents": "sets:from_list(${1:arg0})"
  }, {
    "trigger": "sets:union/2",
    "contents": "sets:union(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sets:union/1",
    "contents": "sets:union(${1:arg0})"
  }, {
    "trigger": "sets:intersection/2",
    "contents": "sets:intersection(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sets:intersection/1",
    "contents": "sets:intersection(${1:arg0})"
  }, {
    "trigger": "sets:is_disjoint/2",
    "contents": "sets:is_disjoint(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sets:subtract/2",
    "contents": "sets:subtract(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sets:is_subset/2",
    "contents": "sets:is_subset(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sets:filter/2",
    "contents": "sets:filter(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sets:module_info/0",
    "contents": "sets:module_info()"
  }, {
    "trigger": "sets:module_info/1",
    "contents": "sets:module_info(${1:arg0})"
  }, {
    "trigger": "sets:is_element/2",
    "contents": "sets:is_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sets:is_set/1",
    "contents": "sets:is_set(${1:arg0})"
  }, {
    "trigger": "sets:add_element/2",
    "contents": "sets:add_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sets:del_element/2",
    "contents": "sets:del_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sets:new/0",
    "contents": "sets:new()"
  }, {
    "trigger": "sets:size/1",
    "contents": "sets:size(${1:arg0})"
  }, {
    "trigger": "sets:fold/3",
    "contents": "sets:fold(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sets:to_list/1",
    "contents": "sets:to_list(${1:arg0})"
  }, {
    "trigger": "beam_utils:is_killed_block/2",
    "contents": "beam_utils:is_killed_block(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_utils:is_killed/3",
    "contents": "beam_utils:is_killed(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "beam_utils:is_killed_at/3",
    "contents": "beam_utils:is_killed_at(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "beam_utils:is_not_used/3",
    "contents": "beam_utils:is_not_used(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "beam_utils:is_not_used_at/3",
    "contents": "beam_utils:is_not_used_at(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "beam_utils:index_labels/1",
    "contents": "beam_utils:index_labels(${1:arg0})"
  }, {
    "trigger": "beam_utils:empty_label_index/0",
    "contents": "beam_utils:empty_label_index()"
  }, {
    "trigger": "beam_utils:index_label/3",
    "contents": "beam_utils:index_label(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "beam_utils:code_at/2",
    "contents": "beam_utils:code_at(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_utils:is_pure_test/1",
    "contents": "beam_utils:is_pure_test(${1:arg0})"
  }, {
    "trigger": "beam_utils:live_opt/1",
    "contents": "beam_utils:live_opt(${1:arg0})"
  }, {
    "trigger": "beam_utils:delete_live_annos/1",
    "contents": "beam_utils:delete_live_annos(${1:arg0})"
  }, {
    "trigger": "beam_utils:combine_heap_needs/2",
    "contents": "beam_utils:combine_heap_needs(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_utils:module_info/0",
    "contents": "beam_utils:module_info()"
  }, {
    "trigger": "beam_utils:module_info/1",
    "contents": "beam_utils:module_info(${1:arg0})"
  }, {
    "trigger": "beam_utils:bif_to_test/3",
    "contents": "beam_utils:bif_to_test(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet_udp:getserv/1",
    "contents": "inet_udp:getserv(${1:arg0})"
  }, {
    "trigger": "inet_udp:getaddr/1",
    "contents": "inet_udp:getaddr(${1:arg0})"
  }, {
    "trigger": "inet_udp:getaddr/2",
    "contents": "inet_udp:getaddr(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_udp:open/1",
    "contents": "inet_udp:open(${1:arg0})"
  }, {
    "trigger": "inet_udp:send/4",
    "contents": "inet_udp:send(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "inet_udp:send/2",
    "contents": "inet_udp:send(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_udp:connect/3",
    "contents": "inet_udp:connect(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet_udp:recv/2",
    "contents": "inet_udp:recv(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_udp:recv/3",
    "contents": "inet_udp:recv(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "inet_udp:controlling_process/2",
    "contents": "inet_udp:controlling_process(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_udp:fdopen/2",
    "contents": "inet_udp:fdopen(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_udp:module_info/0",
    "contents": "inet_udp:module_info()"
  }, {
    "trigger": "inet_udp:module_info/1",
    "contents": "inet_udp:module_info(${1:arg0})"
  }, {
    "trigger": "inet_udp:close/1",
    "contents": "inet_udp:close(${1:arg0})"
  }, {
    "trigger": "inet_udp:open/2",
    "contents": "inet_udp:open(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "subl_autocomp:extra/0",
    "contents": "subl_autocomp:extra()"
  }, {
    "trigger": "subl_autocomp:generate/0",
    "contents": "subl_autocomp:generate()"
  }, {
    "trigger": "subl_autocomp:process/1",
    "contents": "subl_autocomp:process(${1:arg0})"
  }, {
    "trigger": "subl_autocomp:completion/2",
    "contents": "subl_autocomp:completion(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "subl_autocomp:completion/3",
    "contents": "subl_autocomp:completion(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "subl_autocomp:bifs/0",
    "contents": "subl_autocomp:bifs()"
  }, {
    "trigger": "subl_autocomp:module_info/0",
    "contents": "subl_autocomp:module_info()"
  }, {
    "trigger": "subl_autocomp:module_info/1",
    "contents": "subl_autocomp:module_info(${1:arg0})"
  }, {
    "trigger": "io_lib_pretty:print/3",
    "contents": "io_lib_pretty:print(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "io_lib_pretty:print/5",
    "contents": "io_lib_pretty:print(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "io_lib_pretty:print/6",
    "contents": "io_lib_pretty:print(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "io_lib_pretty:module_info/0",
    "contents": "io_lib_pretty:module_info()"
  }, {
    "trigger": "io_lib_pretty:module_info/1",
    "contents": "io_lib_pretty:module_info(${1:arg0})"
  }, {
    "trigger": "io_lib_pretty:print/2",
    "contents": "io_lib_pretty:print(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io_lib_pretty:print/4",
    "contents": "io_lib_pretty:print(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "io_lib_pretty:print/1",
    "contents": "io_lib_pretty:print(${1:arg0})"
  }, {
    "trigger": "code:objfile_extension/0",
    "contents": "code:objfile_extension()"
  }, {
    "trigger": "code:load_file/1",
    "contents": "code:load_file(${1:arg0})"
  }, {
    "trigger": "code:load_abs/1",
    "contents": "code:load_abs(${1:arg0})"
  }, {
    "trigger": "code:load_abs/2",
    "contents": "code:load_abs(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "code:load_binary/3",
    "contents": "code:load_binary(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "code:load_native_partial/2",
    "contents": "code:load_native_partial(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "code:load_native_sticky/3",
    "contents": "code:load_native_sticky(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "code:delete/1",
    "contents": "code:delete(${1:arg0})"
  }, {
    "trigger": "code:purge/1",
    "contents": "code:purge(${1:arg0})"
  }, {
    "trigger": "code:soft_purge/1",
    "contents": "code:soft_purge(${1:arg0})"
  }, {
    "trigger": "code:get_object_code/1",
    "contents": "code:get_object_code(${1:arg0})"
  }, {
    "trigger": "code:all_loaded/0",
    "contents": "code:all_loaded()"
  }, {
    "trigger": "code:stop/0",
    "contents": "code:stop()"
  }, {
    "trigger": "code:root_dir/0",
    "contents": "code:root_dir()"
  }, {
    "trigger": "code:lib_dir/0",
    "contents": "code:lib_dir()"
  }, {
    "trigger": "code:lib_dir/1",
    "contents": "code:lib_dir(${1:arg0})"
  }, {
    "trigger": "code:lib_dir/2",
    "contents": "code:lib_dir(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "code:compiler_dir/0",
    "contents": "code:compiler_dir()"
  }, {
    "trigger": "code:priv_dir/1",
    "contents": "code:priv_dir(${1:arg0})"
  }, {
    "trigger": "code:stick_dir/1",
    "contents": "code:stick_dir(${1:arg0})"
  }, {
    "trigger": "code:unstick_dir/1",
    "contents": "code:unstick_dir(${1:arg0})"
  }, {
    "trigger": "code:stick_mod/1",
    "contents": "code:stick_mod(${1:arg0})"
  }, {
    "trigger": "code:unstick_mod/1",
    "contents": "code:unstick_mod(${1:arg0})"
  }, {
    "trigger": "code:is_sticky/1",
    "contents": "code:is_sticky(${1:arg0})"
  }, {
    "trigger": "code:set_path/1",
    "contents": "code:set_path(${1:arg0})"
  }, {
    "trigger": "code:get_path/0",
    "contents": "code:get_path()"
  }, {
    "trigger": "code:add_path/1",
    "contents": "code:add_path(${1:arg0})"
  }, {
    "trigger": "code:add_pathz/1",
    "contents": "code:add_pathz(${1:arg0})"
  }, {
    "trigger": "code:add_patha/1",
    "contents": "code:add_patha(${1:arg0})"
  }, {
    "trigger": "code:add_paths/1",
    "contents": "code:add_paths(${1:arg0})"
  }, {
    "trigger": "code:add_pathsz/1",
    "contents": "code:add_pathsz(${1:arg0})"
  }, {
    "trigger": "code:add_pathsa/1",
    "contents": "code:add_pathsa(${1:arg0})"
  }, {
    "trigger": "code:del_path/1",
    "contents": "code:del_path(${1:arg0})"
  }, {
    "trigger": "code:replace_path/2",
    "contents": "code:replace_path(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "code:rehash/0",
    "contents": "code:rehash()"
  }, {
    "trigger": "code:get_mode/0",
    "contents": "code:get_mode()"
  }, {
    "trigger": "code:start_link/0",
    "contents": "code:start_link()"
  }, {
    "trigger": "code:start_link/1",
    "contents": "code:start_link(${1:arg0})"
  }, {
    "trigger": "code:which/1",
    "contents": "code:which(${1:arg0})"
  }, {
    "trigger": "code:where_is_file/2",
    "contents": "code:where_is_file(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "code:set_primary_archive/4",
    "contents": "code:set_primary_archive(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "code:clash/0",
    "contents": "code:clash()"
  }, {
    "trigger": "code:module_info/0",
    "contents": "code:module_info()"
  }, {
    "trigger": "code:module_info/1",
    "contents": "code:module_info(${1:arg0})"
  }, {
    "trigger": "code:where_is_file/1",
    "contents": "code:where_is_file(${1:arg0})"
  }, {
    "trigger": "code:is_loaded/1",
    "contents": "code:is_loaded(${1:arg0})"
  }, {
    "trigger": "code:ensure_loaded/1",
    "contents": "code:ensure_loaded(${1:arg0})"
  }, {
    "trigger": "code:is_module_native/1",
    "contents": "code:is_module_native(${1:arg0})"
  }, {
    "trigger": "code:make_stub_module/3",
    "contents": "code:make_stub_module(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "code:module_md5/1",
    "contents": "code:module_md5(${1:arg0})"
  }, {
    "trigger": "code:get_chunk/2",
    "contents": "code:get_chunk(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ram_file:read/2",
    "contents": "ram_file:read(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ram_file:write/2",
    "contents": "ram_file:write(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ram_file:copy/3",
    "contents": "ram_file:copy(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ram_file:datasync/1",
    "contents": "ram_file:datasync(${1:arg0})"
  }, {
    "trigger": "ram_file:sync/1",
    "contents": "ram_file:sync(${1:arg0})"
  }, {
    "trigger": "ram_file:truncate/1",
    "contents": "ram_file:truncate(${1:arg0})"
  }, {
    "trigger": "ram_file:position/2",
    "contents": "ram_file:position(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ram_file:pread/2",
    "contents": "ram_file:pread(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ram_file:pread/3",
    "contents": "ram_file:pread(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ram_file:pwrite/2",
    "contents": "ram_file:pwrite(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ram_file:pwrite/3",
    "contents": "ram_file:pwrite(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ram_file:ipread_s32bu_p32bu/3",
    "contents": "ram_file:ipread_s32bu_p32bu(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ram_file:set_file/2",
    "contents": "ram_file:set_file(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "ram_file:get_file_close/1",
    "contents": "ram_file:get_file_close(${1:arg0})"
  }, {
    "trigger": "ram_file:get_size/1",
    "contents": "ram_file:get_size(${1:arg0})"
  }, {
    "trigger": "ram_file:uuencode/1",
    "contents": "ram_file:uuencode(${1:arg0})"
  }, {
    "trigger": "ram_file:uudecode/1",
    "contents": "ram_file:uudecode(${1:arg0})"
  }, {
    "trigger": "ram_file:advise/4",
    "contents": "ram_file:advise(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "ram_file:allocate/3",
    "contents": "ram_file:allocate(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "ram_file:open_mode/1",
    "contents": "ram_file:open_mode(${1:arg0})"
  }, {
    "trigger": "ram_file:module_info/0",
    "contents": "ram_file:module_info()"
  }, {
    "trigger": "ram_file:module_info/1",
    "contents": "ram_file:module_info(${1:arg0})"
  }, {
    "trigger": "ram_file:compress/1",
    "contents": "ram_file:compress(${1:arg0})"
  }, {
    "trigger": "ram_file:close/1",
    "contents": "ram_file:close(${1:arg0})"
  }, {
    "trigger": "ram_file:get_file/1",
    "contents": "ram_file:get_file(${1:arg0})"
  }, {
    "trigger": "ram_file:uncompress/1",
    "contents": "ram_file:uncompress(${1:arg0})"
  }, {
    "trigger": "ram_file:open/2",
    "contents": "ram_file:open(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_receive:module/2",
    "contents": "beam_receive:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_receive:module_info/0",
    "contents": "beam_receive:module_info()"
  }, {
    "trigger": "beam_receive:module_info/1",
    "contents": "beam_receive:module_info(${1:arg0})"
  }, {
    "trigger": "dict:append_list/3",
    "contents": "dict:append_list(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "dict:update/3",
    "contents": "dict:update(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "dict:update/4",
    "contents": "dict:update(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "dict:update_counter/3",
    "contents": "dict:update_counter(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "dict:map/2",
    "contents": "dict:map(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "dict:filter/2",
    "contents": "dict:filter(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "dict:merge/3",
    "contents": "dict:merge(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "dict:module_info/0",
    "contents": "dict:module_info()"
  }, {
    "trigger": "dict:module_info/1",
    "contents": "dict:module_info(${1:arg0})"
  }, {
    "trigger": "dict:size/1",
    "contents": "dict:size(${1:arg0})"
  }, {
    "trigger": "dict:fetch_keys/1",
    "contents": "dict:fetch_keys(${1:arg0})"
  }, {
    "trigger": "dict:fetch/2",
    "contents": "dict:fetch(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "dict:from_list/1",
    "contents": "dict:from_list(${1:arg0})"
  }, {
    "trigger": "dict:is_key/2",
    "contents": "dict:is_key(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "dict:find/2",
    "contents": "dict:find(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "dict:append/3",
    "contents": "dict:append(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "dict:new/0",
    "contents": "dict:new()"
  }, {
    "trigger": "dict:store/3",
    "contents": "dict:store(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "dict:erase/2",
    "contents": "dict:erase(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "dict:fold/3",
    "contents": "dict:fold(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "dict:to_list/1",
    "contents": "dict:to_list(${1:arg0})"
  }, {
    "trigger": "beam_opcodes:opname/1",
    "contents": "beam_opcodes:opname(${1:arg0})"
  }, {
    "trigger": "beam_opcodes:module_info/0",
    "contents": "beam_opcodes:module_info()"
  }, {
    "trigger": "beam_opcodes:module_info/1",
    "contents": "beam_opcodes:module_info(${1:arg0})"
  }, {
    "trigger": "beam_opcodes:format_number/0",
    "contents": "beam_opcodes:format_number()"
  }, {
    "trigger": "beam_opcodes:opcode/2",
    "contents": "beam_opcodes:opcode(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary:split/2",
    "contents": "binary:split(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary:split/3",
    "contents": "binary:split(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "binary:replace/3",
    "contents": "binary:replace(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "binary:replace/4",
    "contents": "binary:replace(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "binary:module_info/0",
    "contents": "binary:module_info()"
  }, {
    "trigger": "binary:module_info/1",
    "contents": "binary:module_info(${1:arg0})"
  }, {
    "trigger": "binary:decode_unsigned/2",
    "contents": "binary:decode_unsigned(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary:decode_unsigned/1",
    "contents": "binary:decode_unsigned(${1:arg0})"
  }, {
    "trigger": "binary:encode_unsigned/2",
    "contents": "binary:encode_unsigned(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary:encode_unsigned/1",
    "contents": "binary:encode_unsigned(${1:arg0})"
  }, {
    "trigger": "binary:referenced_byte_size/1",
    "contents": "binary:referenced_byte_size(${1:arg0})"
  }, {
    "trigger": "binary:copy/2",
    "contents": "binary:copy(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary:copy/1",
    "contents": "binary:copy(${1:arg0})"
  }, {
    "trigger": "binary:list_to_bin/1",
    "contents": "binary:list_to_bin(${1:arg0})"
  }, {
    "trigger": "binary:bin_to_list/3",
    "contents": "binary:bin_to_list(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "binary:bin_to_list/2",
    "contents": "binary:bin_to_list(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary:bin_to_list/1",
    "contents": "binary:bin_to_list(${1:arg0})"
  }, {
    "trigger": "binary:part/3",
    "contents": "binary:part(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "binary:part/2",
    "contents": "binary:part(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary:at/2",
    "contents": "binary:at(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary:last/1",
    "contents": "binary:last(${1:arg0})"
  }, {
    "trigger": "binary:first/1",
    "contents": "binary:first(${1:arg0})"
  }, {
    "trigger": "binary:longest_common_suffix/1",
    "contents": "binary:longest_common_suffix(${1:arg0})"
  }, {
    "trigger": "binary:longest_common_prefix/1",
    "contents": "binary:longest_common_prefix(${1:arg0})"
  }, {
    "trigger": "binary:matches/3",
    "contents": "binary:matches(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "binary:matches/2",
    "contents": "binary:matches(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary:match/3",
    "contents": "binary:match(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "binary:match/2",
    "contents": "binary:match(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "binary:compile_pattern/1",
    "contents": "binary:compile_pattern(${1:arg0})"
  }, {
    "trigger": "erl_posix_msg:module_info/0",
    "contents": "erl_posix_msg:module_info()"
  }, {
    "trigger": "erl_posix_msg:module_info/1",
    "contents": "erl_posix_msg:module_info(${1:arg0})"
  }, {
    "trigger": "erl_posix_msg:message/1",
    "contents": "erl_posix_msg:message(${1:arg0})"
  }, {
    "trigger": "gen_event:start/0",
    "contents": "gen_event:start()"
  }, {
    "trigger": "gen_event:start_link/0",
    "contents": "gen_event:start_link()"
  }, {
    "trigger": "gen_event:init_it/6",
    "contents": "gen_event:init_it(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "gen_event:add_sup_handler/3",
    "contents": "gen_event:add_sup_handler(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_event:sync_notify/2",
    "contents": "gen_event:sync_notify(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gen_event:call/4",
    "contents": "gen_event:call(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "gen_event:swap_sup_handler/3",
    "contents": "gen_event:swap_sup_handler(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_event:stop/1",
    "contents": "gen_event:stop(${1:arg0})"
  }, {
    "trigger": "gen_event:wake_hib/4",
    "contents": "gen_event:wake_hib(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "gen_event:system_continue/3",
    "contents": "gen_event:system_continue(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_event:system_terminate/4",
    "contents": "gen_event:system_terminate(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "gen_event:system_code_change/4",
    "contents": "gen_event:system_code_change(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "gen_event:format_status/2",
    "contents": "gen_event:format_status(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gen_event:behaviour_info/1",
    "contents": "gen_event:behaviour_info(${1:arg0})"
  }, {
    "trigger": "gen_event:module_info/0",
    "contents": "gen_event:module_info()"
  }, {
    "trigger": "gen_event:module_info/1",
    "contents": "gen_event:module_info(${1:arg0})"
  }, {
    "trigger": "gen_event:call/3",
    "contents": "gen_event:call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_event:which_handlers/1",
    "contents": "gen_event:which_handlers(${1:arg0})"
  }, {
    "trigger": "gen_event:add_handler/3",
    "contents": "gen_event:add_handler(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_event:delete_handler/3",
    "contents": "gen_event:delete_handler(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_event:swap_handler/3",
    "contents": "gen_event:swap_handler(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_event:notify/2",
    "contents": "gen_event:notify(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gen_event:start_link/1",
    "contents": "gen_event:start_link(${1:arg0})"
  }, {
    "trigger": "gen_event:start/1",
    "contents": "gen_event:start(${1:arg0})"
  }, {
    "trigger": "heart:start/0",
    "contents": "heart:start()"
  }, {
    "trigger": "heart:init/2",
    "contents": "heart:init(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "heart:set_cmd/1",
    "contents": "heart:set_cmd(${1:arg0})"
  }, {
    "trigger": "heart:get_cmd/0",
    "contents": "heart:get_cmd()"
  }, {
    "trigger": "heart:clear_cmd/0",
    "contents": "heart:clear_cmd()"
  }, {
    "trigger": "heart:cycle/0",
    "contents": "heart:cycle()"
  }, {
    "trigger": "heart:module_info/0",
    "contents": "heart:module_info()"
  }, {
    "trigger": "heart:module_info/1",
    "contents": "heart:module_info(${1:arg0})"
  }, {
    "trigger": "io_lib_format:module_info/0",
    "contents": "io_lib_format:module_info()"
  }, {
    "trigger": "io_lib_format:module_info/1",
    "contents": "io_lib_format:module_info(${1:arg0})"
  }, {
    "trigger": "io_lib_format:fwrite_g/1",
    "contents": "io_lib_format:fwrite_g(${1:arg0})"
  }, {
    "trigger": "io_lib_format:indentation/2",
    "contents": "io_lib_format:indentation(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "io_lib_format:fwrite/2",
    "contents": "io_lib_format:fwrite(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_lint:bool_option/4",
    "contents": "erl_lint:bool_option(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "erl_lint:value_option/3",
    "contents": "erl_lint:value_option(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_lint:value_option/7",
    "contents": "erl_lint:value_option(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5}, ${7:arg6})"
  }, {
    "trigger": "erl_lint:format_error/1",
    "contents": "erl_lint:format_error(${1:arg0})"
  }, {
    "trigger": "erl_lint:exprs/2",
    "contents": "erl_lint:exprs(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_lint:module/1",
    "contents": "erl_lint:module(${1:arg0})"
  }, {
    "trigger": "erl_lint:module/2",
    "contents": "erl_lint:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_lint:module/3",
    "contents": "erl_lint:module(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_lint:is_pattern_expr/1",
    "contents": "erl_lint:is_pattern_expr(${1:arg0})"
  }, {
    "trigger": "erl_lint:is_guard_test/2",
    "contents": "erl_lint:is_guard_test(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_lint:is_guard_expr/1",
    "contents": "erl_lint:is_guard_expr(${1:arg0})"
  }, {
    "trigger": "erl_lint:module_info/0",
    "contents": "erl_lint:module_info()"
  }, {
    "trigger": "erl_lint:module_info/1",
    "contents": "erl_lint:module_info(${1:arg0})"
  }, {
    "trigger": "erl_lint:is_guard_test/1",
    "contents": "erl_lint:is_guard_test(${1:arg0})"
  }, {
    "trigger": "erl_lint:modify_line/2",
    "contents": "erl_lint:modify_line(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_lint:used_vars/2",
    "contents": "erl_lint:used_vars(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_lint:exprs_opt/3",
    "contents": "erl_lint:exprs_opt(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:type/1",
    "contents": "cerl:type(${1:arg0})"
  }, {
    "trigger": "cerl:is_leaf/1",
    "contents": "cerl:is_leaf(${1:arg0})"
  }, {
    "trigger": "cerl:get_ann/1",
    "contents": "cerl:get_ann(${1:arg0})"
  }, {
    "trigger": "cerl:set_ann/2",
    "contents": "cerl:set_ann(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:add_ann/2",
    "contents": "cerl:add_ann(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:copy_ann/2",
    "contents": "cerl:copy_ann(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:abstract/1",
    "contents": "cerl:abstract(${1:arg0})"
  }, {
    "trigger": "cerl:ann_abstract/2",
    "contents": "cerl:ann_abstract(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:is_literal_term/1",
    "contents": "cerl:is_literal_term(${1:arg0})"
  }, {
    "trigger": "cerl:concrete/1",
    "contents": "cerl:concrete(${1:arg0})"
  }, {
    "trigger": "cerl:is_literal/1",
    "contents": "cerl:is_literal(${1:arg0})"
  }, {
    "trigger": "cerl:fold_literal/1",
    "contents": "cerl:fold_literal(${1:arg0})"
  }, {
    "trigger": "cerl:unfold_literal/1",
    "contents": "cerl:unfold_literal(${1:arg0})"
  }, {
    "trigger": "cerl:c_module/3",
    "contents": "cerl:c_module(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:c_module/4",
    "contents": "cerl:c_module(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "cerl:ann_c_module/4",
    "contents": "cerl:ann_c_module(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "cerl:ann_c_module/5",
    "contents": "cerl:ann_c_module(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "cerl:update_c_module/5",
    "contents": "cerl:update_c_module(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "cerl:is_c_module/1",
    "contents": "cerl:is_c_module(${1:arg0})"
  }, {
    "trigger": "cerl:module_name/1",
    "contents": "cerl:module_name(${1:arg0})"
  }, {
    "trigger": "cerl:module_exports/1",
    "contents": "cerl:module_exports(${1:arg0})"
  }, {
    "trigger": "cerl:module_attrs/1",
    "contents": "cerl:module_attrs(${1:arg0})"
  }, {
    "trigger": "cerl:module_defs/1",
    "contents": "cerl:module_defs(${1:arg0})"
  }, {
    "trigger": "cerl:module_vars/1",
    "contents": "cerl:module_vars(${1:arg0})"
  }, {
    "trigger": "cerl:c_int/1",
    "contents": "cerl:c_int(${1:arg0})"
  }, {
    "trigger": "cerl:ann_c_int/2",
    "contents": "cerl:ann_c_int(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:is_c_int/1",
    "contents": "cerl:is_c_int(${1:arg0})"
  }, {
    "trigger": "cerl:int_val/1",
    "contents": "cerl:int_val(${1:arg0})"
  }, {
    "trigger": "cerl:int_lit/1",
    "contents": "cerl:int_lit(${1:arg0})"
  }, {
    "trigger": "cerl:c_float/1",
    "contents": "cerl:c_float(${1:arg0})"
  }, {
    "trigger": "cerl:ann_c_float/2",
    "contents": "cerl:ann_c_float(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:is_c_float/1",
    "contents": "cerl:is_c_float(${1:arg0})"
  }, {
    "trigger": "cerl:float_val/1",
    "contents": "cerl:float_val(${1:arg0})"
  }, {
    "trigger": "cerl:float_lit/1",
    "contents": "cerl:float_lit(${1:arg0})"
  }, {
    "trigger": "cerl:c_atom/1",
    "contents": "cerl:c_atom(${1:arg0})"
  }, {
    "trigger": "cerl:ann_c_atom/2",
    "contents": "cerl:ann_c_atom(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:is_c_atom/1",
    "contents": "cerl:is_c_atom(${1:arg0})"
  }, {
    "trigger": "cerl:atom_val/1",
    "contents": "cerl:atom_val(${1:arg0})"
  }, {
    "trigger": "cerl:atom_name/1",
    "contents": "cerl:atom_name(${1:arg0})"
  }, {
    "trigger": "cerl:atom_lit/1",
    "contents": "cerl:atom_lit(${1:arg0})"
  }, {
    "trigger": "cerl:c_char/1",
    "contents": "cerl:c_char(${1:arg0})"
  }, {
    "trigger": "cerl:ann_c_char/2",
    "contents": "cerl:ann_c_char(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:is_c_char/1",
    "contents": "cerl:is_c_char(${1:arg0})"
  }, {
    "trigger": "cerl:is_print_char/1",
    "contents": "cerl:is_print_char(${1:arg0})"
  }, {
    "trigger": "cerl:char_val/1",
    "contents": "cerl:char_val(${1:arg0})"
  }, {
    "trigger": "cerl:char_lit/1",
    "contents": "cerl:char_lit(${1:arg0})"
  }, {
    "trigger": "cerl:c_string/1",
    "contents": "cerl:c_string(${1:arg0})"
  }, {
    "trigger": "cerl:ann_c_string/2",
    "contents": "cerl:ann_c_string(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:is_c_string/1",
    "contents": "cerl:is_c_string(${1:arg0})"
  }, {
    "trigger": "cerl:is_print_string/1",
    "contents": "cerl:is_print_string(${1:arg0})"
  }, {
    "trigger": "cerl:string_val/1",
    "contents": "cerl:string_val(${1:arg0})"
  }, {
    "trigger": "cerl:string_lit/1",
    "contents": "cerl:string_lit(${1:arg0})"
  }, {
    "trigger": "cerl:c_nil/0",
    "contents": "cerl:c_nil()"
  }, {
    "trigger": "cerl:ann_c_nil/1",
    "contents": "cerl:ann_c_nil(${1:arg0})"
  }, {
    "trigger": "cerl:is_c_nil/1",
    "contents": "cerl:is_c_nil(${1:arg0})"
  }, {
    "trigger": "cerl:c_cons/2",
    "contents": "cerl:c_cons(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:update_c_cons/3",
    "contents": "cerl:update_c_cons(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:c_cons_skel/2",
    "contents": "cerl:c_cons_skel(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:update_c_cons_skel/3",
    "contents": "cerl:update_c_cons_skel(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:is_c_cons/1",
    "contents": "cerl:is_c_cons(${1:arg0})"
  }, {
    "trigger": "cerl:cons_hd/1",
    "contents": "cerl:cons_hd(${1:arg0})"
  }, {
    "trigger": "cerl:cons_tl/1",
    "contents": "cerl:cons_tl(${1:arg0})"
  }, {
    "trigger": "cerl:is_c_list/1",
    "contents": "cerl:is_c_list(${1:arg0})"
  }, {
    "trigger": "cerl:list_elements/1",
    "contents": "cerl:list_elements(${1:arg0})"
  }, {
    "trigger": "cerl:list_length/1",
    "contents": "cerl:list_length(${1:arg0})"
  }, {
    "trigger": "cerl:make_list/1",
    "contents": "cerl:make_list(${1:arg0})"
  }, {
    "trigger": "cerl:make_list/2",
    "contents": "cerl:make_list(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:update_list/2",
    "contents": "cerl:update_list(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:update_list/3",
    "contents": "cerl:update_list(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:ann_make_list/2",
    "contents": "cerl:ann_make_list(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_make_list/3",
    "contents": "cerl:ann_make_list(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:update_c_tuple/2",
    "contents": "cerl:update_c_tuple(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:c_tuple_skel/1",
    "contents": "cerl:c_tuple_skel(${1:arg0})"
  }, {
    "trigger": "cerl:ann_c_tuple_skel/2",
    "contents": "cerl:ann_c_tuple_skel(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:update_c_tuple_skel/2",
    "contents": "cerl:update_c_tuple_skel(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:is_c_tuple/1",
    "contents": "cerl:is_c_tuple(${1:arg0})"
  }, {
    "trigger": "cerl:tuple_es/1",
    "contents": "cerl:tuple_es(${1:arg0})"
  }, {
    "trigger": "cerl:tuple_arity/1",
    "contents": "cerl:tuple_arity(${1:arg0})"
  }, {
    "trigger": "cerl:c_var/1",
    "contents": "cerl:c_var(${1:arg0})"
  }, {
    "trigger": "cerl:ann_c_var/2",
    "contents": "cerl:ann_c_var(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:update_c_var/2",
    "contents": "cerl:update_c_var(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:is_c_var/1",
    "contents": "cerl:is_c_var(${1:arg0})"
  }, {
    "trigger": "cerl:c_fname/2",
    "contents": "cerl:c_fname(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_c_fname/3",
    "contents": "cerl:ann_c_fname(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:update_c_fname/2",
    "contents": "cerl:update_c_fname(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:update_c_fname/3",
    "contents": "cerl:update_c_fname(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:is_c_fname/1",
    "contents": "cerl:is_c_fname(${1:arg0})"
  }, {
    "trigger": "cerl:var_name/1",
    "contents": "cerl:var_name(${1:arg0})"
  }, {
    "trigger": "cerl:fname_id/1",
    "contents": "cerl:fname_id(${1:arg0})"
  }, {
    "trigger": "cerl:fname_arity/1",
    "contents": "cerl:fname_arity(${1:arg0})"
  }, {
    "trigger": "cerl:c_values/1",
    "contents": "cerl:c_values(${1:arg0})"
  }, {
    "trigger": "cerl:ann_c_values/2",
    "contents": "cerl:ann_c_values(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:update_c_values/2",
    "contents": "cerl:update_c_values(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:is_c_values/1",
    "contents": "cerl:is_c_values(${1:arg0})"
  }, {
    "trigger": "cerl:values_es/1",
    "contents": "cerl:values_es(${1:arg0})"
  }, {
    "trigger": "cerl:values_arity/1",
    "contents": "cerl:values_arity(${1:arg0})"
  }, {
    "trigger": "cerl:c_binary/1",
    "contents": "cerl:c_binary(${1:arg0})"
  }, {
    "trigger": "cerl:ann_c_binary/2",
    "contents": "cerl:ann_c_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:update_c_binary/2",
    "contents": "cerl:update_c_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:is_c_binary/1",
    "contents": "cerl:is_c_binary(${1:arg0})"
  }, {
    "trigger": "cerl:binary_segments/1",
    "contents": "cerl:binary_segments(${1:arg0})"
  }, {
    "trigger": "cerl:c_bitstr/5",
    "contents": "cerl:c_bitstr(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "cerl:c_bitstr/4",
    "contents": "cerl:c_bitstr(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "cerl:c_bitstr/3",
    "contents": "cerl:c_bitstr(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:ann_c_bitstr/6",
    "contents": "cerl:ann_c_bitstr(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "cerl:ann_c_bitstr/5",
    "contents": "cerl:ann_c_bitstr(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "cerl:update_c_bitstr/6",
    "contents": "cerl:update_c_bitstr(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "cerl:update_c_bitstr/5",
    "contents": "cerl:update_c_bitstr(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "cerl:is_c_bitstr/1",
    "contents": "cerl:is_c_bitstr(${1:arg0})"
  }, {
    "trigger": "cerl:bitstr_val/1",
    "contents": "cerl:bitstr_val(${1:arg0})"
  }, {
    "trigger": "cerl:bitstr_size/1",
    "contents": "cerl:bitstr_size(${1:arg0})"
  }, {
    "trigger": "cerl:bitstr_bitsize/1",
    "contents": "cerl:bitstr_bitsize(${1:arg0})"
  }, {
    "trigger": "cerl:bitstr_unit/1",
    "contents": "cerl:bitstr_unit(${1:arg0})"
  }, {
    "trigger": "cerl:bitstr_type/1",
    "contents": "cerl:bitstr_type(${1:arg0})"
  }, {
    "trigger": "cerl:bitstr_flags/1",
    "contents": "cerl:bitstr_flags(${1:arg0})"
  }, {
    "trigger": "cerl:c_fun/2",
    "contents": "cerl:c_fun(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_c_fun/3",
    "contents": "cerl:ann_c_fun(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:update_c_fun/3",
    "contents": "cerl:update_c_fun(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:is_c_fun/1",
    "contents": "cerl:is_c_fun(${1:arg0})"
  }, {
    "trigger": "cerl:fun_vars/1",
    "contents": "cerl:fun_vars(${1:arg0})"
  }, {
    "trigger": "cerl:fun_body/1",
    "contents": "cerl:fun_body(${1:arg0})"
  }, {
    "trigger": "cerl:fun_arity/1",
    "contents": "cerl:fun_arity(${1:arg0})"
  }, {
    "trigger": "cerl:c_seq/2",
    "contents": "cerl:c_seq(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_c_seq/3",
    "contents": "cerl:ann_c_seq(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:update_c_seq/3",
    "contents": "cerl:update_c_seq(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:is_c_seq/1",
    "contents": "cerl:is_c_seq(${1:arg0})"
  }, {
    "trigger": "cerl:seq_arg/1",
    "contents": "cerl:seq_arg(${1:arg0})"
  }, {
    "trigger": "cerl:seq_body/1",
    "contents": "cerl:seq_body(${1:arg0})"
  }, {
    "trigger": "cerl:c_let/3",
    "contents": "cerl:c_let(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:ann_c_let/4",
    "contents": "cerl:ann_c_let(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "cerl:update_c_let/4",
    "contents": "cerl:update_c_let(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "cerl:is_c_let/1",
    "contents": "cerl:is_c_let(${1:arg0})"
  }, {
    "trigger": "cerl:let_vars/1",
    "contents": "cerl:let_vars(${1:arg0})"
  }, {
    "trigger": "cerl:let_arg/1",
    "contents": "cerl:let_arg(${1:arg0})"
  }, {
    "trigger": "cerl:let_body/1",
    "contents": "cerl:let_body(${1:arg0})"
  }, {
    "trigger": "cerl:let_arity/1",
    "contents": "cerl:let_arity(${1:arg0})"
  }, {
    "trigger": "cerl:c_letrec/2",
    "contents": "cerl:c_letrec(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_c_letrec/3",
    "contents": "cerl:ann_c_letrec(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:update_c_letrec/3",
    "contents": "cerl:update_c_letrec(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:is_c_letrec/1",
    "contents": "cerl:is_c_letrec(${1:arg0})"
  }, {
    "trigger": "cerl:letrec_defs/1",
    "contents": "cerl:letrec_defs(${1:arg0})"
  }, {
    "trigger": "cerl:letrec_body/1",
    "contents": "cerl:letrec_body(${1:arg0})"
  }, {
    "trigger": "cerl:letrec_vars/1",
    "contents": "cerl:letrec_vars(${1:arg0})"
  }, {
    "trigger": "cerl:c_case/2",
    "contents": "cerl:c_case(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_c_case/3",
    "contents": "cerl:ann_c_case(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:update_c_case/3",
    "contents": "cerl:update_c_case(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:is_c_case/1",
    "contents": "cerl:is_c_case(${1:arg0})"
  }, {
    "trigger": "cerl:case_arg/1",
    "contents": "cerl:case_arg(${1:arg0})"
  }, {
    "trigger": "cerl:case_clauses/1",
    "contents": "cerl:case_clauses(${1:arg0})"
  }, {
    "trigger": "cerl:case_arity/1",
    "contents": "cerl:case_arity(${1:arg0})"
  }, {
    "trigger": "cerl:c_clause/2",
    "contents": "cerl:c_clause(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:c_clause/3",
    "contents": "cerl:c_clause(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:ann_c_clause/3",
    "contents": "cerl:ann_c_clause(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:ann_c_clause/4",
    "contents": "cerl:ann_c_clause(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "cerl:update_c_clause/4",
    "contents": "cerl:update_c_clause(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "cerl:is_c_clause/1",
    "contents": "cerl:is_c_clause(${1:arg0})"
  }, {
    "trigger": "cerl:clause_pats/1",
    "contents": "cerl:clause_pats(${1:arg0})"
  }, {
    "trigger": "cerl:clause_guard/1",
    "contents": "cerl:clause_guard(${1:arg0})"
  }, {
    "trigger": "cerl:clause_body/1",
    "contents": "cerl:clause_body(${1:arg0})"
  }, {
    "trigger": "cerl:clause_arity/1",
    "contents": "cerl:clause_arity(${1:arg0})"
  }, {
    "trigger": "cerl:clause_vars/1",
    "contents": "cerl:clause_vars(${1:arg0})"
  }, {
    "trigger": "cerl:pat_vars/1",
    "contents": "cerl:pat_vars(${1:arg0})"
  }, {
    "trigger": "cerl:pat_list_vars/1",
    "contents": "cerl:pat_list_vars(${1:arg0})"
  }, {
    "trigger": "cerl:c_alias/2",
    "contents": "cerl:c_alias(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_c_alias/3",
    "contents": "cerl:ann_c_alias(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:update_c_alias/3",
    "contents": "cerl:update_c_alias(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:is_c_alias/1",
    "contents": "cerl:is_c_alias(${1:arg0})"
  }, {
    "trigger": "cerl:alias_var/1",
    "contents": "cerl:alias_var(${1:arg0})"
  }, {
    "trigger": "cerl:alias_pat/1",
    "contents": "cerl:alias_pat(${1:arg0})"
  }, {
    "trigger": "cerl:c_receive/1",
    "contents": "cerl:c_receive(${1:arg0})"
  }, {
    "trigger": "cerl:c_receive/3",
    "contents": "cerl:c_receive(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:ann_c_receive/2",
    "contents": "cerl:ann_c_receive(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_c_receive/4",
    "contents": "cerl:ann_c_receive(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "cerl:update_c_receive/4",
    "contents": "cerl:update_c_receive(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "cerl:is_c_receive/1",
    "contents": "cerl:is_c_receive(${1:arg0})"
  }, {
    "trigger": "cerl:receive_clauses/1",
    "contents": "cerl:receive_clauses(${1:arg0})"
  }, {
    "trigger": "cerl:receive_timeout/1",
    "contents": "cerl:receive_timeout(${1:arg0})"
  }, {
    "trigger": "cerl:receive_action/1",
    "contents": "cerl:receive_action(${1:arg0})"
  }, {
    "trigger": "cerl:c_apply/2",
    "contents": "cerl:c_apply(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_c_apply/3",
    "contents": "cerl:ann_c_apply(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:update_c_apply/3",
    "contents": "cerl:update_c_apply(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:is_c_apply/1",
    "contents": "cerl:is_c_apply(${1:arg0})"
  }, {
    "trigger": "cerl:apply_op/1",
    "contents": "cerl:apply_op(${1:arg0})"
  }, {
    "trigger": "cerl:apply_args/1",
    "contents": "cerl:apply_args(${1:arg0})"
  }, {
    "trigger": "cerl:apply_arity/1",
    "contents": "cerl:apply_arity(${1:arg0})"
  }, {
    "trigger": "cerl:c_call/3",
    "contents": "cerl:c_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:ann_c_call/4",
    "contents": "cerl:ann_c_call(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "cerl:update_c_call/4",
    "contents": "cerl:update_c_call(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "cerl:is_c_call/1",
    "contents": "cerl:is_c_call(${1:arg0})"
  }, {
    "trigger": "cerl:call_module/1",
    "contents": "cerl:call_module(${1:arg0})"
  }, {
    "trigger": "cerl:call_name/1",
    "contents": "cerl:call_name(${1:arg0})"
  }, {
    "trigger": "cerl:call_args/1",
    "contents": "cerl:call_args(${1:arg0})"
  }, {
    "trigger": "cerl:call_arity/1",
    "contents": "cerl:call_arity(${1:arg0})"
  }, {
    "trigger": "cerl:c_primop/2",
    "contents": "cerl:c_primop(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_c_primop/3",
    "contents": "cerl:ann_c_primop(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:update_c_primop/3",
    "contents": "cerl:update_c_primop(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:is_c_primop/1",
    "contents": "cerl:is_c_primop(${1:arg0})"
  }, {
    "trigger": "cerl:primop_name/1",
    "contents": "cerl:primop_name(${1:arg0})"
  }, {
    "trigger": "cerl:primop_args/1",
    "contents": "cerl:primop_args(${1:arg0})"
  }, {
    "trigger": "cerl:primop_arity/1",
    "contents": "cerl:primop_arity(${1:arg0})"
  }, {
    "trigger": "cerl:c_try/5",
    "contents": "cerl:c_try(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "cerl:ann_c_try/6",
    "contents": "cerl:ann_c_try(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "cerl:update_c_try/6",
    "contents": "cerl:update_c_try(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "cerl:is_c_try/1",
    "contents": "cerl:is_c_try(${1:arg0})"
  }, {
    "trigger": "cerl:try_arg/1",
    "contents": "cerl:try_arg(${1:arg0})"
  }, {
    "trigger": "cerl:try_vars/1",
    "contents": "cerl:try_vars(${1:arg0})"
  }, {
    "trigger": "cerl:try_body/1",
    "contents": "cerl:try_body(${1:arg0})"
  }, {
    "trigger": "cerl:try_evars/1",
    "contents": "cerl:try_evars(${1:arg0})"
  }, {
    "trigger": "cerl:try_handler/1",
    "contents": "cerl:try_handler(${1:arg0})"
  }, {
    "trigger": "cerl:c_catch/1",
    "contents": "cerl:c_catch(${1:arg0})"
  }, {
    "trigger": "cerl:ann_c_catch/2",
    "contents": "cerl:ann_c_catch(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:update_c_catch/2",
    "contents": "cerl:update_c_catch(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:is_c_catch/1",
    "contents": "cerl:is_c_catch(${1:arg0})"
  }, {
    "trigger": "cerl:catch_body/1",
    "contents": "cerl:catch_body(${1:arg0})"
  }, {
    "trigger": "cerl:to_records/1",
    "contents": "cerl:to_records(${1:arg0})"
  }, {
    "trigger": "cerl:is_data/1",
    "contents": "cerl:is_data(${1:arg0})"
  }, {
    "trigger": "cerl:data_type/1",
    "contents": "cerl:data_type(${1:arg0})"
  }, {
    "trigger": "cerl:data_es/1",
    "contents": "cerl:data_es(${1:arg0})"
  }, {
    "trigger": "cerl:data_arity/1",
    "contents": "cerl:data_arity(${1:arg0})"
  }, {
    "trigger": "cerl:make_data/2",
    "contents": "cerl:make_data(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_make_data/3",
    "contents": "cerl:ann_make_data(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:update_data/3",
    "contents": "cerl:update_data(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:make_data_skel/2",
    "contents": "cerl:make_data_skel(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_make_data_skel/3",
    "contents": "cerl:ann_make_data_skel(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:update_data_skel/3",
    "contents": "cerl:update_data_skel(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:subtrees/1",
    "contents": "cerl:subtrees(${1:arg0})"
  }, {
    "trigger": "cerl:update_tree/2",
    "contents": "cerl:update_tree(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:update_tree/3",
    "contents": "cerl:update_tree(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:make_tree/2",
    "contents": "cerl:make_tree(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:ann_make_tree/3",
    "contents": "cerl:ann_make_tree(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:meta/1",
    "contents": "cerl:meta(${1:arg0})"
  }, {
    "trigger": "cerl:module_info/0",
    "contents": "cerl:module_info()"
  }, {
    "trigger": "cerl:module_info/1",
    "contents": "cerl:module_info(${1:arg0})"
  }, {
    "trigger": "cerl:ann_c_cons_skel/3",
    "contents": "cerl:ann_c_cons_skel(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:ann_c_cons/3",
    "contents": "cerl:ann_c_cons(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl:c_tuple/1",
    "contents": "cerl:c_tuple(${1:arg0})"
  }, {
    "trigger": "cerl:ann_c_tuple/2",
    "contents": "cerl:ann_c_tuple(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl:from_records/1",
    "contents": "cerl:from_records(${1:arg0})"
  }, {
    "trigger": "kernel_config:start_link/0",
    "contents": "kernel_config:start_link()"
  }, {
    "trigger": "kernel_config:init/1",
    "contents": "kernel_config:init(${1:arg0})"
  }, {
    "trigger": "kernel_config:handle_info/2",
    "contents": "kernel_config:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "kernel_config:terminate/2",
    "contents": "kernel_config:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "kernel_config:handle_call/3",
    "contents": "kernel_config:handle_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "kernel_config:handle_cast/2",
    "contents": "kernel_config:handle_cast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "kernel_config:code_change/3",
    "contents": "kernel_config:code_change(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "kernel_config:send_timeout/2",
    "contents": "kernel_config:send_timeout(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "kernel_config:module_info/0",
    "contents": "kernel_config:module_info()"
  }, {
    "trigger": "kernel_config:module_info/1",
    "contents": "kernel_config:module_info(${1:arg0})"
  }, {
    "trigger": "beam_split:module/2",
    "contents": "beam_split:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_split:module_info/0",
    "contents": "beam_split:module_info()"
  }, {
    "trigger": "beam_split:module_info/1",
    "contents": "beam_split:module_info(${1:arg0})"
  }, {
    "trigger": "gen_server:start/3",
    "contents": "gen_server:start(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_server:start/4",
    "contents": "gen_server:start(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "gen_server:start_link/3",
    "contents": "gen_server:start_link(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_server:start_link/4",
    "contents": "gen_server:start_link(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "gen_server:abcast/2",
    "contents": "gen_server:abcast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gen_server:abcast/3",
    "contents": "gen_server:abcast(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_server:multi_call/2",
    "contents": "gen_server:multi_call(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gen_server:multi_call/3",
    "contents": "gen_server:multi_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_server:multi_call/4",
    "contents": "gen_server:multi_call(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "gen_server:enter_loop/3",
    "contents": "gen_server:enter_loop(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_server:enter_loop/5",
    "contents": "gen_server:enter_loop(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "gen_server:init_it/6",
    "contents": "gen_server:init_it(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "gen_server:wake_hib/5",
    "contents": "gen_server:wake_hib(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "gen_server:system_continue/3",
    "contents": "gen_server:system_continue(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gen_server:system_terminate/4",
    "contents": "gen_server:system_terminate(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "gen_server:system_code_change/4",
    "contents": "gen_server:system_code_change(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "gen_server:format_status/2",
    "contents": "gen_server:format_status(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gen_server:behaviour_info/1",
    "contents": "gen_server:behaviour_info(${1:arg0})"
  }, {
    "trigger": "gen_server:module_info/0",
    "contents": "gen_server:module_info()"
  }, {
    "trigger": "gen_server:module_info/1",
    "contents": "gen_server:module_info(${1:arg0})"
  }, {
    "trigger": "gen_server:cast/2",
    "contents": "gen_server:cast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gen_server:reply/2",
    "contents": "gen_server:reply(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gen_server:enter_loop/4",
    "contents": "gen_server:enter_loop(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "gen_server:call/2",
    "contents": "gen_server:call(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gen_server:call/3",
    "contents": "gen_server:call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "proc_lib:spawn/1",
    "contents": "proc_lib:spawn(${1:arg0})"
  }, {
    "trigger": "proc_lib:spawn/3",
    "contents": "proc_lib:spawn(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "proc_lib:spawn_link/1",
    "contents": "proc_lib:spawn_link(${1:arg0})"
  }, {
    "trigger": "proc_lib:spawn_link/3",
    "contents": "proc_lib:spawn_link(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "proc_lib:spawn/2",
    "contents": "proc_lib:spawn(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proc_lib:spawn/4",
    "contents": "proc_lib:spawn(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "proc_lib:spawn_link/2",
    "contents": "proc_lib:spawn_link(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proc_lib:spawn_link/4",
    "contents": "proc_lib:spawn_link(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "proc_lib:spawn_opt/2",
    "contents": "proc_lib:spawn_opt(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proc_lib:spawn_opt/3",
    "contents": "proc_lib:spawn_opt(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "proc_lib:spawn_opt/4",
    "contents": "proc_lib:spawn_opt(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "proc_lib:spawn_opt/5",
    "contents": "proc_lib:spawn_opt(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "proc_lib:init_p/3",
    "contents": "proc_lib:init_p(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "proc_lib:init_p/5",
    "contents": "proc_lib:init_p(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "proc_lib:wake_up/3",
    "contents": "proc_lib:wake_up(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "proc_lib:start/3",
    "contents": "proc_lib:start(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "proc_lib:start/4",
    "contents": "proc_lib:start(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "proc_lib:start_link/3",
    "contents": "proc_lib:start_link(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "proc_lib:start_link/4",
    "contents": "proc_lib:start_link(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "proc_lib:init_ack/1",
    "contents": "proc_lib:init_ack(${1:arg0})"
  }, {
    "trigger": "proc_lib:initial_call/1",
    "contents": "proc_lib:initial_call(${1:arg0})"
  }, {
    "trigger": "proc_lib:translate_initial_call/1",
    "contents": "proc_lib:translate_initial_call(${1:arg0})"
  }, {
    "trigger": "proc_lib:format/1",
    "contents": "proc_lib:format(${1:arg0})"
  }, {
    "trigger": "proc_lib:format/2",
    "contents": "proc_lib:format(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proc_lib:module_info/0",
    "contents": "proc_lib:module_info()"
  }, {
    "trigger": "proc_lib:module_info/1",
    "contents": "proc_lib:module_info(${1:arg0})"
  }, {
    "trigger": "proc_lib:start/5",
    "contents": "proc_lib:start(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "proc_lib:start_link/5",
    "contents": "proc_lib:start_link(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "proc_lib:hibernate/3",
    "contents": "proc_lib:hibernate(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "proc_lib:init_ack/2",
    "contents": "proc_lib:init_ack(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "mochijson2:encoder/1",
    "contents": "mochijson2:encoder(${1:arg0})"
  }, {
    "trigger": "mochijson2:decoder/1",
    "contents": "mochijson2:decoder(${1:arg0})"
  }, {
    "trigger": "mochijson2:decode/2",
    "contents": "mochijson2:decode(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "mochijson2:decode/1",
    "contents": "mochijson2:decode(${1:arg0})"
  }, {
    "trigger": "mochijson2:module_info/0",
    "contents": "mochijson2:module_info()"
  }, {
    "trigger": "mochijson2:module_info/1",
    "contents": "mochijson2:module_info(${1:arg0})"
  }, {
    "trigger": "mochijson2:encode/1",
    "contents": "mochijson2:encode(${1:arg0})"
  }, {
    "trigger": "application:load/2",
    "contents": "application:load(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application:unload/1",
    "contents": "application:unload(${1:arg0})"
  }, {
    "trigger": "application:ensure_all_started/1",
    "contents": "application:ensure_all_started(${1:arg0})"
  }, {
    "trigger": "application:ensure_all_started/2",
    "contents": "application:ensure_all_started(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application:start/1",
    "contents": "application:start(${1:arg0})"
  }, {
    "trigger": "application:start/2",
    "contents": "application:start(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application:ensure_started/1",
    "contents": "application:ensure_started(${1:arg0})"
  }, {
    "trigger": "application:ensure_started/2",
    "contents": "application:ensure_started(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application:start_boot/1",
    "contents": "application:start_boot(${1:arg0})"
  }, {
    "trigger": "application:start_boot/2",
    "contents": "application:start_boot(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application:takeover/2",
    "contents": "application:takeover(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application:permit/2",
    "contents": "application:permit(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application:stop/1",
    "contents": "application:stop(${1:arg0})"
  }, {
    "trigger": "application:which_applications/0",
    "contents": "application:which_applications()"
  }, {
    "trigger": "application:which_applications/1",
    "contents": "application:which_applications(${1:arg0})"
  }, {
    "trigger": "application:loaded_applications/0",
    "contents": "application:loaded_applications()"
  }, {
    "trigger": "application:info/0",
    "contents": "application:info()"
  }, {
    "trigger": "application:set_env/3",
    "contents": "application:set_env(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "application:set_env/4",
    "contents": "application:set_env(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "application:unset_env/2",
    "contents": "application:unset_env(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application:unset_env/3",
    "contents": "application:unset_env(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "application:get_env/1",
    "contents": "application:get_env(${1:arg0})"
  }, {
    "trigger": "application:get_env/3",
    "contents": "application:get_env(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "application:get_all_env/0",
    "contents": "application:get_all_env()"
  }, {
    "trigger": "application:get_key/1",
    "contents": "application:get_key(${1:arg0})"
  }, {
    "trigger": "application:get_all_key/0",
    "contents": "application:get_all_key()"
  }, {
    "trigger": "application:get_all_key/1",
    "contents": "application:get_all_key(${1:arg0})"
  }, {
    "trigger": "application:get_application/0",
    "contents": "application:get_application()"
  }, {
    "trigger": "application:get_application/1",
    "contents": "application:get_application(${1:arg0})"
  }, {
    "trigger": "application:start_type/0",
    "contents": "application:start_type()"
  }, {
    "trigger": "application:behaviour_info/1",
    "contents": "application:behaviour_info(${1:arg0})"
  }, {
    "trigger": "application:module_info/0",
    "contents": "application:module_info()"
  }, {
    "trigger": "application:module_info/1",
    "contents": "application:module_info(${1:arg0})"
  }, {
    "trigger": "application:get_all_env/1",
    "contents": "application:get_all_env(${1:arg0})"
  }, {
    "trigger": "application:get_key/2",
    "contents": "application:get_key(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application:get_env/2",
    "contents": "application:get_env(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application:load/1",
    "contents": "application:load(${1:arg0})"
  }, {
    "trigger": "global:start/0",
    "contents": "global:start()"
  }, {
    "trigger": "global:start_link/0",
    "contents": "global:start_link()"
  }, {
    "trigger": "global:stop/0",
    "contents": "global:stop()"
  }, {
    "trigger": "global:sync/0",
    "contents": "global:sync()"
  }, {
    "trigger": "global:sync/1",
    "contents": "global:sync(${1:arg0})"
  }, {
    "trigger": "global:node_disconnected/1",
    "contents": "global:node_disconnected(${1:arg0})"
  }, {
    "trigger": "global:register_name/3",
    "contents": "global:register_name(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global:re_register_name/2",
    "contents": "global:re_register_name(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global:re_register_name/3",
    "contents": "global:re_register_name(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global:registered_names/0",
    "contents": "global:registered_names()"
  }, {
    "trigger": "global:register_name_external/2",
    "contents": "global:register_name_external(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global:register_name_external/3",
    "contents": "global:register_name_external(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global:unregister_name_external/1",
    "contents": "global:unregister_name_external(${1:arg0})"
  }, {
    "trigger": "global:set_lock/1",
    "contents": "global:set_lock(${1:arg0})"
  }, {
    "trigger": "global:set_lock/2",
    "contents": "global:set_lock(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global:set_lock/3",
    "contents": "global:set_lock(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global:del_lock/1",
    "contents": "global:del_lock(${1:arg0})"
  }, {
    "trigger": "global:del_lock/2",
    "contents": "global:del_lock(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global:trans/2",
    "contents": "global:trans(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global:trans/3",
    "contents": "global:trans(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global:trans/4",
    "contents": "global:trans(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "global:info/0",
    "contents": "global:info()"
  }, {
    "trigger": "global:init/1",
    "contents": "global:init(${1:arg0})"
  }, {
    "trigger": "global:handle_call/3",
    "contents": "global:handle_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global:handle_cast/2",
    "contents": "global:handle_cast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global:handle_info/2",
    "contents": "global:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global:terminate/2",
    "contents": "global:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global:code_change/3",
    "contents": "global:code_change(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global:resolve_it/4",
    "contents": "global:resolve_it(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "global:random_exit_name/3",
    "contents": "global:random_exit_name(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global:random_notify_name/3",
    "contents": "global:random_notify_name(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global:notify_all_name/3",
    "contents": "global:notify_all_name(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global:module_info/0",
    "contents": "global:module_info()"
  }, {
    "trigger": "global:module_info/1",
    "contents": "global:module_info(${1:arg0})"
  }, {
    "trigger": "global:unregister_name/1",
    "contents": "global:unregister_name(${1:arg0})"
  }, {
    "trigger": "global:register_name/2",
    "contents": "global:register_name(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global:whereis_name/1",
    "contents": "global:whereis_name(${1:arg0})"
  }, {
    "trigger": "global:send/2",
    "contents": "global:send(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_internal:new_type_test/2",
    "contents": "erl_internal:new_type_test(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_internal:bool_op/2",
    "contents": "erl_internal:bool_op(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_internal:comp_op/2",
    "contents": "erl_internal:comp_op(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_internal:list_op/2",
    "contents": "erl_internal:list_op(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_internal:send_op/2",
    "contents": "erl_internal:send_op(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_internal:module_info/0",
    "contents": "erl_internal:module_info()"
  }, {
    "trigger": "erl_internal:module_info/1",
    "contents": "erl_internal:module_info(${1:arg0})"
  }, {
    "trigger": "erl_internal:old_type_test/2",
    "contents": "erl_internal:old_type_test(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_internal:old_bif/2",
    "contents": "erl_internal:old_bif(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_internal:op_type/2",
    "contents": "erl_internal:op_type(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_internal:guard_bif/2",
    "contents": "erl_internal:guard_bif(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_internal:type_test/2",
    "contents": "erl_internal:type_test(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_internal:arith_op/2",
    "contents": "erl_internal:arith_op(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_internal:bif/3",
    "contents": "erl_internal:bif(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_internal:bif/2",
    "contents": "erl_internal:bif(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "otp_internal:module_info/0",
    "contents": "otp_internal:module_info()"
  }, {
    "trigger": "otp_internal:module_info/1",
    "contents": "otp_internal:module_info(${1:arg0})"
  }, {
    "trigger": "otp_internal:obsolete/3",
    "contents": "otp_internal:obsolete(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_bits:system_bitdefault/0",
    "contents": "erl_bits:system_bitdefault()"
  }, {
    "trigger": "erl_bits:system_bittypes/0",
    "contents": "erl_bits:system_bittypes()"
  }, {
    "trigger": "erl_bits:as_list/1",
    "contents": "erl_bits:as_list(${1:arg0})"
  }, {
    "trigger": "erl_bits:module_info/0",
    "contents": "erl_bits:module_info()"
  }, {
    "trigger": "erl_bits:module_info/1",
    "contents": "erl_bits:module_info(${1:arg0})"
  }, {
    "trigger": "erl_bits:set_bit_type/2",
    "contents": "erl_bits:set_bit_type(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "eval_bits:match_bits/7",
    "contents": "eval_bits:match_bits(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5}, ${7:arg6})"
  }, {
    "trigger": "eval_bits:module_info/0",
    "contents": "eval_bits:module_info()"
  }, {
    "trigger": "eval_bits:module_info/1",
    "contents": "eval_bits:module_info(${1:arg0})"
  }, {
    "trigger": "eval_bits:expr_grp/5",
    "contents": "eval_bits:expr_grp(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "eval_bits:match_bits/6",
    "contents": "eval_bits:match_bits(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "eval_bits:bin_gen/6",
    "contents": "eval_bits:bin_gen(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "eval_bits:expr_grp/3",
    "contents": "eval_bits:expr_grp(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "code_server:system_continue/3",
    "contents": "code_server:system_continue(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "code_server:system_terminate/4",
    "contents": "code_server:system_terminate(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "code_server:system_code_change/4",
    "contents": "code_server:system_code_change(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "code_server:module_info/0",
    "contents": "code_server:module_info()"
  }, {
    "trigger": "code_server:module_info/1",
    "contents": "code_server:module_info(${1:arg0})"
  }, {
    "trigger": "code_server:error_msg/2",
    "contents": "code_server:error_msg(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "code_server:info_msg/2",
    "contents": "code_server:info_msg(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "code_server:start_link/1",
    "contents": "code_server:start_link(${1:arg0})"
  }, {
    "trigger": "code_server:call/2",
    "contents": "code_server:call(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file_server:format_error/1",
    "contents": "file_server:format_error(${1:arg0})"
  }, {
    "trigger": "file_server:start/0",
    "contents": "file_server:start()"
  }, {
    "trigger": "file_server:start_link/0",
    "contents": "file_server:start_link()"
  }, {
    "trigger": "file_server:stop/0",
    "contents": "file_server:stop()"
  }, {
    "trigger": "file_server:init/1",
    "contents": "file_server:init(${1:arg0})"
  }, {
    "trigger": "file_server:handle_call/3",
    "contents": "file_server:handle_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file_server:handle_cast/2",
    "contents": "file_server:handle_cast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file_server:handle_info/2",
    "contents": "file_server:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file_server:terminate/2",
    "contents": "file_server:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file_server:code_change/3",
    "contents": "file_server:code_change(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file_server:module_info/0",
    "contents": "file_server:module_info()"
  }, {
    "trigger": "file_server:module_info/1",
    "contents": "file_server:module_info(${1:arg0})"
  }, {
    "trigger": "beam_lib:info/1",
    "contents": "beam_lib:info(${1:arg0})"
  }, {
    "trigger": "beam_lib:chunks/3",
    "contents": "beam_lib:chunks(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "beam_lib:all_chunks/1",
    "contents": "beam_lib:all_chunks(${1:arg0})"
  }, {
    "trigger": "beam_lib:cmp/2",
    "contents": "beam_lib:cmp(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_lib:cmp_dirs/2",
    "contents": "beam_lib:cmp_dirs(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_lib:diff_dirs/2",
    "contents": "beam_lib:diff_dirs(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_lib:strip/1",
    "contents": "beam_lib:strip(${1:arg0})"
  }, {
    "trigger": "beam_lib:strip_files/1",
    "contents": "beam_lib:strip_files(${1:arg0})"
  }, {
    "trigger": "beam_lib:strip_release/1",
    "contents": "beam_lib:strip_release(${1:arg0})"
  }, {
    "trigger": "beam_lib:version/1",
    "contents": "beam_lib:version(${1:arg0})"
  }, {
    "trigger": "beam_lib:md5/1",
    "contents": "beam_lib:md5(${1:arg0})"
  }, {
    "trigger": "beam_lib:format_error/1",
    "contents": "beam_lib:format_error(${1:arg0})"
  }, {
    "trigger": "beam_lib:crypto_key_fun/1",
    "contents": "beam_lib:crypto_key_fun(${1:arg0})"
  }, {
    "trigger": "beam_lib:clear_crypto_key_fun/0",
    "contents": "beam_lib:clear_crypto_key_fun()"
  }, {
    "trigger": "beam_lib:make_crypto_key/2",
    "contents": "beam_lib:make_crypto_key(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_lib:build_module/1",
    "contents": "beam_lib:build_module(${1:arg0})"
  }, {
    "trigger": "beam_lib:get_crypto_key/1",
    "contents": "beam_lib:get_crypto_key(${1:arg0})"
  }, {
    "trigger": "beam_lib:init/1",
    "contents": "beam_lib:init(${1:arg0})"
  }, {
    "trigger": "beam_lib:handle_call/3",
    "contents": "beam_lib:handle_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "beam_lib:handle_cast/2",
    "contents": "beam_lib:handle_cast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_lib:handle_info/2",
    "contents": "beam_lib:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_lib:code_change/3",
    "contents": "beam_lib:code_change(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "beam_lib:terminate/2",
    "contents": "beam_lib:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_lib:module_info/0",
    "contents": "beam_lib:module_info()"
  }, {
    "trigger": "beam_lib:module_info/1",
    "contents": "beam_lib:module_info(${1:arg0})"
  }, {
    "trigger": "beam_lib:chunks/2",
    "contents": "beam_lib:chunks(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_zip:open/1",
    "contents": "prim_zip:open(${1:arg0})"
  }, {
    "trigger": "prim_zip:open/3",
    "contents": "prim_zip:open(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_zip:foldl/3",
    "contents": "prim_zip:foldl(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_zip:close/1",
    "contents": "prim_zip:close(${1:arg0})"
  }, {
    "trigger": "prim_zip:splitter/3",
    "contents": "prim_zip:splitter(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_zip:module_info/0",
    "contents": "prim_zip:module_info()"
  }, {
    "trigger": "prim_zip:module_info/1",
    "contents": "prim_zip:module_info(${1:arg0})"
  }, {
    "trigger": "epp:open/2",
    "contents": "epp:open(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "epp:open/3",
    "contents": "epp:open(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "epp:open/5",
    "contents": "epp:open(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "epp:close/1",
    "contents": "epp:close(${1:arg0})"
  }, {
    "trigger": "epp:scan_erl_form/1",
    "contents": "epp:scan_erl_form(${1:arg0})"
  }, {
    "trigger": "epp:parse_erl_form/1",
    "contents": "epp:parse_erl_form(${1:arg0})"
  }, {
    "trigger": "epp:macro_defs/1",
    "contents": "epp:macro_defs(${1:arg0})"
  }, {
    "trigger": "epp:format_error/1",
    "contents": "epp:format_error(${1:arg0})"
  }, {
    "trigger": "epp:parse_file/1",
    "contents": "epp:parse_file(${1:arg0})"
  }, {
    "trigger": "epp:encoding_to_string/1",
    "contents": "epp:encoding_to_string(${1:arg0})"
  }, {
    "trigger": "epp:read_encoding/1",
    "contents": "epp:read_encoding(${1:arg0})"
  }, {
    "trigger": "epp:read_encoding/2",
    "contents": "epp:read_encoding(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "epp:read_encoding_from_binary/2",
    "contents": "epp:read_encoding_from_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "epp:normalize_typed_record_fields/1",
    "contents": "epp:normalize_typed_record_fields(${1:arg0})"
  }, {
    "trigger": "epp:restore_typed_record_fields/1",
    "contents": "epp:restore_typed_record_fields(${1:arg0})"
  }, {
    "trigger": "epp:interpret_file_attribute/1",
    "contents": "epp:interpret_file_attribute(${1:arg0})"
  }, {
    "trigger": "epp:module_info/0",
    "contents": "epp:module_info()"
  }, {
    "trigger": "epp:module_info/1",
    "contents": "epp:module_info(${1:arg0})"
  }, {
    "trigger": "epp:set_encoding/1",
    "contents": "epp:set_encoding(${1:arg0})"
  }, {
    "trigger": "epp:parse_file/3",
    "contents": "epp:parse_file(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "epp:default_encoding/0",
    "contents": "epp:default_encoding()"
  }, {
    "trigger": "epp:read_encoding_from_binary/1",
    "contents": "epp:read_encoding_from_binary(${1:arg0})"
  }, {
    "trigger": "beam_peep:module/2",
    "contents": "beam_peep:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_peep:module_info/0",
    "contents": "beam_peep:module_info()"
  }, {
    "trigger": "beam_peep:module_info/1",
    "contents": "beam_peep:module_info(${1:arg0})"
  }, {
    "trigger": "beam_z:module/2",
    "contents": "beam_z:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_z:module_info/0",
    "contents": "beam_z:module_info()"
  }, {
    "trigger": "beam_z:module_info/1",
    "contents": "beam_z:module_info(${1:arg0})"
  }, {
    "trigger": "sys_pre_expand:module_info/0",
    "contents": "sys_pre_expand:module_info()"
  }, {
    "trigger": "sys_pre_expand:module_info/1",
    "contents": "sys_pre_expand:module_info(${1:arg0})"
  }, {
    "trigger": "sys_pre_expand:module/2",
    "contents": "sys_pre_expand:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "os:find_executable/1",
    "contents": "os:find_executable(${1:arg0})"
  }, {
    "trigger": "os:find_executable/2",
    "contents": "os:find_executable(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "os:cmd/1",
    "contents": "os:cmd(${1:arg0})"
  }, {
    "trigger": "os:module_info/0",
    "contents": "os:module_info()"
  }, {
    "trigger": "os:module_info/1",
    "contents": "os:module_info(${1:arg0})"
  }, {
    "trigger": "os:version/0",
    "contents": "os:version()"
  }, {
    "trigger": "os:type/0",
    "contents": "os:type()"
  }, {
    "trigger": "os:timestamp/0",
    "contents": "os:timestamp()"
  }, {
    "trigger": "os:getpid/0",
    "contents": "os:getpid()"
  }, {
    "trigger": "os:getenv/1",
    "contents": "os:getenv(${1:arg0})"
  }, {
    "trigger": "os:getenv/0",
    "contents": "os:getenv()"
  }, {
    "trigger": "os:putenv/2",
    "contents": "os:putenv(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "rpc:start/0",
    "contents": "rpc:start()"
  }, {
    "trigger": "rpc:start_link/0",
    "contents": "rpc:start_link()"
  }, {
    "trigger": "rpc:stop/0",
    "contents": "rpc:stop()"
  }, {
    "trigger": "rpc:init/1",
    "contents": "rpc:init(${1:arg0})"
  }, {
    "trigger": "rpc:handle_call/3",
    "contents": "rpc:handle_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "rpc:handle_cast/2",
    "contents": "rpc:handle_cast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "rpc:handle_info/2",
    "contents": "rpc:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "rpc:terminate/2",
    "contents": "rpc:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "rpc:code_change/3",
    "contents": "rpc:code_change(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "rpc:proxy_user_flush/0",
    "contents": "rpc:proxy_user_flush()"
  }, {
    "trigger": "rpc:call/5",
    "contents": "rpc:call(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "rpc:block_call/4",
    "contents": "rpc:block_call(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "rpc:block_call/5",
    "contents": "rpc:block_call(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "rpc:server_call/4",
    "contents": "rpc:server_call(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "rpc:cast/4",
    "contents": "rpc:cast(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "rpc:abcast/2",
    "contents": "rpc:abcast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "rpc:abcast/3",
    "contents": "rpc:abcast(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "rpc:sbcast/2",
    "contents": "rpc:sbcast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "rpc:sbcast/3",
    "contents": "rpc:sbcast(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "rpc:eval_everywhere/3",
    "contents": "rpc:eval_everywhere(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "rpc:eval_everywhere/4",
    "contents": "rpc:eval_everywhere(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "rpc:multicall/3",
    "contents": "rpc:multicall(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "rpc:multicall/4",
    "contents": "rpc:multicall(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "rpc:multicall/5",
    "contents": "rpc:multicall(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "rpc:multi_server_call/2",
    "contents": "rpc:multi_server_call(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "rpc:multi_server_call/3",
    "contents": "rpc:multi_server_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "rpc:safe_multi_server_call/2",
    "contents": "rpc:safe_multi_server_call(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "rpc:safe_multi_server_call/3",
    "contents": "rpc:safe_multi_server_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "rpc:async_call/4",
    "contents": "rpc:async_call(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "rpc:yield/1",
    "contents": "rpc:yield(${1:arg0})"
  }, {
    "trigger": "rpc:nb_yield/2",
    "contents": "rpc:nb_yield(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "rpc:nb_yield/1",
    "contents": "rpc:nb_yield(${1:arg0})"
  }, {
    "trigger": "rpc:parallel_eval/1",
    "contents": "rpc:parallel_eval(${1:arg0})"
  }, {
    "trigger": "rpc:pmap/3",
    "contents": "rpc:pmap(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "rpc:pinfo/1",
    "contents": "rpc:pinfo(${1:arg0})"
  }, {
    "trigger": "rpc:pinfo/2",
    "contents": "rpc:pinfo(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "rpc:module_info/0",
    "contents": "rpc:module_info()"
  }, {
    "trigger": "rpc:module_info/1",
    "contents": "rpc:module_info(${1:arg0})"
  }, {
    "trigger": "rpc:call/4",
    "contents": "rpc:call(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "c:help/0",
    "contents": "c:help()"
  }, {
    "trigger": "c:c/1",
    "contents": "c:c(${1:arg0})"
  }, {
    "trigger": "c:c/2",
    "contents": "c:c(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "c:lc/1",
    "contents": "c:lc(${1:arg0})"
  }, {
    "trigger": "c:lc_batch/0",
    "contents": "c:lc_batch()"
  }, {
    "trigger": "c:lc_batch/1",
    "contents": "c:lc_batch(${1:arg0})"
  }, {
    "trigger": "c:nc/1",
    "contents": "c:nc(${1:arg0})"
  }, {
    "trigger": "c:nc/2",
    "contents": "c:nc(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "c:l/1",
    "contents": "c:l(${1:arg0})"
  }, {
    "trigger": "c:nl/1",
    "contents": "c:nl(${1:arg0})"
  }, {
    "trigger": "c:i/0",
    "contents": "c:i()"
  }, {
    "trigger": "c:ni/0",
    "contents": "c:ni()"
  }, {
    "trigger": "c:i/1",
    "contents": "c:i(${1:arg0})"
  }, {
    "trigger": "c:display_info/1",
    "contents": "c:display_info(${1:arg0})"
  }, {
    "trigger": "c:i/3",
    "contents": "c:i(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "c:q/0",
    "contents": "c:q()"
  }, {
    "trigger": "c:bt/1",
    "contents": "c:bt(${1:arg0})"
  }, {
    "trigger": "c:m/0",
    "contents": "c:m()"
  }, {
    "trigger": "c:erlangrc/0",
    "contents": "c:erlangrc()"
  }, {
    "trigger": "c:erlangrc/1",
    "contents": "c:erlangrc(${1:arg0})"
  }, {
    "trigger": "c:bi/1",
    "contents": "c:bi(${1:arg0})"
  }, {
    "trigger": "c:m/1",
    "contents": "c:m(${1:arg0})"
  }, {
    "trigger": "c:flush/0",
    "contents": "c:flush()"
  }, {
    "trigger": "c:nregs/0",
    "contents": "c:nregs()"
  }, {
    "trigger": "c:regs/0",
    "contents": "c:regs()"
  }, {
    "trigger": "c:pwd/0",
    "contents": "c:pwd()"
  }, {
    "trigger": "c:cd/1",
    "contents": "c:cd(${1:arg0})"
  }, {
    "trigger": "c:ls/0",
    "contents": "c:ls()"
  }, {
    "trigger": "c:ls/1",
    "contents": "c:ls(${1:arg0})"
  }, {
    "trigger": "c:memory/0",
    "contents": "c:memory()"
  }, {
    "trigger": "c:memory/1",
    "contents": "c:memory(${1:arg0})"
  }, {
    "trigger": "c:xm/1",
    "contents": "c:xm(${1:arg0})"
  }, {
    "trigger": "c:y/1",
    "contents": "c:y(${1:arg0})"
  }, {
    "trigger": "c:y/2",
    "contents": "c:y(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "c:appcall/4",
    "contents": "c:appcall(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "c:module_info/0",
    "contents": "c:module_info()"
  }, {
    "trigger": "c:module_info/1",
    "contents": "c:module_info(${1:arg0})"
  }, {
    "trigger": "c:pid/3",
    "contents": "c:pid(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file_io_server:format_error/1",
    "contents": "file_io_server:format_error(${1:arg0})"
  }, {
    "trigger": "file_io_server:start/3",
    "contents": "file_io_server:start(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file_io_server:count_and_find/3",
    "contents": "file_io_server:count_and_find(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file_io_server:module_info/0",
    "contents": "file_io_server:module_info()"
  }, {
    "trigger": "file_io_server:module_info/1",
    "contents": "file_io_server:module_info(${1:arg0})"
  }, {
    "trigger": "file_io_server:start_link/3",
    "contents": "file_io_server:start_link(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "beam_validator:file/1",
    "contents": "beam_validator:file(${1:arg0})"
  }, {
    "trigger": "beam_validator:files/1",
    "contents": "beam_validator:files(${1:arg0})"
  }, {
    "trigger": "beam_validator:module/2",
    "contents": "beam_validator:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_validator:format_error/1",
    "contents": "beam_validator:format_error(${1:arg0})"
  }, {
    "trigger": "beam_validator:module_info/0",
    "contents": "beam_validator:module_info()"
  }, {
    "trigger": "beam_validator:module_info/1",
    "contents": "beam_validator:module_info(${1:arg0})"
  }, {
    "trigger": "inet_config:do_load_resolv/2",
    "contents": "inet_config:do_load_resolv(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_config:module_info/0",
    "contents": "inet_config:module_info()"
  }, {
    "trigger": "inet_config:module_info/1",
    "contents": "inet_config:module_info(${1:arg0})"
  }, {
    "trigger": "inet_config:init/0",
    "contents": "inet_config:init()"
  }, {
    "trigger": "user_drv:start/0",
    "contents": "user_drv:start()"
  }, {
    "trigger": "user_drv:start/1",
    "contents": "user_drv:start(${1:arg0})"
  }, {
    "trigger": "user_drv:start/2",
    "contents": "user_drv:start(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "user_drv:start/3",
    "contents": "user_drv:start(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "user_drv:interfaces/1",
    "contents": "user_drv:interfaces(${1:arg0})"
  }, {
    "trigger": "user_drv:server/2",
    "contents": "user_drv:server(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "user_drv:server/3",
    "contents": "user_drv:server(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "user_drv:module_info/0",
    "contents": "user_drv:module_info()"
  }, {
    "trigger": "user_drv:module_info/1",
    "contents": "user_drv:module_info(${1:arg0})"
  }, {
    "trigger": "inet_parse:services/1",
    "contents": "inet_parse:services(${1:arg0})"
  }, {
    "trigger": "inet_parse:services/2",
    "contents": "inet_parse:services(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_parse:rpc/1",
    "contents": "inet_parse:rpc(${1:arg0})"
  }, {
    "trigger": "inet_parse:rpc/2",
    "contents": "inet_parse:rpc(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_parse:host_conf_linux/1",
    "contents": "inet_parse:host_conf_linux(${1:arg0})"
  }, {
    "trigger": "inet_parse:host_conf_linux/2",
    "contents": "inet_parse:host_conf_linux(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_parse:host_conf_freebsd/1",
    "contents": "inet_parse:host_conf_freebsd(${1:arg0})"
  }, {
    "trigger": "inet_parse:host_conf_freebsd/2",
    "contents": "inet_parse:host_conf_freebsd(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_parse:host_conf_bsdos/1",
    "contents": "inet_parse:host_conf_bsdos(${1:arg0})"
  }, {
    "trigger": "inet_parse:host_conf_bsdos/2",
    "contents": "inet_parse:host_conf_bsdos(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_parse:nsswitch_conf/1",
    "contents": "inet_parse:nsswitch_conf(${1:arg0})"
  }, {
    "trigger": "inet_parse:nsswitch_conf/2",
    "contents": "inet_parse:nsswitch_conf(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_parse:protocols/1",
    "contents": "inet_parse:protocols(${1:arg0})"
  }, {
    "trigger": "inet_parse:protocols/2",
    "contents": "inet_parse:protocols(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_parse:netmasks/1",
    "contents": "inet_parse:netmasks(${1:arg0})"
  }, {
    "trigger": "inet_parse:netmasks/2",
    "contents": "inet_parse:netmasks(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_parse:networks/1",
    "contents": "inet_parse:networks(${1:arg0})"
  }, {
    "trigger": "inet_parse:networks/2",
    "contents": "inet_parse:networks(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_parse:domain/1",
    "contents": "inet_parse:domain(${1:arg0})"
  }, {
    "trigger": "inet_parse:module_info/0",
    "contents": "inet_parse:module_info()"
  }, {
    "trigger": "inet_parse:module_info/1",
    "contents": "inet_parse:module_info(${1:arg0})"
  }, {
    "trigger": "inet_parse:strict_address/1",
    "contents": "inet_parse:strict_address(${1:arg0})"
  }, {
    "trigger": "inet_parse:ipv6strict_address/1",
    "contents": "inet_parse:ipv6strict_address(${1:arg0})"
  }, {
    "trigger": "inet_parse:ipv4strict_address/1",
    "contents": "inet_parse:ipv4strict_address(${1:arg0})"
  }, {
    "trigger": "inet_parse:ipv6_address/1",
    "contents": "inet_parse:ipv6_address(${1:arg0})"
  }, {
    "trigger": "inet_parse:ipv4_address/1",
    "contents": "inet_parse:ipv4_address(${1:arg0})"
  }, {
    "trigger": "inet_parse:ntoa/1",
    "contents": "inet_parse:ntoa(${1:arg0})"
  }, {
    "trigger": "inet_parse:address/1",
    "contents": "inet_parse:address(${1:arg0})"
  }, {
    "trigger": "inet_parse:split_line/1",
    "contents": "inet_parse:split_line(${1:arg0})"
  }, {
    "trigger": "inet_parse:resolv/2",
    "contents": "inet_parse:resolv(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_parse:hosts/2",
    "contents": "inet_parse:hosts(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "inet_parse:dots/1",
    "contents": "inet_parse:dots(${1:arg0})"
  }, {
    "trigger": "inet_parse:visible_string/1",
    "contents": "inet_parse:visible_string(${1:arg0})"
  }, {
    "trigger": "inet_parse:hosts/1",
    "contents": "inet_parse:hosts(${1:arg0})"
  }, {
    "trigger": "inet_parse:resolv/1",
    "contents": "inet_parse:resolv(${1:arg0})"
  }, {
    "trigger": "prim_inet:open/3",
    "contents": "prim_inet:open(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:open/4",
    "contents": "prim_inet:open(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "prim_inet:fdopen/4",
    "contents": "prim_inet:fdopen(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "prim_inet:shutdown/2",
    "contents": "prim_inet:shutdown(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:close/1",
    "contents": "prim_inet:close(${1:arg0})"
  }, {
    "trigger": "prim_inet:bind/3",
    "contents": "prim_inet:bind(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:connect/3",
    "contents": "prim_inet:connect(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:connect/4",
    "contents": "prim_inet:connect(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "prim_inet:async_connect/4",
    "contents": "prim_inet:async_connect(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "prim_inet:accept/1",
    "contents": "prim_inet:accept(${1:arg0})"
  }, {
    "trigger": "prim_inet:accept/2",
    "contents": "prim_inet:accept(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:async_accept/2",
    "contents": "prim_inet:async_accept(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:listen/1",
    "contents": "prim_inet:listen(${1:arg0})"
  }, {
    "trigger": "prim_inet:listen/2",
    "contents": "prim_inet:listen(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:peeloff/2",
    "contents": "prim_inet:peeloff(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:send/3",
    "contents": "prim_inet:send(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:send/2",
    "contents": "prim_inet:send(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:sendto/4",
    "contents": "prim_inet:sendto(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "prim_inet:sendmsg/3",
    "contents": "prim_inet:sendmsg(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:recv/2",
    "contents": "prim_inet:recv(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:recv/3",
    "contents": "prim_inet:recv(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:async_recv/3",
    "contents": "prim_inet:async_recv(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:recvfrom/2",
    "contents": "prim_inet:recvfrom(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:recvfrom/3",
    "contents": "prim_inet:recvfrom(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:peername/1",
    "contents": "prim_inet:peername(${1:arg0})"
  }, {
    "trigger": "prim_inet:setpeername/2",
    "contents": "prim_inet:setpeername(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:sockname/1",
    "contents": "prim_inet:sockname(${1:arg0})"
  }, {
    "trigger": "prim_inet:setsockname/2",
    "contents": "prim_inet:setsockname(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:setopt/3",
    "contents": "prim_inet:setopt(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:setopts/2",
    "contents": "prim_inet:setopts(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:getopt/2",
    "contents": "prim_inet:getopt(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:getopts/2",
    "contents": "prim_inet:getopts(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:chgopt/3",
    "contents": "prim_inet:chgopt(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:chgopts/2",
    "contents": "prim_inet:chgopts(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:getifaddrs/1",
    "contents": "prim_inet:getifaddrs(${1:arg0})"
  }, {
    "trigger": "prim_inet:getiflist/1",
    "contents": "prim_inet:getiflist(${1:arg0})"
  }, {
    "trigger": "prim_inet:ifget/3",
    "contents": "prim_inet:ifget(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:ifset/3",
    "contents": "prim_inet:ifset(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:getstat/2",
    "contents": "prim_inet:getstat(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:getfd/1",
    "contents": "prim_inet:getfd(${1:arg0})"
  }, {
    "trigger": "prim_inet:ignorefd/2",
    "contents": "prim_inet:ignorefd(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:getindex/1",
    "contents": "prim_inet:getindex(${1:arg0})"
  }, {
    "trigger": "prim_inet:gettype/1",
    "contents": "prim_inet:gettype(${1:arg0})"
  }, {
    "trigger": "prim_inet:getstatus/1",
    "contents": "prim_inet:getstatus(${1:arg0})"
  }, {
    "trigger": "prim_inet:gethostname/1",
    "contents": "prim_inet:gethostname(${1:arg0})"
  }, {
    "trigger": "prim_inet:getservbyname/3",
    "contents": "prim_inet:getservbyname(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:getservbyport/3",
    "contents": "prim_inet:getservbyport(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "prim_inet:unrecv/2",
    "contents": "prim_inet:unrecv(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:detach/1",
    "contents": "prim_inet:detach(${1:arg0})"
  }, {
    "trigger": "prim_inet:attach/1",
    "contents": "prim_inet:attach(${1:arg0})"
  }, {
    "trigger": "prim_inet:is_sockopt_val/2",
    "contents": "prim_inet:is_sockopt_val(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "prim_inet:module_info/0",
    "contents": "prim_inet:module_info()"
  }, {
    "trigger": "prim_inet:module_info/1",
    "contents": "prim_inet:module_info(${1:arg0})"
  }, {
    "trigger": "cerl_trees:depth/1",
    "contents": "cerl_trees:depth(${1:arg0})"
  }, {
    "trigger": "cerl_trees:size/1",
    "contents": "cerl_trees:size(${1:arg0})"
  }, {
    "trigger": "cerl_trees:fold/3",
    "contents": "cerl_trees:fold(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl_trees:mapfold/3",
    "contents": "cerl_trees:mapfold(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "cerl_trees:variables/1",
    "contents": "cerl_trees:variables(${1:arg0})"
  }, {
    "trigger": "cerl_trees:free_variables/1",
    "contents": "cerl_trees:free_variables(${1:arg0})"
  }, {
    "trigger": "cerl_trees:label/1",
    "contents": "cerl_trees:label(${1:arg0})"
  }, {
    "trigger": "cerl_trees:label/2",
    "contents": "cerl_trees:label(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "cerl_trees:get_label/1",
    "contents": "cerl_trees:get_label(${1:arg0})"
  }, {
    "trigger": "cerl_trees:module_info/0",
    "contents": "cerl_trees:module_info()"
  }, {
    "trigger": "cerl_trees:module_info/1",
    "contents": "cerl_trees:module_info(${1:arg0})"
  }, {
    "trigger": "cerl_trees:map/2",
    "contents": "cerl_trees:map(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "core_lib:get_anno/1",
    "contents": "core_lib:get_anno(${1:arg0})"
  }, {
    "trigger": "core_lib:set_anno/2",
    "contents": "core_lib:set_anno(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "core_lib:is_literal/1",
    "contents": "core_lib:is_literal(${1:arg0})"
  }, {
    "trigger": "core_lib:is_literal_list/1",
    "contents": "core_lib:is_literal_list(${1:arg0})"
  }, {
    "trigger": "core_lib:literal_value/1",
    "contents": "core_lib:literal_value(${1:arg0})"
  }, {
    "trigger": "core_lib:is_var_used/2",
    "contents": "core_lib:is_var_used(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "core_lib:module_info/0",
    "contents": "core_lib:module_info()"
  }, {
    "trigger": "core_lib:module_info/1",
    "contents": "core_lib:module_info(${1:arg0})"
  }, {
    "trigger": "core_lib:make_values/1",
    "contents": "core_lib:make_values(${1:arg0})"
  }, {
    "trigger": "beam_a:module/2",
    "contents": "beam_a:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_a:module_info/0",
    "contents": "beam_a:module_info()"
  }, {
    "trigger": "beam_a:module_info/1",
    "contents": "beam_a:module_info(${1:arg0})"
  }, {
    "trigger": "beam_trim:module/2",
    "contents": "beam_trim:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_trim:module_info/0",
    "contents": "beam_trim:module_info()"
  }, {
    "trigger": "beam_trim:module_info/1",
    "contents": "beam_trim:module_info(${1:arg0})"
  }, {
    "trigger": "erlang:bitsize/1",
    "contents": "erlang:bitsize(${1:arg0})"
  }, {
    "trigger": "erlang:bitstr_to_list/1",
    "contents": "erlang:bitstr_to_list(${1:arg0})"
  }, {
    "trigger": "erlang:garbage_collect_message_area/0",
    "contents": "erlang:garbage_collect_message_area()"
  }, {
    "trigger": "erlang:list_to_bitstr/1",
    "contents": "erlang:list_to_bitstr(${1:arg0})"
  }, {
    "trigger": "erlang:apply/2",
    "contents": "erlang:apply(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:spawn/2",
    "contents": "erlang:spawn(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:spawn_link/2",
    "contents": "erlang:spawn_link(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:spawn_monitor/3",
    "contents": "erlang:spawn_monitor(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:spawn_opt/2",
    "contents": "erlang:spawn_opt(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:spawn_opt/3",
    "contents": "erlang:spawn_opt(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:spawn/4",
    "contents": "erlang:spawn(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "erlang:spawn_link/4",
    "contents": "erlang:spawn_link(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "erlang:spawn_opt/4",
    "contents": "erlang:spawn_opt(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "erlang:spawn_opt/5",
    "contents": "erlang:spawn_opt(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "erlang:crasher/6",
    "contents": "erlang:crasher(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "erlang:yield/0",
    "contents": "erlang:yield()"
  }, {
    "trigger": "erlang:nodes/0",
    "contents": "erlang:nodes()"
  }, {
    "trigger": "erlang:disconnect_node/1",
    "contents": "erlang:disconnect_node(${1:arg0})"
  }, {
    "trigger": "erlang:fun_info/1",
    "contents": "erlang:fun_info(${1:arg0})"
  }, {
    "trigger": "erlang:send_nosuspend/2",
    "contents": "erlang:send_nosuspend(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:send_nosuspend/3",
    "contents": "erlang:send_nosuspend(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:suspend_process/1",
    "contents": "erlang:suspend_process(${1:arg0})"
  }, {
    "trigger": "erlang:port_call/2",
    "contents": "erlang:port_call(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:port_call/3",
    "contents": "erlang:port_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:port_info/1",
    "contents": "erlang:port_info(${1:arg0})"
  }, {
    "trigger": "erlang:set_cookie/2",
    "contents": "erlang:set_cookie(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:get_cookie/0",
    "contents": "erlang:get_cookie()"
  }, {
    "trigger": "erlang:integer_to_list/2",
    "contents": "erlang:integer_to_list(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:integer_to_binary/2",
    "contents": "erlang:integer_to_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:max/2",
    "contents": "erlang:max(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:memory/0",
    "contents": "erlang:memory()"
  }, {
    "trigger": "erlang:memory/1",
    "contents": "erlang:memory(${1:arg0})"
  }, {
    "trigger": "erlang:module_info/0",
    "contents": "erlang:module_info()"
  }, {
    "trigger": "erlang:module_info/1",
    "contents": "erlang:module_info(${1:arg0})"
  }, {
    "trigger": "erlang:min/2",
    "contents": "erlang:min(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:localtime_to_universaltime/1",
    "contents": "erlang:localtime_to_universaltime(${1:arg0})"
  }, {
    "trigger": "erlang:port_control/3",
    "contents": "erlang:port_control(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:port_connect/2",
    "contents": "erlang:port_connect(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:port_command/2",
    "contents": "erlang:port_command(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:port_command/3",
    "contents": "erlang:port_command(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:port_close/1",
    "contents": "erlang:port_close(${1:arg0})"
  }, {
    "trigger": "erlang:spawn_monitor/1",
    "contents": "erlang:spawn_monitor(${1:arg0})"
  }, {
    "trigger": "erlang:spawn/1",
    "contents": "erlang:spawn(${1:arg0})"
  }, {
    "trigger": "erlang:load_module/2",
    "contents": "erlang:load_module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:spawn_link/1",
    "contents": "erlang:spawn_link(${1:arg0})"
  }, {
    "trigger": "erlang:port_info/2",
    "contents": "erlang:port_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:delay_trap/2",
    "contents": "erlang:delay_trap(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:await_sched_wall_time_modifications/2",
    "contents": "erlang:await_sched_wall_time_modifications(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:await_proc_exit/3",
    "contents": "erlang:await_proc_exit(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:format_cpu_topology/1",
    "contents": "erlang:format_cpu_topology(${1:arg0})"
  }, {
    "trigger": "erlang:set_cpu_topology/1",
    "contents": "erlang:set_cpu_topology(${1:arg0})"
  }, {
    "trigger": "erlang:flush_monitor_message/2",
    "contents": "erlang:flush_monitor_message(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:dmonitor_p/2",
    "contents": "erlang:dmonitor_p(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:dexit/2",
    "contents": "erlang:dexit(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:dgroup_leader/2",
    "contents": "erlang:dgroup_leader(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:dmonitor_node/3",
    "contents": "erlang:dmonitor_node(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:dunlink/1",
    "contents": "erlang:dunlink(${1:arg0})"
  }, {
    "trigger": "erlang:dlink/1",
    "contents": "erlang:dlink(${1:arg0})"
  }, {
    "trigger": "erlang:dsend/3",
    "contents": "erlang:dsend(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:dsend/2",
    "contents": "erlang:dsend(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:hash/2",
    "contents": "erlang:hash(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:binary_to_float/1",
    "contents": "erlang:binary_to_float(${1:arg0})"
  }, {
    "trigger": "erlang:float_to_binary/2",
    "contents": "erlang:float_to_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:float_to_binary/1",
    "contents": "erlang:float_to_binary(${1:arg0})"
  }, {
    "trigger": "erlang:list_to_integer/2",
    "contents": "erlang:list_to_integer(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:integer_to_binary/1",
    "contents": "erlang:integer_to_binary(${1:arg0})"
  }, {
    "trigger": "erlang:binary_to_integer/2",
    "contents": "erlang:binary_to_integer(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:binary_to_integer/1",
    "contents": "erlang:binary_to_integer(${1:arg0})"
  }, {
    "trigger": "erlang:delete_element/2",
    "contents": "erlang:delete_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:insert_element/3",
    "contents": "erlang:insert_element(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:finish_loading/1",
    "contents": "erlang:finish_loading(${1:arg0})"
  }, {
    "trigger": "erlang:prepare_loading/2",
    "contents": "erlang:prepare_loading(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:dt_append_vm_tag_data/1",
    "contents": "erlang:dt_append_vm_tag_data(${1:arg0})"
  }, {
    "trigger": "erlang:dt_prepend_vm_tag_data/1",
    "contents": "erlang:dt_prepend_vm_tag_data(${1:arg0})"
  }, {
    "trigger": "erlang:dt_restore_tag/1",
    "contents": "erlang:dt_restore_tag(${1:arg0})"
  }, {
    "trigger": "erlang:dt_spread_tag/1",
    "contents": "erlang:dt_spread_tag(${1:arg0})"
  }, {
    "trigger": "erlang:dt_get_tag_data/0",
    "contents": "erlang:dt_get_tag_data()"
  }, {
    "trigger": "erlang:dt_get_tag/0",
    "contents": "erlang:dt_get_tag()"
  }, {
    "trigger": "erlang:dt_put_tag/1",
    "contents": "erlang:dt_put_tag(${1:arg0})"
  }, {
    "trigger": "erlang:posixtime_to_universaltime/1",
    "contents": "erlang:posixtime_to_universaltime(${1:arg0})"
  }, {
    "trigger": "erlang:universaltime_to_posixtime/1",
    "contents": "erlang:universaltime_to_posixtime(${1:arg0})"
  }, {
    "trigger": "erlang:check_old_code/1",
    "contents": "erlang:check_old_code(${1:arg0})"
  }, {
    "trigger": "erlang:nif_error/2",
    "contents": "erlang:nif_error(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:nif_error/1",
    "contents": "erlang:nif_error(${1:arg0})"
  }, {
    "trigger": "erlang:binary_part/3",
    "contents": "erlang:binary_part(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:binary_part/2",
    "contents": "erlang:binary_part(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:binary_to_term/2",
    "contents": "erlang:binary_to_term(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:finish_after_on_load/2",
    "contents": "erlang:finish_after_on_load(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:call_on_load_function/1",
    "contents": "erlang:call_on_load_function(${1:arg0})"
  }, {
    "trigger": "erlang:load_nif/2",
    "contents": "erlang:load_nif(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:binary_to_existing_atom/2",
    "contents": "erlang:binary_to_existing_atom(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:binary_to_atom/2",
    "contents": "erlang:binary_to_atom(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:atom_to_binary/2",
    "contents": "erlang:atom_to_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:decode_packet/3",
    "contents": "erlang:decode_packet(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:bitstring_to_list/1",
    "contents": "erlang:bitstring_to_list(${1:arg0})"
  }, {
    "trigger": "erlang:list_to_bitstring/1",
    "contents": "erlang:list_to_bitstring(${1:arg0})"
  }, {
    "trigger": "erlang:bit_size/1",
    "contents": "erlang:bit_size(${1:arg0})"
  }, {
    "trigger": "erlang:byte_size/1",
    "contents": "erlang:byte_size(${1:arg0})"
  }, {
    "trigger": "erlang:tuple_size/1",
    "contents": "erlang:tuple_size(${1:arg0})"
  }, {
    "trigger": "erlang:is_bitstring/1",
    "contents": "erlang:is_bitstring(${1:arg0})"
  }, {
    "trigger": "erlang:list_to_existing_atom/1",
    "contents": "erlang:list_to_existing_atom(${1:arg0})"
  }, {
    "trigger": "erlang:iolist_to_binary/1",
    "contents": "erlang:iolist_to_binary(${1:arg0})"
  }, {
    "trigger": "erlang:iolist_size/1",
    "contents": "erlang:iolist_size(${1:arg0})"
  }, {
    "trigger": "erlang:make_fun/3",
    "contents": "erlang:make_fun(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:is_boolean/1",
    "contents": "erlang:is_boolean(${1:arg0})"
  }, {
    "trigger": "erlang:get_module_info/2",
    "contents": "erlang:get_module_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:get_module_info/1",
    "contents": "erlang:get_module_info(${1:arg0})"
  }, {
    "trigger": "erlang:hibernate/3",
    "contents": "erlang:hibernate(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:match_spec_test/3",
    "contents": "erlang:match_spec_test(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:is_record/3",
    "contents": "erlang:is_record(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:is_record/2",
    "contents": "erlang:is_record(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:is_function/2",
    "contents": "erlang:is_function(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:is_function/1",
    "contents": "erlang:is_function(${1:arg0})"
  }, {
    "trigger": "erlang:is_binary/1",
    "contents": "erlang:is_binary(${1:arg0})"
  }, {
    "trigger": "erlang:is_reference/1",
    "contents": "erlang:is_reference(${1:arg0})"
  }, {
    "trigger": "erlang:is_port/1",
    "contents": "erlang:is_port(${1:arg0})"
  }, {
    "trigger": "erlang:is_pid/1",
    "contents": "erlang:is_pid(${1:arg0})"
  }, {
    "trigger": "erlang:is_number/1",
    "contents": "erlang:is_number(${1:arg0})"
  }, {
    "trigger": "erlang:is_integer/1",
    "contents": "erlang:is_integer(${1:arg0})"
  }, {
    "trigger": "erlang:is_float/1",
    "contents": "erlang:is_float(${1:arg0})"
  }, {
    "trigger": "erlang:is_tuple/1",
    "contents": "erlang:is_tuple(${1:arg0})"
  }, {
    "trigger": "erlang:is_list/1",
    "contents": "erlang:is_list(${1:arg0})"
  }, {
    "trigger": "erlang:is_atom/1",
    "contents": "erlang:is_atom(${1:arg0})"
  }, {
    "trigger": "erlang:subtract/2",
    "contents": "erlang:subtract(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:--/2",
    "contents": "erlang:--(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:append/2",
    "contents": "erlang:append(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:++/2",
    "contents": "erlang:++(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:send/3",
    "contents": "erlang:send(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:send/2",
    "contents": "erlang:send(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:!/2",
    "contents": "erlang:!(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:+/1",
    "contents": "erlang:+(${1:arg0})"
  }, {
    "trigger": "erlang:-/1",
    "contents": "erlang:-(${1:arg0})"
  }, {
    "trigger": "erlang:bnot/1",
    "contents": "erlang:bnot(${1:arg0})"
  }, {
    "trigger": "erlang:bsr/2",
    "contents": "erlang:bsr(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:bsl/2",
    "contents": "erlang:bsl(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:bxor/2",
    "contents": "erlang:bxor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:band/2",
    "contents": "erlang:band(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:bor/2",
    "contents": "erlang:bor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:rem/2",
    "contents": "erlang:rem(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:div/2",
    "contents": "erlang:div(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang://2",
    "contents": "erlang:/(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:*/2",
    "contents": "erlang:*(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:-/2",
    "contents": "erlang:-(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:+/2",
    "contents": "erlang:+(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:/=/2",
    "contents": "erlang:/=(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:=/=/2",
    "contents": "erlang:=/=(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:==/2",
    "contents": "erlang:==(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:=:=/2",
    "contents": "erlang:=:=(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:=</2",
    "contents": "erlang:=<(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:</2",
    "contents": "erlang:<(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:>=/2",
    "contents": "erlang:>=(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:>/2",
    "contents": "erlang:>(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:not/1",
    "contents": "erlang:not(${1:arg0})"
  }, {
    "trigger": "erlang:xor/2",
    "contents": "erlang:xor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:or/2",
    "contents": "erlang:or(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:and/2",
    "contents": "erlang:and(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:is_builtin/3",
    "contents": "erlang:is_builtin(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:get_stacktrace/0",
    "contents": "erlang:get_stacktrace()"
  }, {
    "trigger": "erlang:raise/3",
    "contents": "erlang:raise(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:error/2",
    "contents": "erlang:error(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:error/1",
    "contents": "erlang:error(${1:arg0})"
  }, {
    "trigger": "erlang:is_process_alive/1",
    "contents": "erlang:is_process_alive(${1:arg0})"
  }, {
    "trigger": "erlang:demonitor/2",
    "contents": "erlang:demonitor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:demonitor/1",
    "contents": "erlang:demonitor(${1:arg0})"
  }, {
    "trigger": "erlang:monitor/2",
    "contents": "erlang:monitor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:fun_to_list/1",
    "contents": "erlang:fun_to_list(${1:arg0})"
  }, {
    "trigger": "erlang:port_to_list/1",
    "contents": "erlang:port_to_list(${1:arg0})"
  }, {
    "trigger": "erlang:ref_to_list/1",
    "contents": "erlang:ref_to_list(${1:arg0})"
  }, {
    "trigger": "erlang:system_profile/0",
    "contents": "erlang:system_profile()"
  }, {
    "trigger": "erlang:system_profile/2",
    "contents": "erlang:system_profile(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:system_monitor/2",
    "contents": "erlang:system_monitor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:system_monitor/1",
    "contents": "erlang:system_monitor(${1:arg0})"
  }, {
    "trigger": "erlang:system_monitor/0",
    "contents": "erlang:system_monitor()"
  }, {
    "trigger": "erlang:system_info/1",
    "contents": "erlang:system_info(${1:arg0})"
  }, {
    "trigger": "erlang:system_flag/2",
    "contents": "erlang:system_flag(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:make_tuple/3",
    "contents": "erlang:make_tuple(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:append_element/2",
    "contents": "erlang:append_element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:make_tuple/2",
    "contents": "erlang:make_tuple(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:read_timer/1",
    "contents": "erlang:read_timer(${1:arg0})"
  }, {
    "trigger": "erlang:cancel_timer/1",
    "contents": "erlang:cancel_timer(${1:arg0})"
  }, {
    "trigger": "erlang:send_after/3",
    "contents": "erlang:send_after(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:start_timer/3",
    "contents": "erlang:start_timer(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:bump_reductions/1",
    "contents": "erlang:bump_reductions(${1:arg0})"
  }, {
    "trigger": "erlang:process_display/2",
    "contents": "erlang:process_display(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:resume_process/1",
    "contents": "erlang:resume_process(${1:arg0})"
  }, {
    "trigger": "erlang:suspend_process/2",
    "contents": "erlang:suspend_process(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:seq_trace_print/2",
    "contents": "erlang:seq_trace_print(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:seq_trace_print/1",
    "contents": "erlang:seq_trace_print(${1:arg0})"
  }, {
    "trigger": "erlang:seq_trace_info/1",
    "contents": "erlang:seq_trace_info(${1:arg0})"
  }, {
    "trigger": "erlang:seq_trace/2",
    "contents": "erlang:seq_trace(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:trace_delivered/1",
    "contents": "erlang:trace_delivered(${1:arg0})"
  }, {
    "trigger": "erlang:trace_info/2",
    "contents": "erlang:trace_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:trace/3",
    "contents": "erlang:trace(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:trace_pattern/3",
    "contents": "erlang:trace_pattern(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:trace_pattern/2",
    "contents": "erlang:trace_pattern(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:port_get_data/1",
    "contents": "erlang:port_get_data(${1:arg0})"
  }, {
    "trigger": "erlang:port_set_data/2",
    "contents": "erlang:port_set_data(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:dist_exit/3",
    "contents": "erlang:dist_exit(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:setnode/3",
    "contents": "erlang:setnode(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:setnode/2",
    "contents": "erlang:setnode(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:spawn_opt/1",
    "contents": "erlang:spawn_opt(${1:arg0})"
  }, {
    "trigger": "erlang:whereis/1",
    "contents": "erlang:whereis(${1:arg0})"
  }, {
    "trigger": "erlang:unregister/1",
    "contents": "erlang:unregister(${1:arg0})"
  }, {
    "trigger": "erlang:unlink/1",
    "contents": "erlang:unlink(${1:arg0})"
  }, {
    "trigger": "erlang:universaltime_to_localtime/1",
    "contents": "erlang:universaltime_to_localtime(${1:arg0})"
  }, {
    "trigger": "erlang:universaltime/0",
    "contents": "erlang:universaltime()"
  }, {
    "trigger": "erlang:tuple_to_list/1",
    "contents": "erlang:tuple_to_list(${1:arg0})"
  }, {
    "trigger": "erlang:trunc/1",
    "contents": "erlang:trunc(${1:arg0})"
  }, {
    "trigger": "erlang:tl/1",
    "contents": "erlang:tl(${1:arg0})"
  }, {
    "trigger": "erlang:time/0",
    "contents": "erlang:time()"
  }, {
    "trigger": "erlang:throw/1",
    "contents": "erlang:throw(${1:arg0})"
  }, {
    "trigger": "erlang:term_to_binary/2",
    "contents": "erlang:term_to_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:term_to_binary/1",
    "contents": "erlang:term_to_binary(${1:arg0})"
  }, {
    "trigger": "erlang:statistics/1",
    "contents": "erlang:statistics(${1:arg0})"
  }, {
    "trigger": "erlang:split_binary/2",
    "contents": "erlang:split_binary(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:spawn_link/3",
    "contents": "erlang:spawn_link(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:spawn/3",
    "contents": "erlang:spawn(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:size/1",
    "contents": "erlang:size(${1:arg0})"
  }, {
    "trigger": "erlang:setelement/3",
    "contents": "erlang:setelement(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:self/0",
    "contents": "erlang:self()"
  }, {
    "trigger": "erlang:round/1",
    "contents": "erlang:round(${1:arg0})"
  }, {
    "trigger": "erlang:registered/0",
    "contents": "erlang:registered()"
  }, {
    "trigger": "erlang:register/2",
    "contents": "erlang:register(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:put/2",
    "contents": "erlang:put(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:purge_module/1",
    "contents": "erlang:purge_module(${1:arg0})"
  }, {
    "trigger": "erlang:processes/0",
    "contents": "erlang:processes()"
  }, {
    "trigger": "erlang:process_info/2",
    "contents": "erlang:process_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:process_info/1",
    "contents": "erlang:process_info(${1:arg0})"
  }, {
    "trigger": "erlang:process_flag/3",
    "contents": "erlang:process_flag(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:process_flag/2",
    "contents": "erlang:process_flag(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:pre_loaded/0",
    "contents": "erlang:pre_loaded()"
  }, {
    "trigger": "erlang:ports/0",
    "contents": "erlang:ports()"
  }, {
    "trigger": "erlang:pid_to_list/1",
    "contents": "erlang:pid_to_list(${1:arg0})"
  }, {
    "trigger": "erlang:open_port/2",
    "contents": "erlang:open_port(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:now/0",
    "contents": "erlang:now()"
  }, {
    "trigger": "erlang:nodes/1",
    "contents": "erlang:nodes(${1:arg0})"
  }, {
    "trigger": "erlang:node/0",
    "contents": "erlang:node()"
  }, {
    "trigger": "erlang:node/1",
    "contents": "erlang:node(${1:arg0})"
  }, {
    "trigger": "erlang:monitor_node/3",
    "contents": "erlang:monitor_node(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:monitor_node/2",
    "contents": "erlang:monitor_node(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:function_exported/3",
    "contents": "erlang:function_exported(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:module_loaded/1",
    "contents": "erlang:module_loaded(${1:arg0})"
  }, {
    "trigger": "erlang:md5_final/1",
    "contents": "erlang:md5_final(${1:arg0})"
  }, {
    "trigger": "erlang:md5_update/2",
    "contents": "erlang:md5_update(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:md5_init/0",
    "contents": "erlang:md5_init()"
  }, {
    "trigger": "erlang:md5/1",
    "contents": "erlang:md5(${1:arg0})"
  }, {
    "trigger": "erlang:make_ref/0",
    "contents": "erlang:make_ref()"
  }, {
    "trigger": "erlang:localtime_to_universaltime/2",
    "contents": "erlang:localtime_to_universaltime(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:localtime/0",
    "contents": "erlang:localtime()"
  }, {
    "trigger": "erlang:loaded/0",
    "contents": "erlang:loaded()"
  }, {
    "trigger": "erlang:list_to_tuple/1",
    "contents": "erlang:list_to_tuple(${1:arg0})"
  }, {
    "trigger": "erlang:list_to_pid/1",
    "contents": "erlang:list_to_pid(${1:arg0})"
  }, {
    "trigger": "erlang:list_to_integer/1",
    "contents": "erlang:list_to_integer(${1:arg0})"
  }, {
    "trigger": "erlang:list_to_float/1",
    "contents": "erlang:list_to_float(${1:arg0})"
  }, {
    "trigger": "erlang:list_to_binary/1",
    "contents": "erlang:list_to_binary(${1:arg0})"
  }, {
    "trigger": "erlang:list_to_atom/1",
    "contents": "erlang:list_to_atom(${1:arg0})"
  }, {
    "trigger": "erlang:link/1",
    "contents": "erlang:link(${1:arg0})"
  }, {
    "trigger": "erlang:length/1",
    "contents": "erlang:length(${1:arg0})"
  }, {
    "trigger": "erlang:is_alive/0",
    "contents": "erlang:is_alive()"
  }, {
    "trigger": "erlang:integer_to_list/1",
    "contents": "erlang:integer_to_list(${1:arg0})"
  }, {
    "trigger": "erlang:hd/1",
    "contents": "erlang:hd(${1:arg0})"
  }, {
    "trigger": "erlang:phash2/2",
    "contents": "erlang:phash2(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:phash2/1",
    "contents": "erlang:phash2(${1:arg0})"
  }, {
    "trigger": "erlang:phash/2",
    "contents": "erlang:phash(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:halt/2",
    "contents": "erlang:halt(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:halt/1",
    "contents": "erlang:halt(${1:arg0})"
  }, {
    "trigger": "erlang:halt/0",
    "contents": "erlang:halt()"
  }, {
    "trigger": "erlang:group_leader/2",
    "contents": "erlang:group_leader(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:group_leader/0",
    "contents": "erlang:group_leader()"
  }, {
    "trigger": "erlang:get_keys/1",
    "contents": "erlang:get_keys(${1:arg0})"
  }, {
    "trigger": "erlang:get/1",
    "contents": "erlang:get(${1:arg0})"
  }, {
    "trigger": "erlang:get/0",
    "contents": "erlang:get()"
  }, {
    "trigger": "erlang:garbage_collect/1",
    "contents": "erlang:garbage_collect(${1:arg0})"
  }, {
    "trigger": "erlang:garbage_collect/0",
    "contents": "erlang:garbage_collect()"
  }, {
    "trigger": "erlang:fun_info/2",
    "contents": "erlang:fun_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:float_to_list/2",
    "contents": "erlang:float_to_list(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:float_to_list/1",
    "contents": "erlang:float_to_list(${1:arg0})"
  }, {
    "trigger": "erlang:float/1",
    "contents": "erlang:float(${1:arg0})"
  }, {
    "trigger": "erlang:external_size/2",
    "contents": "erlang:external_size(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:external_size/1",
    "contents": "erlang:external_size(${1:arg0})"
  }, {
    "trigger": "erlang:exit/2",
    "contents": "erlang:exit(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:exit/1",
    "contents": "erlang:exit(${1:arg0})"
  }, {
    "trigger": "erlang:erase/1",
    "contents": "erlang:erase(${1:arg0})"
  }, {
    "trigger": "erlang:erase/0",
    "contents": "erlang:erase()"
  }, {
    "trigger": "erlang:element/2",
    "contents": "erlang:element(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:display_nl/0",
    "contents": "erlang:display_nl()"
  }, {
    "trigger": "erlang:display_string/1",
    "contents": "erlang:display_string(${1:arg0})"
  }, {
    "trigger": "erlang:display/1",
    "contents": "erlang:display(${1:arg0})"
  }, {
    "trigger": "erlang:delete_module/1",
    "contents": "erlang:delete_module(${1:arg0})"
  }, {
    "trigger": "erlang:date/0",
    "contents": "erlang:date()"
  }, {
    "trigger": "erlang:crc32_combine/3",
    "contents": "erlang:crc32_combine(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:crc32/2",
    "contents": "erlang:crc32(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:crc32/1",
    "contents": "erlang:crc32(${1:arg0})"
  }, {
    "trigger": "erlang:check_process_code/2",
    "contents": "erlang:check_process_code(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:binary_to_term/1",
    "contents": "erlang:binary_to_term(${1:arg0})"
  }, {
    "trigger": "erlang:binary_to_list/3",
    "contents": "erlang:binary_to_list(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:binary_to_list/1",
    "contents": "erlang:binary_to_list(${1:arg0})"
  }, {
    "trigger": "erlang:atom_to_list/1",
    "contents": "erlang:atom_to_list(${1:arg0})"
  }, {
    "trigger": "erlang:apply/3",
    "contents": "erlang:apply(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:adler32_combine/3",
    "contents": "erlang:adler32_combine(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erlang:adler32/2",
    "contents": "erlang:adler32(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erlang:adler32/1",
    "contents": "erlang:adler32(${1:arg0})"
  }, {
    "trigger": "erlang:abs/1",
    "contents": "erlang:abs(${1:arg0})"
  }, {
    "trigger": "erlang:gather_gc_info_result/1",
    "contents": "erlang:gather_gc_info_result(${1:arg0})"
  }, {
    "trigger": "erlang:gather_sched_wall_time_result/1",
    "contents": "erlang:gather_sched_wall_time_result(${1:arg0})"
  }, {
    "trigger": "erlang:alloc_sizes/1",
    "contents": "erlang:alloc_sizes(${1:arg0})"
  }, {
    "trigger": "erlang:alloc_info/1",
    "contents": "erlang:alloc_info(${1:arg0})"
  }, {
    "trigger": "string:len/1",
    "contents": "string:len(${1:arg0})"
  }, {
    "trigger": "string:equal/2",
    "contents": "string:equal(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:concat/2",
    "contents": "string:concat(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:rchr/2",
    "contents": "string:rchr(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:rstr/2",
    "contents": "string:rstr(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:span/2",
    "contents": "string:span(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:cspan/2",
    "contents": "string:cspan(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:copies/2",
    "contents": "string:copies(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:words/1",
    "contents": "string:words(${1:arg0})"
  }, {
    "trigger": "string:words/2",
    "contents": "string:words(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:sub_word/2",
    "contents": "string:sub_word(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:sub_word/3",
    "contents": "string:sub_word(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "string:strip/1",
    "contents": "string:strip(${1:arg0})"
  }, {
    "trigger": "string:strip/2",
    "contents": "string:strip(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:left/2",
    "contents": "string:left(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:left/3",
    "contents": "string:left(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "string:right/2",
    "contents": "string:right(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:right/3",
    "contents": "string:right(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "string:centre/2",
    "contents": "string:centre(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:centre/3",
    "contents": "string:centre(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "string:sub_string/2",
    "contents": "string:sub_string(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:sub_string/3",
    "contents": "string:sub_string(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "string:to_upper/1",
    "contents": "string:to_upper(${1:arg0})"
  }, {
    "trigger": "string:module_info/0",
    "contents": "string:module_info()"
  }, {
    "trigger": "string:module_info/1",
    "contents": "string:module_info(${1:arg0})"
  }, {
    "trigger": "string:join/2",
    "contents": "string:join(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:substr/2",
    "contents": "string:substr(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:chr/2",
    "contents": "string:chr(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:chars/3",
    "contents": "string:chars(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "string:chars/2",
    "contents": "string:chars(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:str/2",
    "contents": "string:str(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:substr/3",
    "contents": "string:substr(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "string:strip/3",
    "contents": "string:strip(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "string:to_lower/1",
    "contents": "string:to_lower(${1:arg0})"
  }, {
    "trigger": "string:tokens/2",
    "contents": "string:tokens(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "string:to_float/1",
    "contents": "string:to_float(${1:arg0})"
  }, {
    "trigger": "string:to_integer/1",
    "contents": "string:to_integer(${1:arg0})"
  }, {
    "trigger": "compile:file/1",
    "contents": "compile:file(${1:arg0})"
  }, {
    "trigger": "compile:forms/1",
    "contents": "compile:forms(${1:arg0})"
  }, {
    "trigger": "compile:forms/2",
    "contents": "compile:forms(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "compile:noenv_file/2",
    "contents": "compile:noenv_file(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "compile:noenv_forms/2",
    "contents": "compile:noenv_forms(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "compile:noenv_output_generated/1",
    "contents": "compile:noenv_output_generated(${1:arg0})"
  }, {
    "trigger": "compile:format_error/1",
    "contents": "compile:format_error(${1:arg0})"
  }, {
    "trigger": "compile:iofile/1",
    "contents": "compile:iofile(${1:arg0})"
  }, {
    "trigger": "compile:options/0",
    "contents": "compile:options()"
  }, {
    "trigger": "compile:compile/3",
    "contents": "compile:compile(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "compile:compile_beam/3",
    "contents": "compile:compile_beam(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "compile:compile_asm/3",
    "contents": "compile:compile_asm(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "compile:compile_core/3",
    "contents": "compile:compile_core(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "compile:module_info/0",
    "contents": "compile:module_info()"
  }, {
    "trigger": "compile:module_info/1",
    "contents": "compile:module_info(${1:arg0})"
  }, {
    "trigger": "compile:output_generated/1",
    "contents": "compile:output_generated(${1:arg0})"
  }, {
    "trigger": "compile:file/2",
    "contents": "compile:file(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_except:module/2",
    "contents": "beam_except:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_except:module_info/0",
    "contents": "beam_except:module_info()"
  }, {
    "trigger": "beam_except:module_info/1",
    "contents": "beam_except:module_info(${1:arg0})"
  }, {
    "trigger": "hipe_unified_loader:load_native_code/2",
    "contents": "hipe_unified_loader:load_native_code(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "hipe_unified_loader:post_beam_load/1",
    "contents": "hipe_unified_loader:post_beam_load(${1:arg0})"
  }, {
    "trigger": "hipe_unified_loader:load_module/3",
    "contents": "hipe_unified_loader:load_module(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "hipe_unified_loader:load/2",
    "contents": "hipe_unified_loader:load(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "hipe_unified_loader:module_info/0",
    "contents": "hipe_unified_loader:module_info()"
  }, {
    "trigger": "hipe_unified_loader:module_info/1",
    "contents": "hipe_unified_loader:module_info(${1:arg0})"
  }, {
    "trigger": "hipe_unified_loader:chunk_name/1",
    "contents": "hipe_unified_loader:chunk_name(${1:arg0})"
  }, {
    "trigger": "error_logger:start/0",
    "contents": "error_logger:start()"
  }, {
    "trigger": "error_logger:start_link/0",
    "contents": "error_logger:start_link()"
  }, {
    "trigger": "error_logger:error_msg/1",
    "contents": "error_logger:error_msg(${1:arg0})"
  }, {
    "trigger": "error_logger:error_msg/2",
    "contents": "error_logger:error_msg(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger:format/2",
    "contents": "error_logger:format(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger:error_report/1",
    "contents": "error_logger:error_report(${1:arg0})"
  }, {
    "trigger": "error_logger:error_report/2",
    "contents": "error_logger:error_report(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger:warning_report/1",
    "contents": "error_logger:warning_report(${1:arg0})"
  }, {
    "trigger": "error_logger:warning_report/2",
    "contents": "error_logger:warning_report(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger:warning_msg/1",
    "contents": "error_logger:warning_msg(${1:arg0})"
  }, {
    "trigger": "error_logger:info_report/1",
    "contents": "error_logger:info_report(${1:arg0})"
  }, {
    "trigger": "error_logger:info_report/2",
    "contents": "error_logger:info_report(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger:info_msg/1",
    "contents": "error_logger:info_msg(${1:arg0})"
  }, {
    "trigger": "error_logger:info_msg/2",
    "contents": "error_logger:info_msg(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger:error_info/1",
    "contents": "error_logger:error_info(${1:arg0})"
  }, {
    "trigger": "error_logger:swap_handler/1",
    "contents": "error_logger:swap_handler(${1:arg0})"
  }, {
    "trigger": "error_logger:add_report_handler/1",
    "contents": "error_logger:add_report_handler(${1:arg0})"
  }, {
    "trigger": "error_logger:add_report_handler/2",
    "contents": "error_logger:add_report_handler(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger:delete_report_handler/1",
    "contents": "error_logger:delete_report_handler(${1:arg0})"
  }, {
    "trigger": "error_logger:logfile/1",
    "contents": "error_logger:logfile(${1:arg0})"
  }, {
    "trigger": "error_logger:tty/1",
    "contents": "error_logger:tty(${1:arg0})"
  }, {
    "trigger": "error_logger:init/1",
    "contents": "error_logger:init(${1:arg0})"
  }, {
    "trigger": "error_logger:handle_event/2",
    "contents": "error_logger:handle_event(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger:handle_info/2",
    "contents": "error_logger:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger:handle_call/2",
    "contents": "error_logger:handle_call(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger:terminate/2",
    "contents": "error_logger:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger:module_info/0",
    "contents": "error_logger:module_info()"
  }, {
    "trigger": "error_logger:module_info/1",
    "contents": "error_logger:module_info(${1:arg0})"
  }, {
    "trigger": "error_logger:warning_msg/2",
    "contents": "error_logger:warning_msg(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger:warning_map/0",
    "contents": "error_logger:warning_map()"
  }, {
    "trigger": "standard_error:start_link/0",
    "contents": "standard_error:start_link()"
  }, {
    "trigger": "standard_error:terminate/2",
    "contents": "standard_error:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "standard_error:init/1",
    "contents": "standard_error:init(${1:arg0})"
  }, {
    "trigger": "standard_error:module_info/0",
    "contents": "standard_error:module_info()"
  }, {
    "trigger": "standard_error:module_info/1",
    "contents": "standard_error:module_info(${1:arg0})"
  }, {
    "trigger": "global_group:global_groups/0",
    "contents": "global_group:global_groups()"
  }, {
    "trigger": "global_group:monitor_nodes/1",
    "contents": "global_group:monitor_nodes(${1:arg0})"
  }, {
    "trigger": "global_group:own_nodes/0",
    "contents": "global_group:own_nodes()"
  }, {
    "trigger": "global_group:registered_names/1",
    "contents": "global_group:registered_names(${1:arg0})"
  }, {
    "trigger": "global_group:send/2",
    "contents": "global_group:send(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global_group:send/3",
    "contents": "global_group:send(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global_group:whereis_name/1",
    "contents": "global_group:whereis_name(${1:arg0})"
  }, {
    "trigger": "global_group:whereis_name/2",
    "contents": "global_group:whereis_name(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global_group:sync/0",
    "contents": "global_group:sync()"
  }, {
    "trigger": "global_group:ng_add_check/2",
    "contents": "global_group:ng_add_check(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global_group:ng_add_check/3",
    "contents": "global_group:ng_add_check(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global_group:info/0",
    "contents": "global_group:info()"
  }, {
    "trigger": "global_group:registered_names_test/1",
    "contents": "global_group:registered_names_test(${1:arg0})"
  }, {
    "trigger": "global_group:send_test/2",
    "contents": "global_group:send_test(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global_group:whereis_name_test/1",
    "contents": "global_group:whereis_name_test(${1:arg0})"
  }, {
    "trigger": "global_group:start/0",
    "contents": "global_group:start()"
  }, {
    "trigger": "global_group:start_link/0",
    "contents": "global_group:start_link()"
  }, {
    "trigger": "global_group:stop/0",
    "contents": "global_group:stop()"
  }, {
    "trigger": "global_group:init/1",
    "contents": "global_group:init(${1:arg0})"
  }, {
    "trigger": "global_group:handle_call/3",
    "contents": "global_group:handle_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global_group:handle_cast/2",
    "contents": "global_group:handle_cast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global_group:handle_info/2",
    "contents": "global_group:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global_group:terminate/2",
    "contents": "global_group:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global_group:code_change/3",
    "contents": "global_group:code_change(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "global_group:config_scan/1",
    "contents": "global_group:config_scan(${1:arg0})"
  }, {
    "trigger": "global_group:config_scan/2",
    "contents": "global_group:config_scan(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "global_group:sync_init/4",
    "contents": "global_group:sync_init(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "global_group:get_own_nodes/0",
    "contents": "global_group:get_own_nodes()"
  }, {
    "trigger": "global_group:publish_on_nodes/0",
    "contents": "global_group:publish_on_nodes()"
  }, {
    "trigger": "global_group:module_info/0",
    "contents": "global_group:module_info()"
  }, {
    "trigger": "global_group:module_info/1",
    "contents": "global_group:module_info(${1:arg0})"
  }, {
    "trigger": "global_group:get_own_nodes_with_errors/0",
    "contents": "global_group:get_own_nodes_with_errors()"
  }, {
    "trigger": "global_group:global_groups_removed/1",
    "contents": "global_group:global_groups_removed(${1:arg0})"
  }, {
    "trigger": "global_group:global_groups_added/1",
    "contents": "global_group:global_groups_added(${1:arg0})"
  }, {
    "trigger": "global_group:global_groups_changed/1",
    "contents": "global_group:global_groups_changed(${1:arg0})"
  }, {
    "trigger": "sys_core_fold:format_error/1",
    "contents": "sys_core_fold:format_error(${1:arg0})"
  }, {
    "trigger": "sys_core_fold:module_info/0",
    "contents": "sys_core_fold:module_info()"
  }, {
    "trigger": "sys_core_fold:module_info/1",
    "contents": "sys_core_fold:module_info(${1:arg0})"
  }, {
    "trigger": "sys_core_fold:module/2",
    "contents": "sys_core_fold:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell:local_allowed/3",
    "contents": "shell:local_allowed(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "shell:non_local_allowed/3",
    "contents": "shell:non_local_allowed(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "shell:start/0",
    "contents": "shell:start()"
  }, {
    "trigger": "shell:start/1",
    "contents": "shell:start(${1:arg0})"
  }, {
    "trigger": "shell:start/2",
    "contents": "shell:start(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell:whereis_evaluator/0",
    "contents": "shell:whereis_evaluator()"
  }, {
    "trigger": "shell:whereis_evaluator/1",
    "contents": "shell:whereis_evaluator(${1:arg0})"
  }, {
    "trigger": "shell:start_restricted/1",
    "contents": "shell:start_restricted(${1:arg0})"
  }, {
    "trigger": "shell:stop_restricted/0",
    "contents": "shell:stop_restricted()"
  }, {
    "trigger": "shell:server/2",
    "contents": "shell:server(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell:server/1",
    "contents": "shell:server(${1:arg0})"
  }, {
    "trigger": "shell:history/1",
    "contents": "shell:history(${1:arg0})"
  }, {
    "trigger": "shell:results/1",
    "contents": "shell:results(${1:arg0})"
  }, {
    "trigger": "shell:prompt_func/1",
    "contents": "shell:prompt_func(${1:arg0})"
  }, {
    "trigger": "shell:strings/1",
    "contents": "shell:strings(${1:arg0})"
  }, {
    "trigger": "shell:module_info/0",
    "contents": "shell:module_info()"
  }, {
    "trigger": "shell:module_info/1",
    "contents": "shell:module_info(${1:arg0})"
  }, {
    "trigger": "v3_kernel:format_error/1",
    "contents": "v3_kernel:format_error(${1:arg0})"
  }, {
    "trigger": "v3_kernel:module_info/0",
    "contents": "v3_kernel:module_info()"
  }, {
    "trigger": "v3_kernel:module_info/1",
    "contents": "v3_kernel:module_info(${1:arg0})"
  }, {
    "trigger": "v3_kernel:module/2",
    "contents": "v3_kernel:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:file_info/1",
    "contents": "file:file_info(${1:arg0})"
  }, {
    "trigger": "file:pid2name/1",
    "contents": "file:pid2name(${1:arg0})"
  }, {
    "trigger": "file:rename/2",
    "contents": "file:rename(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:make_dir/1",
    "contents": "file:make_dir(${1:arg0})"
  }, {
    "trigger": "file:del_dir/1",
    "contents": "file:del_dir(${1:arg0})"
  }, {
    "trigger": "file:read_file_info/2",
    "contents": "file:read_file_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:altname/1",
    "contents": "file:altname(${1:arg0})"
  }, {
    "trigger": "file:read_link_info/1",
    "contents": "file:read_link_info(${1:arg0})"
  }, {
    "trigger": "file:read_link_info/2",
    "contents": "file:read_link_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:read_link/1",
    "contents": "file:read_link(${1:arg0})"
  }, {
    "trigger": "file:read_link_all/1",
    "contents": "file:read_link_all(${1:arg0})"
  }, {
    "trigger": "file:write_file_info/2",
    "contents": "file:write_file_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:write_file_info/3",
    "contents": "file:write_file_info(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:list_dir_all/1",
    "contents": "file:list_dir_all(${1:arg0})"
  }, {
    "trigger": "file:make_link/2",
    "contents": "file:make_link(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:make_symlink/2",
    "contents": "file:make_symlink(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:write_file/2",
    "contents": "file:write_file(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:write_file/3",
    "contents": "file:write_file(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:raw_read_file_info/1",
    "contents": "file:raw_read_file_info(${1:arg0})"
  }, {
    "trigger": "file:raw_write_file_info/2",
    "contents": "file:raw_write_file_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:advise/4",
    "contents": "file:advise(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "file:allocate/3",
    "contents": "file:allocate(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:read_line/1",
    "contents": "file:read_line(${1:arg0})"
  }, {
    "trigger": "file:pread/2",
    "contents": "file:pread(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:pread/3",
    "contents": "file:pread(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:write/2",
    "contents": "file:write(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:pwrite/2",
    "contents": "file:pwrite(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:pwrite/3",
    "contents": "file:pwrite(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:datasync/1",
    "contents": "file:datasync(${1:arg0})"
  }, {
    "trigger": "file:sync/1",
    "contents": "file:sync(${1:arg0})"
  }, {
    "trigger": "file:truncate/1",
    "contents": "file:truncate(${1:arg0})"
  }, {
    "trigger": "file:copy/2",
    "contents": "file:copy(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:copy/3",
    "contents": "file:copy(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:ipread_s32bu_p32bu/3",
    "contents": "file:ipread_s32bu_p32bu(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:ipread_s32bu_p32bu_int/3",
    "contents": "file:ipread_s32bu_p32bu_int(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:path_consult/2",
    "contents": "file:path_consult(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:eval/1",
    "contents": "file:eval(${1:arg0})"
  }, {
    "trigger": "file:eval/2",
    "contents": "file:eval(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:path_eval/3",
    "contents": "file:path_eval(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:script/1",
    "contents": "file:script(${1:arg0})"
  }, {
    "trigger": "file:script/2",
    "contents": "file:script(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:path_script/2",
    "contents": "file:path_script(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:path_script/3",
    "contents": "file:path_script(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:path_open/3",
    "contents": "file:path_open(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:change_mode/2",
    "contents": "file:change_mode(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:change_owner/2",
    "contents": "file:change_owner(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:change_owner/3",
    "contents": "file:change_owner(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:change_group/2",
    "contents": "file:change_group(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:change_time/2",
    "contents": "file:change_time(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:change_time/3",
    "contents": "file:change_time(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:sendfile/5",
    "contents": "file:sendfile(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "file:sendfile/2",
    "contents": "file:sendfile(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:module_info/0",
    "contents": "file:module_info()"
  }, {
    "trigger": "file:module_info/1",
    "contents": "file:module_info(${1:arg0})"
  }, {
    "trigger": "file:list_dir/1",
    "contents": "file:list_dir(${1:arg0})"
  }, {
    "trigger": "file:set_cwd/1",
    "contents": "file:set_cwd(${1:arg0})"
  }, {
    "trigger": "file:path_eval/2",
    "contents": "file:path_eval(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:read_file/1",
    "contents": "file:read_file(${1:arg0})"
  }, {
    "trigger": "file:get_cwd/1",
    "contents": "file:get_cwd(${1:arg0})"
  }, {
    "trigger": "file:delete/1",
    "contents": "file:delete(${1:arg0})"
  }, {
    "trigger": "file:get_cwd/0",
    "contents": "file:get_cwd()"
  }, {
    "trigger": "file:read_file_info/1",
    "contents": "file:read_file_info(${1:arg0})"
  }, {
    "trigger": "file:position/2",
    "contents": "file:position(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:read/2",
    "contents": "file:read(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:consult/1",
    "contents": "file:consult(${1:arg0})"
  }, {
    "trigger": "file:close/1",
    "contents": "file:close(${1:arg0})"
  }, {
    "trigger": "file:open/2",
    "contents": "file:open(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "file:format_error/1",
    "contents": "file:format_error(${1:arg0})"
  }, {
    "trigger": "file:copy_opened/3",
    "contents": "file:copy_opened(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "file:native_name_encoding/0",
    "contents": "file:native_name_encoding()"
  }, {
    "trigger": "proplists:property/1",
    "contents": "proplists:property(${1:arg0})"
  }, {
    "trigger": "proplists:property/2",
    "contents": "proplists:property(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:compact/1",
    "contents": "proplists:compact(${1:arg0})"
  }, {
    "trigger": "proplists:lookup/2",
    "contents": "proplists:lookup(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:lookup_all/2",
    "contents": "proplists:lookup_all(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:is_defined/2",
    "contents": "proplists:is_defined(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:get_all_values/2",
    "contents": "proplists:get_all_values(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:append_values/2",
    "contents": "proplists:append_values(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:get_bool/2",
    "contents": "proplists:get_bool(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:get_keys/1",
    "contents": "proplists:get_keys(${1:arg0})"
  }, {
    "trigger": "proplists:delete/2",
    "contents": "proplists:delete(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:substitute_aliases/2",
    "contents": "proplists:substitute_aliases(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:expand/2",
    "contents": "proplists:expand(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:normalize/2",
    "contents": "proplists:normalize(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:split/2",
    "contents": "proplists:split(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:module_info/0",
    "contents": "proplists:module_info()"
  }, {
    "trigger": "proplists:module_info/1",
    "contents": "proplists:module_info(${1:arg0})"
  }, {
    "trigger": "proplists:get_value/2",
    "contents": "proplists:get_value(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:unfold/1",
    "contents": "proplists:unfold(${1:arg0})"
  }, {
    "trigger": "proplists:substitute_negations/2",
    "contents": "proplists:substitute_negations(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "proplists:get_value/3",
    "contents": "proplists:get_value(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "beam_bsm:module/2",
    "contents": "beam_bsm:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_bsm:format_error/1",
    "contents": "beam_bsm:format_error(${1:arg0})"
  }, {
    "trigger": "beam_bsm:module_info/0",
    "contents": "beam_bsm:module_info()"
  }, {
    "trigger": "beam_bsm:module_info/1",
    "contents": "beam_bsm:module_info(${1:arg0})"
  }, {
    "trigger": "beam_asm:encode/2",
    "contents": "beam_asm:encode(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_asm:module_info/0",
    "contents": "beam_asm:module_info()"
  }, {
    "trigger": "beam_asm:module_info/1",
    "contents": "beam_asm:module_info(${1:arg0})"
  }, {
    "trigger": "beam_asm:module/4",
    "contents": "beam_asm:module(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "net_kernel:kernel_apply/3",
    "contents": "net_kernel:kernel_apply(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "net_kernel:allow/1",
    "contents": "net_kernel:allow(${1:arg0})"
  }, {
    "trigger": "net_kernel:longnames/0",
    "contents": "net_kernel:longnames()"
  }, {
    "trigger": "net_kernel:stop/0",
    "contents": "net_kernel:stop()"
  }, {
    "trigger": "net_kernel:node_info/1",
    "contents": "net_kernel:node_info(${1:arg0})"
  }, {
    "trigger": "net_kernel:node_info/2",
    "contents": "net_kernel:node_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "net_kernel:nodes_info/0",
    "contents": "net_kernel:nodes_info()"
  }, {
    "trigger": "net_kernel:i/0",
    "contents": "net_kernel:i()"
  }, {
    "trigger": "net_kernel:i/1",
    "contents": "net_kernel:i(${1:arg0})"
  }, {
    "trigger": "net_kernel:verbose/1",
    "contents": "net_kernel:verbose(${1:arg0})"
  }, {
    "trigger": "net_kernel:set_net_ticktime/2",
    "contents": "net_kernel:set_net_ticktime(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "net_kernel:set_net_ticktime/1",
    "contents": "net_kernel:set_net_ticktime(${1:arg0})"
  }, {
    "trigger": "net_kernel:get_net_ticktime/0",
    "contents": "net_kernel:get_net_ticktime()"
  }, {
    "trigger": "net_kernel:monitor_nodes/2",
    "contents": "net_kernel:monitor_nodes(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "net_kernel:hidden_connect/1",
    "contents": "net_kernel:hidden_connect(${1:arg0})"
  }, {
    "trigger": "net_kernel:publish_on_node/1",
    "contents": "net_kernel:publish_on_node(${1:arg0})"
  }, {
    "trigger": "net_kernel:connect_node/1",
    "contents": "net_kernel:connect_node(${1:arg0})"
  }, {
    "trigger": "net_kernel:hidden_connect_node/1",
    "contents": "net_kernel:hidden_connect_node(${1:arg0})"
  }, {
    "trigger": "net_kernel:passive_connect_monitor/2",
    "contents": "net_kernel:passive_connect_monitor(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "net_kernel:start/1",
    "contents": "net_kernel:start(${1:arg0})"
  }, {
    "trigger": "net_kernel:start_link/1",
    "contents": "net_kernel:start_link(${1:arg0})"
  }, {
    "trigger": "net_kernel:init/1",
    "contents": "net_kernel:init(${1:arg0})"
  }, {
    "trigger": "net_kernel:handle_call/3",
    "contents": "net_kernel:handle_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "net_kernel:handle_cast/2",
    "contents": "net_kernel:handle_cast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "net_kernel:code_change/3",
    "contents": "net_kernel:code_change(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "net_kernel:terminate/2",
    "contents": "net_kernel:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "net_kernel:handle_info/2",
    "contents": "net_kernel:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "net_kernel:ticker/2",
    "contents": "net_kernel:ticker(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "net_kernel:ticker_loop/2",
    "contents": "net_kernel:ticker_loop(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "net_kernel:aux_ticker/4",
    "contents": "net_kernel:aux_ticker(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "net_kernel:do_spawn/3",
    "contents": "net_kernel:do_spawn(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "net_kernel:spawn_func/6",
    "contents": "net_kernel:spawn_func(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "net_kernel:connecttime/0",
    "contents": "net_kernel:connecttime()"
  }, {
    "trigger": "net_kernel:module_info/0",
    "contents": "net_kernel:module_info()"
  }, {
    "trigger": "net_kernel:module_info/1",
    "contents": "net_kernel:module_info(${1:arg0})"
  }, {
    "trigger": "net_kernel:update_publish_nodes/1",
    "contents": "net_kernel:update_publish_nodes(${1:arg0})"
  }, {
    "trigger": "net_kernel:monitor_nodes/1",
    "contents": "net_kernel:monitor_nodes(${1:arg0})"
  }, {
    "trigger": "net_kernel:protocol_childspecs/0",
    "contents": "net_kernel:protocol_childspecs()"
  }, {
    "trigger": "net_kernel:epmd_module/0",
    "contents": "net_kernel:epmd_module()"
  }, {
    "trigger": "net_kernel:passive_cnct/1",
    "contents": "net_kernel:passive_cnct(${1:arg0})"
  }, {
    "trigger": "net_kernel:connect/1",
    "contents": "net_kernel:connect(${1:arg0})"
  }, {
    "trigger": "net_kernel:disconnect/1",
    "contents": "net_kernel:disconnect(${1:arg0})"
  }, {
    "trigger": "net_kernel:dflag_unicode_io/1",
    "contents": "net_kernel:dflag_unicode_io(${1:arg0})"
  }, {
    "trigger": "beam_block:module/2",
    "contents": "beam_block:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_block:module_info/0",
    "contents": "beam_block:module_info()"
  }, {
    "trigger": "beam_block:module_info/1",
    "contents": "beam_block:module_info(${1:arg0})"
  }, {
    "trigger": "error_logger_tty_h:init/1",
    "contents": "error_logger_tty_h:init(${1:arg0})"
  }, {
    "trigger": "error_logger_tty_h:handle_event/2",
    "contents": "error_logger_tty_h:handle_event(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger_tty_h:handle_info/2",
    "contents": "error_logger_tty_h:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger_tty_h:handle_call/2",
    "contents": "error_logger_tty_h:handle_call(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger_tty_h:terminate/2",
    "contents": "error_logger_tty_h:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger_tty_h:code_change/3",
    "contents": "error_logger_tty_h:code_change(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "error_logger_tty_h:write_event/2",
    "contents": "error_logger_tty_h:write_event(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "error_logger_tty_h:module_info/0",
    "contents": "error_logger_tty_h:module_info()"
  }, {
    "trigger": "error_logger_tty_h:module_info/1",
    "contents": "error_logger_tty_h:module_info(${1:arg0})"
  }, {
    "trigger": "supervisor_bridge:start_link/2",
    "contents": "supervisor_bridge:start_link(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor_bridge:init/1",
    "contents": "supervisor_bridge:init(${1:arg0})"
  }, {
    "trigger": "supervisor_bridge:handle_call/3",
    "contents": "supervisor_bridge:handle_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "supervisor_bridge:handle_cast/2",
    "contents": "supervisor_bridge:handle_cast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor_bridge:handle_info/2",
    "contents": "supervisor_bridge:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor_bridge:terminate/2",
    "contents": "supervisor_bridge:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor_bridge:code_change/3",
    "contents": "supervisor_bridge:code_change(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "supervisor_bridge:behaviour_info/1",
    "contents": "supervisor_bridge:behaviour_info(${1:arg0})"
  }, {
    "trigger": "supervisor_bridge:module_info/0",
    "contents": "supervisor_bridge:module_info()"
  }, {
    "trigger": "supervisor_bridge:module_info/1",
    "contents": "supervisor_bridge:module_info(${1:arg0})"
  }, {
    "trigger": "supervisor_bridge:start_link/3",
    "contents": "supervisor_bridge:start_link(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "shell_default:help/0",
    "contents": "shell_default:help()"
  }, {
    "trigger": "shell_default:bi/1",
    "contents": "shell_default:bi(${1:arg0})"
  }, {
    "trigger": "shell_default:bt/1",
    "contents": "shell_default:bt(${1:arg0})"
  }, {
    "trigger": "shell_default:c/1",
    "contents": "shell_default:c(${1:arg0})"
  }, {
    "trigger": "shell_default:c/2",
    "contents": "shell_default:c(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell_default:cd/1",
    "contents": "shell_default:cd(${1:arg0})"
  }, {
    "trigger": "shell_default:erlangrc/1",
    "contents": "shell_default:erlangrc(${1:arg0})"
  }, {
    "trigger": "shell_default:flush/0",
    "contents": "shell_default:flush()"
  }, {
    "trigger": "shell_default:i/0",
    "contents": "shell_default:i()"
  }, {
    "trigger": "shell_default:i/3",
    "contents": "shell_default:i(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "shell_default:l/1",
    "contents": "shell_default:l(${1:arg0})"
  }, {
    "trigger": "shell_default:lc/1",
    "contents": "shell_default:lc(${1:arg0})"
  }, {
    "trigger": "shell_default:ls/0",
    "contents": "shell_default:ls()"
  }, {
    "trigger": "shell_default:ls/1",
    "contents": "shell_default:ls(${1:arg0})"
  }, {
    "trigger": "shell_default:m/0",
    "contents": "shell_default:m()"
  }, {
    "trigger": "shell_default:m/1",
    "contents": "shell_default:m(${1:arg0})"
  }, {
    "trigger": "shell_default:memory/0",
    "contents": "shell_default:memory()"
  }, {
    "trigger": "shell_default:memory/1",
    "contents": "shell_default:memory(${1:arg0})"
  }, {
    "trigger": "shell_default:nc/1",
    "contents": "shell_default:nc(${1:arg0})"
  }, {
    "trigger": "shell_default:ni/0",
    "contents": "shell_default:ni()"
  }, {
    "trigger": "shell_default:nl/1",
    "contents": "shell_default:nl(${1:arg0})"
  }, {
    "trigger": "shell_default:nregs/0",
    "contents": "shell_default:nregs()"
  }, {
    "trigger": "shell_default:pid/3",
    "contents": "shell_default:pid(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "shell_default:pwd/0",
    "contents": "shell_default:pwd()"
  }, {
    "trigger": "shell_default:q/0",
    "contents": "shell_default:q()"
  }, {
    "trigger": "shell_default:regs/0",
    "contents": "shell_default:regs()"
  }, {
    "trigger": "shell_default:xm/1",
    "contents": "shell_default:xm(${1:arg0})"
  }, {
    "trigger": "shell_default:y/1",
    "contents": "shell_default:y(${1:arg0})"
  }, {
    "trigger": "shell_default:y/2",
    "contents": "shell_default:y(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell_default:iaa/1",
    "contents": "shell_default:iaa(${1:arg0})"
  }, {
    "trigger": "shell_default:iaa/2",
    "contents": "shell_default:iaa(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell_default:ist/1",
    "contents": "shell_default:ist(${1:arg0})"
  }, {
    "trigger": "shell_default:ia/1",
    "contents": "shell_default:ia(${1:arg0})"
  }, {
    "trigger": "shell_default:ia/3",
    "contents": "shell_default:ia(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "shell_default:ia/2",
    "contents": "shell_default:ia(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell_default:ia/4",
    "contents": "shell_default:ia(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "shell_default:ib/2",
    "contents": "shell_default:ib(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell_default:ib/3",
    "contents": "shell_default:ib(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "shell_default:ibd/2",
    "contents": "shell_default:ibd(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell_default:ibe/2",
    "contents": "shell_default:ibe(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell_default:iba/3",
    "contents": "shell_default:iba(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "shell_default:ibc/3",
    "contents": "shell_default:ibc(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "shell_default:ic/0",
    "contents": "shell_default:ic()"
  }, {
    "trigger": "shell_default:ih/0",
    "contents": "shell_default:ih()"
  }, {
    "trigger": "shell_default:ii/1",
    "contents": "shell_default:ii(${1:arg0})"
  }, {
    "trigger": "shell_default:ii/2",
    "contents": "shell_default:ii(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell_default:il/0",
    "contents": "shell_default:il()"
  }, {
    "trigger": "shell_default:im/0",
    "contents": "shell_default:im()"
  }, {
    "trigger": "shell_default:ini/1",
    "contents": "shell_default:ini(${1:arg0})"
  }, {
    "trigger": "shell_default:ini/2",
    "contents": "shell_default:ini(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell_default:inq/1",
    "contents": "shell_default:inq(${1:arg0})"
  }, {
    "trigger": "shell_default:ip/0",
    "contents": "shell_default:ip()"
  }, {
    "trigger": "shell_default:ipb/0",
    "contents": "shell_default:ipb()"
  }, {
    "trigger": "shell_default:ipb/1",
    "contents": "shell_default:ipb(${1:arg0})"
  }, {
    "trigger": "shell_default:iq/1",
    "contents": "shell_default:iq(${1:arg0})"
  }, {
    "trigger": "shell_default:ir/2",
    "contents": "shell_default:ir(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "shell_default:ir/3",
    "contents": "shell_default:ir(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "shell_default:ir/1",
    "contents": "shell_default:ir(${1:arg0})"
  }, {
    "trigger": "shell_default:ir/0",
    "contents": "shell_default:ir()"
  }, {
    "trigger": "shell_default:iv/0",
    "contents": "shell_default:iv()"
  }, {
    "trigger": "shell_default:module_info/0",
    "contents": "shell_default:module_info()"
  }, {
    "trigger": "shell_default:module_info/1",
    "contents": "shell_default:module_info(${1:arg0})"
  }, {
    "trigger": "beam_dict:module_info/0",
    "contents": "beam_dict:module_info()"
  }, {
    "trigger": "beam_dict:module_info/1",
    "contents": "beam_dict:module_info(${1:arg0})"
  }, {
    "trigger": "beam_dict:import/4",
    "contents": "beam_dict:import(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "beam_dict:string/2",
    "contents": "beam_dict:string(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_dict:literal/2",
    "contents": "beam_dict:literal(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_dict:lambda/3",
    "contents": "beam_dict:lambda(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "beam_dict:line/2",
    "contents": "beam_dict:line(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_dict:line_table/1",
    "contents": "beam_dict:line_table(${1:arg0})"
  }, {
    "trigger": "beam_dict:literal_table/1",
    "contents": "beam_dict:literal_table(${1:arg0})"
  }, {
    "trigger": "beam_dict:lambda_table/1",
    "contents": "beam_dict:lambda_table(${1:arg0})"
  }, {
    "trigger": "beam_dict:string_table/1",
    "contents": "beam_dict:string_table(${1:arg0})"
  }, {
    "trigger": "beam_dict:local_table/1",
    "contents": "beam_dict:local_table(${1:arg0})"
  }, {
    "trigger": "beam_dict:export_table/1",
    "contents": "beam_dict:export_table(${1:arg0})"
  }, {
    "trigger": "beam_dict:import_table/1",
    "contents": "beam_dict:import_table(${1:arg0})"
  }, {
    "trigger": "beam_dict:atom_table/1",
    "contents": "beam_dict:atom_table(${1:arg0})"
  }, {
    "trigger": "beam_dict:highest_opcode/1",
    "contents": "beam_dict:highest_opcode(${1:arg0})"
  }, {
    "trigger": "beam_dict:opcode/2",
    "contents": "beam_dict:opcode(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_dict:export/4",
    "contents": "beam_dict:export(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "beam_dict:local/4",
    "contents": "beam_dict:local(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "beam_dict:fname/2",
    "contents": "beam_dict:fname(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_dict:atom/2",
    "contents": "beam_dict:atom(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "beam_dict:new/0",
    "contents": "beam_dict:new()"
  }, {
    "trigger": "gb_trees:is_empty/1",
    "contents": "gb_trees:is_empty(${1:arg0})"
  }, {
    "trigger": "gb_trees:size/1",
    "contents": "gb_trees:size(${1:arg0})"
  }, {
    "trigger": "gb_trees:is_defined/2",
    "contents": "gb_trees:is_defined(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_trees:get/2",
    "contents": "gb_trees:get(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_trees:update/3",
    "contents": "gb_trees:update(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gb_trees:enter/3",
    "contents": "gb_trees:enter(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gb_trees:balance/1",
    "contents": "gb_trees:balance(${1:arg0})"
  }, {
    "trigger": "gb_trees:from_orddict/1",
    "contents": "gb_trees:from_orddict(${1:arg0})"
  }, {
    "trigger": "gb_trees:delete_any/2",
    "contents": "gb_trees:delete_any(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_trees:take_smallest/1",
    "contents": "gb_trees:take_smallest(${1:arg0})"
  }, {
    "trigger": "gb_trees:smallest/1",
    "contents": "gb_trees:smallest(${1:arg0})"
  }, {
    "trigger": "gb_trees:take_largest/1",
    "contents": "gb_trees:take_largest(${1:arg0})"
  }, {
    "trigger": "gb_trees:largest/1",
    "contents": "gb_trees:largest(${1:arg0})"
  }, {
    "trigger": "gb_trees:to_list/1",
    "contents": "gb_trees:to_list(${1:arg0})"
  }, {
    "trigger": "gb_trees:keys/1",
    "contents": "gb_trees:keys(${1:arg0})"
  }, {
    "trigger": "gb_trees:values/1",
    "contents": "gb_trees:values(${1:arg0})"
  }, {
    "trigger": "gb_trees:iterator/1",
    "contents": "gb_trees:iterator(${1:arg0})"
  }, {
    "trigger": "gb_trees:next/1",
    "contents": "gb_trees:next(${1:arg0})"
  }, {
    "trigger": "gb_trees:map/2",
    "contents": "gb_trees:map(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_trees:module_info/0",
    "contents": "gb_trees:module_info()"
  }, {
    "trigger": "gb_trees:module_info/1",
    "contents": "gb_trees:module_info(${1:arg0})"
  }, {
    "trigger": "gb_trees:insert/3",
    "contents": "gb_trees:insert(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "gb_trees:delete/2",
    "contents": "gb_trees:delete(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_trees:lookup/2",
    "contents": "gb_trees:lookup(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "gb_trees:empty/0",
    "contents": "gb_trees:empty()"
  }, {
    "trigger": "erl_expand_records:module_info/0",
    "contents": "erl_expand_records:module_info()"
  }, {
    "trigger": "erl_expand_records:module_info/1",
    "contents": "erl_expand_records:module_info(${1:arg0})"
  }, {
    "trigger": "erl_expand_records:module/2",
    "contents": "erl_expand_records:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_bifs:module_info/0",
    "contents": "erl_bifs:module_info()"
  }, {
    "trigger": "erl_bifs:module_info/1",
    "contents": "erl_bifs:module_info(${1:arg0})"
  }, {
    "trigger": "erl_bifs:is_exit_bif/3",
    "contents": "erl_bifs:is_exit_bif(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_bifs:is_safe/3",
    "contents": "erl_bifs:is_safe(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "erl_bifs:is_pure/3",
    "contents": "erl_bifs:is_pure(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "application_master:start_type/0",
    "contents": "application_master:start_type()"
  }, {
    "trigger": "application_master:get_child/1",
    "contents": "application_master:get_child(${1:arg0})"
  }, {
    "trigger": "application_master:init/4",
    "contents": "application_master:init(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "application_master:start_it/4",
    "contents": "application_master:start_it(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "application_master:module_info/0",
    "contents": "application_master:module_info()"
  }, {
    "trigger": "application_master:module_info/1",
    "contents": "application_master:module_info(${1:arg0})"
  }, {
    "trigger": "application_master:stop/1",
    "contents": "application_master:stop(${1:arg0})"
  }, {
    "trigger": "application_master:start_link/2",
    "contents": "application_master:start_link(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "otp_ring0:start/2",
    "contents": "otp_ring0:start(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "otp_ring0:module_info/0",
    "contents": "otp_ring0:module_info()"
  }, {
    "trigger": "otp_ring0:module_info/1",
    "contents": "otp_ring0:module_info(${1:arg0})"
  }, {
    "trigger": "sys_core_dsetel:module_info/0",
    "contents": "sys_core_dsetel:module_info()"
  }, {
    "trigger": "sys_core_dsetel:module_info/1",
    "contents": "sys_core_dsetel:module_info(${1:arg0})"
  }, {
    "trigger": "sys_core_dsetel:module/2",
    "contents": "sys_core_dsetel:module(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_parse:normalise/1",
    "contents": "erl_parse:normalise(${1:arg0})"
  }, {
    "trigger": "erl_parse:abstract/2",
    "contents": "erl_parse:abstract(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_parse:tokens/1",
    "contents": "erl_parse:tokens(${1:arg0})"
  }, {
    "trigger": "erl_parse:tokens/2",
    "contents": "erl_parse:tokens(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_parse:inop_prec/1",
    "contents": "erl_parse:inop_prec(${1:arg0})"
  }, {
    "trigger": "erl_parse:preop_prec/1",
    "contents": "erl_parse:preop_prec(${1:arg0})"
  }, {
    "trigger": "erl_parse:func_prec/0",
    "contents": "erl_parse:func_prec()"
  }, {
    "trigger": "erl_parse:max_prec/0",
    "contents": "erl_parse:max_prec()"
  }, {
    "trigger": "erl_parse:get_attributes/1",
    "contents": "erl_parse:get_attributes(${1:arg0})"
  }, {
    "trigger": "erl_parse:parse/1",
    "contents": "erl_parse:parse(${1:arg0})"
  }, {
    "trigger": "erl_parse:parse_and_scan/1",
    "contents": "erl_parse:parse_and_scan(${1:arg0})"
  }, {
    "trigger": "erl_parse:format_error/1",
    "contents": "erl_parse:format_error(${1:arg0})"
  }, {
    "trigger": "erl_parse:module_info/0",
    "contents": "erl_parse:module_info()"
  }, {
    "trigger": "erl_parse:module_info/1",
    "contents": "erl_parse:module_info(${1:arg0})"
  }, {
    "trigger": "erl_parse:set_line/2",
    "contents": "erl_parse:set_line(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_parse:get_attribute/2",
    "contents": "erl_parse:get_attribute(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_parse:abstract/1",
    "contents": "erl_parse:abstract(${1:arg0})"
  }, {
    "trigger": "erl_parse:parse_form/1",
    "contents": "erl_parse:parse_form(${1:arg0})"
  }, {
    "trigger": "erl_parse:parse_term/1",
    "contents": "erl_parse:parse_term(${1:arg0})"
  }, {
    "trigger": "erl_parse:parse_exprs/1",
    "contents": "erl_parse:parse_exprs(${1:arg0})"
  }, {
    "trigger": "init:get_arguments/0",
    "contents": "init:get_arguments()"
  }, {
    "trigger": "init:get_plain_arguments/0",
    "contents": "init:get_plain_arguments()"
  }, {
    "trigger": "init:get_argument/1",
    "contents": "init:get_argument(${1:arg0})"
  }, {
    "trigger": "init:script_id/0",
    "contents": "init:script_id()"
  }, {
    "trigger": "init:get_status/0",
    "contents": "init:get_status()"
  }, {
    "trigger": "init:fetch_loaded/0",
    "contents": "init:fetch_loaded()"
  }, {
    "trigger": "init:ensure_loaded/1",
    "contents": "init:ensure_loaded(${1:arg0})"
  }, {
    "trigger": "init:make_permanent/2",
    "contents": "init:make_permanent(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "init:notify_when_started/1",
    "contents": "init:notify_when_started(${1:arg0})"
  }, {
    "trigger": "init:wait_until_started/0",
    "contents": "init:wait_until_started()"
  }, {
    "trigger": "init:restart/0",
    "contents": "init:restart()"
  }, {
    "trigger": "init:reboot/0",
    "contents": "init:reboot()"
  }, {
    "trigger": "init:stop/0",
    "contents": "init:stop()"
  }, {
    "trigger": "init:stop/1",
    "contents": "init:stop(${1:arg0})"
  }, {
    "trigger": "init:boot/1",
    "contents": "init:boot(${1:arg0})"
  }, {
    "trigger": "init:code_path_choice/0",
    "contents": "init:code_path_choice()"
  }, {
    "trigger": "init:objfile_extension/0",
    "contents": "init:objfile_extension()"
  }, {
    "trigger": "init:archive_extension/0",
    "contents": "init:archive_extension()"
  }, {
    "trigger": "init:run_on_load_handlers/0",
    "contents": "init:run_on_load_handlers()"
  }, {
    "trigger": "init:module_info/0",
    "contents": "init:module_info()"
  }, {
    "trigger": "init:module_info/1",
    "contents": "init:module_info(${1:arg0})"
  }, {
    "trigger": "edlin_expand:module_info/0",
    "contents": "edlin_expand:module_info()"
  }, {
    "trigger": "edlin_expand:module_info/1",
    "contents": "edlin_expand:module_info(${1:arg0})"
  }, {
    "trigger": "edlin_expand:expand/1",
    "contents": "edlin_expand:expand(${1:arg0})"
  }, {
    "trigger": "edlin_expand:format_matches/1",
    "contents": "edlin_expand:format_matches(${1:arg0})"
  }, {
    "trigger": "sys:suspend/1",
    "contents": "sys:suspend(${1:arg0})"
  }, {
    "trigger": "sys:suspend/2",
    "contents": "sys:suspend(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sys:resume/1",
    "contents": "sys:resume(${1:arg0})"
  }, {
    "trigger": "sys:resume/2",
    "contents": "sys:resume(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sys:get_status/1",
    "contents": "sys:get_status(${1:arg0})"
  }, {
    "trigger": "sys:get_status/2",
    "contents": "sys:get_status(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sys:get_state/1",
    "contents": "sys:get_state(${1:arg0})"
  }, {
    "trigger": "sys:get_state/2",
    "contents": "sys:get_state(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sys:replace_state/2",
    "contents": "sys:replace_state(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sys:replace_state/3",
    "contents": "sys:replace_state(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sys:change_code/4",
    "contents": "sys:change_code(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "sys:change_code/5",
    "contents": "sys:change_code(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4})"
  }, {
    "trigger": "sys:log/2",
    "contents": "sys:log(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sys:log/3",
    "contents": "sys:log(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sys:trace/2",
    "contents": "sys:trace(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sys:trace/3",
    "contents": "sys:trace(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sys:log_to_file/2",
    "contents": "sys:log_to_file(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sys:log_to_file/3",
    "contents": "sys:log_to_file(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sys:statistics/2",
    "contents": "sys:statistics(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sys:statistics/3",
    "contents": "sys:statistics(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sys:no_debug/1",
    "contents": "sys:no_debug(${1:arg0})"
  }, {
    "trigger": "sys:no_debug/2",
    "contents": "sys:no_debug(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sys:install/2",
    "contents": "sys:install(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sys:install/3",
    "contents": "sys:install(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sys:remove/2",
    "contents": "sys:remove(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "sys:remove/3",
    "contents": "sys:remove(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sys:handle_system_msg/6",
    "contents": "sys:handle_system_msg(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "sys:suspend_loop_hib/6",
    "contents": "sys:suspend_loop_hib(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5})"
  }, {
    "trigger": "sys:module_info/0",
    "contents": "sys:module_info()"
  }, {
    "trigger": "sys:module_info/1",
    "contents": "sys:module_info(${1:arg0})"
  }, {
    "trigger": "sys:get_debug/3",
    "contents": "sys:get_debug(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "sys:print_log/1",
    "contents": "sys:print_log(${1:arg0})"
  }, {
    "trigger": "sys:debug_options/1",
    "contents": "sys:debug_options(${1:arg0})"
  }, {
    "trigger": "sys:handle_debug/4",
    "contents": "sys:handle_debug(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "sys:handle_system_msg/7",
    "contents": "sys:handle_system_msg(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3}, ${5:arg4}, ${6:arg5}, ${7:arg6})"
  }, {
    "trigger": "erl_prim_loader:get_path/0",
    "contents": "erl_prim_loader:get_path()"
  }, {
    "trigger": "erl_prim_loader:list_dir/1",
    "contents": "erl_prim_loader:list_dir(${1:arg0})"
  }, {
    "trigger": "erl_prim_loader:get_cwd/0",
    "contents": "erl_prim_loader:get_cwd()"
  }, {
    "trigger": "erl_prim_loader:get_cwd/1",
    "contents": "erl_prim_loader:get_cwd(${1:arg0})"
  }, {
    "trigger": "erl_prim_loader:set_primary_archive/4",
    "contents": "erl_prim_loader:set_primary_archive(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "erl_prim_loader:release_archives/0",
    "contents": "erl_prim_loader:release_archives()"
  }, {
    "trigger": "erl_prim_loader:prim_init/0",
    "contents": "erl_prim_loader:prim_init()"
  }, {
    "trigger": "erl_prim_loader:prim_get_file/2",
    "contents": "erl_prim_loader:prim_get_file(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_prim_loader:prim_list_dir/2",
    "contents": "erl_prim_loader:prim_list_dir(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_prim_loader:prim_read_file_info/2",
    "contents": "erl_prim_loader:prim_read_file_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_prim_loader:prim_get_cwd/2",
    "contents": "erl_prim_loader:prim_get_cwd(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_prim_loader:module_info/0",
    "contents": "erl_prim_loader:module_info()"
  }, {
    "trigger": "erl_prim_loader:module_info/1",
    "contents": "erl_prim_loader:module_info(${1:arg0})"
  }, {
    "trigger": "erl_prim_loader:read_file_info/1",
    "contents": "erl_prim_loader:read_file_info(${1:arg0})"
  }, {
    "trigger": "erl_prim_loader:get_files/2",
    "contents": "erl_prim_loader:get_files(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "erl_prim_loader:get_file/1",
    "contents": "erl_prim_loader:get_file(${1:arg0})"
  }, {
    "trigger": "erl_prim_loader:set_path/1",
    "contents": "erl_prim_loader:set_path(${1:arg0})"
  }, {
    "trigger": "erl_prim_loader:start/3",
    "contents": "erl_prim_loader:start(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "supervisor:start_link/2",
    "contents": "supervisor:start_link(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor:start_child/2",
    "contents": "supervisor:start_child(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor:restart_child/2",
    "contents": "supervisor:restart_child(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor:delete_child/2",
    "contents": "supervisor:delete_child(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor:terminate_child/2",
    "contents": "supervisor:terminate_child(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor:which_children/1",
    "contents": "supervisor:which_children(${1:arg0})"
  }, {
    "trigger": "supervisor:count_children/1",
    "contents": "supervisor:count_children(${1:arg0})"
  }, {
    "trigger": "supervisor:check_childspecs/1",
    "contents": "supervisor:check_childspecs(${1:arg0})"
  }, {
    "trigger": "supervisor:try_again_restart/2",
    "contents": "supervisor:try_again_restart(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor:init/1",
    "contents": "supervisor:init(${1:arg0})"
  }, {
    "trigger": "supervisor:handle_call/3",
    "contents": "supervisor:handle_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "supervisor:handle_cast/2",
    "contents": "supervisor:handle_cast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor:handle_info/2",
    "contents": "supervisor:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor:terminate/2",
    "contents": "supervisor:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "supervisor:code_change/3",
    "contents": "supervisor:code_change(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "supervisor:behaviour_info/1",
    "contents": "supervisor:behaviour_info(${1:arg0})"
  }, {
    "trigger": "supervisor:module_info/0",
    "contents": "supervisor:module_info()"
  }, {
    "trigger": "supervisor:module_info/1",
    "contents": "supervisor:module_info(${1:arg0})"
  }, {
    "trigger": "supervisor:start_link/3",
    "contents": "supervisor:start_link(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "application_controller:start/1",
    "contents": "application_controller:start(${1:arg0})"
  }, {
    "trigger": "application_controller:load_application/1",
    "contents": "application_controller:load_application(${1:arg0})"
  }, {
    "trigger": "application_controller:unload_application/1",
    "contents": "application_controller:unload_application(${1:arg0})"
  }, {
    "trigger": "application_controller:start_application/2",
    "contents": "application_controller:start_application(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:start_boot_application/2",
    "contents": "application_controller:start_boot_application(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:stop_application/1",
    "contents": "application_controller:stop_application(${1:arg0})"
  }, {
    "trigger": "application_controller:which_applications/0",
    "contents": "application_controller:which_applications()"
  }, {
    "trigger": "application_controller:which_applications/1",
    "contents": "application_controller:which_applications(${1:arg0})"
  }, {
    "trigger": "application_controller:loaded_applications/0",
    "contents": "application_controller:loaded_applications()"
  }, {
    "trigger": "application_controller:info/0",
    "contents": "application_controller:info()"
  }, {
    "trigger": "application_controller:control_application/1",
    "contents": "application_controller:control_application(${1:arg0})"
  }, {
    "trigger": "application_controller:change_application_data/2",
    "contents": "application_controller:change_application_data(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:prep_config_change/0",
    "contents": "application_controller:prep_config_change()"
  }, {
    "trigger": "application_controller:config_change/1",
    "contents": "application_controller:config_change(${1:arg0})"
  }, {
    "trigger": "application_controller:get_pid_env/2",
    "contents": "application_controller:get_pid_env(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:get_env/2",
    "contents": "application_controller:get_env(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:get_pid_all_env/1",
    "contents": "application_controller:get_pid_all_env(${1:arg0})"
  }, {
    "trigger": "application_controller:get_all_env/1",
    "contents": "application_controller:get_all_env(${1:arg0})"
  }, {
    "trigger": "application_controller:get_pid_key/2",
    "contents": "application_controller:get_pid_key(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:get_key/2",
    "contents": "application_controller:get_key(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:get_pid_all_key/1",
    "contents": "application_controller:get_pid_all_key(${1:arg0})"
  }, {
    "trigger": "application_controller:get_all_key/1",
    "contents": "application_controller:get_all_key(${1:arg0})"
  }, {
    "trigger": "application_controller:start_type/1",
    "contents": "application_controller:start_type(${1:arg0})"
  }, {
    "trigger": "application_controller:get_master/1",
    "contents": "application_controller:get_master(${1:arg0})"
  }, {
    "trigger": "application_controller:get_application/1",
    "contents": "application_controller:get_application(${1:arg0})"
  }, {
    "trigger": "application_controller:get_application_module/1",
    "contents": "application_controller:get_application_module(${1:arg0})"
  }, {
    "trigger": "application_controller:permit_application/2",
    "contents": "application_controller:permit_application(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:set_env/3",
    "contents": "application_controller:set_env(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "application_controller:set_env/4",
    "contents": "application_controller:set_env(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "application_controller:unset_env/2",
    "contents": "application_controller:unset_env(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:unset_env/3",
    "contents": "application_controller:unset_env(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "application_controller:handle_call/3",
    "contents": "application_controller:handle_call(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "application_controller:handle_cast/2",
    "contents": "application_controller:handle_cast(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:handle_info/2",
    "contents": "application_controller:handle_info(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:terminate/2",
    "contents": "application_controller:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:code_change/3",
    "contents": "application_controller:code_change(${1:arg0}, ${2:arg1}, ${3:arg2})"
  }, {
    "trigger": "application_controller:get_loaded/1",
    "contents": "application_controller:get_loaded(${1:arg0})"
  }, {
    "trigger": "application_controller:init_starter/4",
    "contents": "application_controller:init_starter(${1:arg0}, ${2:arg1}, ${3:arg2}, ${4:arg3})"
  }, {
    "trigger": "application_controller:do_config_diff/2",
    "contents": "application_controller:do_config_diff(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:test_change_apps/2",
    "contents": "application_controller:test_change_apps(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "application_controller:module_info/0",
    "contents": "application_controller:module_info()"
  }, {
    "trigger": "application_controller:module_info/1",
    "contents": "application_controller:module_info(${1:arg0})"
  }, {
    "trigger": "user_sup:start/0",
    "contents": "user_sup:start()"
  }, {
    "trigger": "user_sup:init/1",
    "contents": "user_sup:init(${1:arg0})"
  }, {
    "trigger": "user_sup:relay/1",
    "contents": "user_sup:relay(${1:arg0})"
  }, {
    "trigger": "user_sup:terminate/2",
    "contents": "user_sup:terminate(${1:arg0}, ${2:arg1})"
  }, {
    "trigger": "user_sup:module_info/0",
    "contents": "user_sup:module_info()"
  }, {
    "trigger": "user_sup:module_info/1",
    "contents": "user_sup:module_info(${1:arg0})"
  }]
}
